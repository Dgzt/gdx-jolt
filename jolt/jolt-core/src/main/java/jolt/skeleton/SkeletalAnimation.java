/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.skeleton;

import jolt.idl.IDLBase;

public class SkeletalAnimation extends IDLBase {

    private ArraySkeletonAnimatedJoint ArraySkeletonAnimatedJoint_TEMP_GEN_0;

    static public final SkeletalAnimation T_01 = new SkeletalAnimation((byte) 1, (char) 1);

    static public final SkeletalAnimation T_02 = new SkeletalAnimation((byte) 1, (char) 1);

    static public final SkeletalAnimation T_03 = new SkeletalAnimation((byte) 1, (char) 1);

    public SkeletalAnimation() {
        long addr = internal_native_create();
        getNativeData().reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new SkeletalAnimation();
*/
    private static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SkeletalAnimation(byte b, char c) {
    }

    public float GetDuration() {
        return internal_native_GetDuration((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SkeletalAnimation* nativeObject = (SkeletalAnimation*)this_addr;
return nativeObject->GetDuration();
*/
    private static native float internal_native_GetDuration(long this_addr);

    public void ScaleJoints(float inScale) {
        internal_native_ScaleJoints((long) getNativeData().getCPointer(), inScale);
    }

    /*[-JNI;-NATIVE]
SkeletalAnimation* nativeObject = (SkeletalAnimation*)this_addr;
nativeObject->ScaleJoints((float)inScale);
*/
    private static native void internal_native_ScaleJoints(long this_addr, float inScale);

    public void Sample(float inTime, SkeletonPose ioPose) {
        internal_native_Sample((long) getNativeData().getCPointer(), inTime, (long) (ioPose != null ? ioPose.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
SkeletalAnimation* nativeObject = (SkeletalAnimation*)this_addr;
nativeObject->Sample((float)inTime, *((SkeletonPose* )ioPose_addr));
*/
    private static native void internal_native_Sample(long this_addr, float inTime, long ioPose_addr);

    public ArraySkeletonAnimatedJoint GetAnimatedJoints() {
        long pointer = internal_native_GetAnimatedJoints((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (ArraySkeletonAnimatedJoint_TEMP_GEN_0 == null)
            ArraySkeletonAnimatedJoint_TEMP_GEN_0 = new ArraySkeletonAnimatedJoint((byte) 1, (char) 1);
        ArraySkeletonAnimatedJoint_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return ArraySkeletonAnimatedJoint_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
SkeletalAnimation* nativeObject = (SkeletalAnimation*)this_addr;
return (jlong)&nativeObject->GetAnimatedJoints();
*/
    private static native long internal_native_GetAnimatedJoints(long this_addr);

    public static long native_create() {
        return internal_native_create();
    }

    public static float native_GetDuration(long this_addr) {
        return internal_native_GetDuration(this_addr);
    }

    public static void native_ScaleJoints(long this_addr, float inScale) {
        internal_native_ScaleJoints(this_addr, inScale);
    }

    public static void native_Sample(long this_addr, float inTime, long ioPose_addr) {
        internal_native_Sample(this_addr, inTime, ioPose_addr);
    }

    public static long native_GetAnimatedJoints(long this_addr) {
        return internal_native_GetAnimatedJoints(this_addr);
    }
}
