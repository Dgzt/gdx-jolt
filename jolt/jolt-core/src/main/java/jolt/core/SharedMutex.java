/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.core;

import jolt.idl.IDLBase;

public class SharedMutex extends IDLBase {

    static public final SharedMutex NULL = SharedMutex.createInstance();

    static public final SharedMutex T_01 = SharedMutex.createInstance();

    static public final SharedMutex T_02 = SharedMutex.createInstance();

    static public final SharedMutex T_03 = SharedMutex.createInstance();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected SharedMutex(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static SharedMutex createInstance() {
        return new SharedMutex((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
SharedMutex* nativeObject = (SharedMutex*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);
}
