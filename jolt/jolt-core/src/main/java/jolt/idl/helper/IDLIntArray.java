/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package jolt.idl.helper;

import jolt.idl.IDLBase;

public class IDLIntArray extends IDLBase {

    public IDLIntArray(int size) {
        long addr = internal_native_create_int(size);
        getNativeData().reset(addr, true);
    }

    public void copy(int[] array) {
        int length = array.length;
        resize(length);
        for (int i = 0; i < length; i++) {
            int value = array[i];
            setValue(i, value);
        }
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)new IDLIntArray((int)size);
    */
    private static native long internal_native_create_int(int size);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public IDLIntArray(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*
      [-JNI;-NATIVE]
      IDLIntArray* nativeObject = (IDLIntArray*)this_addr;
      delete nativeObject;
    */
    private static native void internal_native_deleteNative(long this_addr);

    public void resize(int size) {
        internal_native_resize((long) getNativeData().getCPointer(), size);
    }

    /*
      [-JNI;-NATIVE]
      IDLIntArray* nativeObject = (IDLIntArray*)this_addr;
      nativeObject->resize((int)size);
    */
    private static native void internal_native_resize(long this_addr, int size);

    public void clear() {
        internal_native_clear((long) getNativeData().getCPointer());
    }

    /*
      [-JNI;-NATIVE]
      IDLIntArray* nativeObject = (IDLIntArray*)this_addr;
      nativeObject->clear();
    */
    private static native void internal_native_clear(long this_addr);

    public int getValue(int index) {
        return internal_native_getValue((long) getNativeData().getCPointer(), index);
    }

    /*
      [-JNI;-NATIVE]
      IDLIntArray* nativeObject = (IDLIntArray*)this_addr;
      return nativeObject->getValue((int)index);
    */
    private static native int internal_native_getValue(long this_addr, int index);

    public void setValue(int index, int value) {
        internal_native_setValue((long) getNativeData().getCPointer(), index, value);
    }

    /*
      [-JNI;-NATIVE]
      IDLIntArray* nativeObject = (IDLIntArray*)this_addr;
      nativeObject->setValue((int)index, (int)value);
    */
    private static native void internal_native_setValue(long this_addr, int index, int value);

    public int getSize() {
        return internal_native_getSize((long) getNativeData().getCPointer());
    }

    /*
      [-JNI;-NATIVE]
      IDLIntArray* nativeObject = (IDLIntArray*)this_addr;
      return nativeObject->getSize();
    */
    private static native int internal_native_getSize(long this_addr);

    public long getPointer() {
        return internal_native_getPointer((long) getNativeData().getCPointer());
    }

    /*
      [-JNI;-NATIVE]
      IDLIntArray* nativeObject = (IDLIntArray*)this_addr;
      return (jlong)nativeObject->getPointer();
    */
    private static native long internal_native_getPointer(long this_addr);

    public void copy(IDLIntArray src, int srcOffset, int destOffset, int length) {
        internal_native_copy((long) getNativeData().getCPointer(), (long) (src != null ? src.getNativeData().getCPointer() : 0), srcOffset, destOffset, length);
    }

    /*
      [-JNI;-NATIVE]
      IDLIntArray* nativeObject = (IDLIntArray*)this_addr;
      nativeObject->copy(*((IDLIntArray* )src_addr), (int)srcOffset, (int)destOffset, (int)length);
    */
    private static native void internal_native_copy(long this_addr, long src_addr, int srcOffset, int destOffset, int length);

    public static long native_create_int(int size) {
        return internal_native_create_int(size);
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }

    public static void native_resize(long this_addr, int size) {
        internal_native_resize(this_addr, size);
    }

    public static void native_clear(long this_addr) {
        internal_native_clear(this_addr);
    }

    public static int native_getValue(long this_addr, int index) {
        return internal_native_getValue(this_addr, index);
    }

    public static void native_setValue(long this_addr, int index, int value) {
        internal_native_setValue(this_addr, index, value);
    }

    public static int native_getSize(long this_addr) {
        return internal_native_getSize(this_addr);
    }

    public static long native_getPointer(long this_addr) {
        return internal_native_getPointer(this_addr);
    }

    public static void native_copy(long this_addr, long src_addr, int srcOffset, int destOffset, int length) {
        internal_native_copy(this_addr, src_addr, srcOffset, destOffset, length);
    }
}
