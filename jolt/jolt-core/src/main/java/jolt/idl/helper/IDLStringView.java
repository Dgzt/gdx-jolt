/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package jolt.idl.helper;

import jolt.idl.IDLBase;

public class IDLStringView extends IDLBase {

    public static IDLStringView TMP_EMPTY_1 = new IDLStringView((byte) 0, '0');

    public static IDLStringView TMP_1 = new IDLStringView();

    public static IDLStringView TMP_2 = new IDLStringView();

    public static void disposeTEMP() {
        TMP_1.dispose();
        TMP_2.dispose();
    }

    public IDLStringView() {
    }

    public IDLStringView(byte b, char c) {
    }

    public String data() {
        String text = internal_native_data(getNativeData().getCPointer());
        return text;
    }

    /*
      [-JNI;-NATIVE]
              IDLStringView* nativeObject = (IDLStringView*)this_addr;
              const char* str = nativeObject->data();
              jstring jstrBuf = env->NewStringUTF(str);
              return jstrBuf;
    */
    private static native String internal_native_data(long this_addr);

    public IDLStringView(String text) {
        long addr = internal_native_create_String(text);
        getNativeData().reset(addr, true);
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)new IDLStringView(text);
    */
    public static native long internal_native_create_String(String text);

    public IDLStringView(String text, int size) {
        long addr = internal_native_create_String_int(text, size);
        getNativeData().reset(addr, true);
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)new IDLStringView(text, (int)size);
    */
    public static native long internal_native_create_String_int(String text, int size);

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*
      [-JNI;-NATIVE]
      IDLStringView* nativeObject = (IDLStringView*)this_addr;
      delete nativeObject;
    */
    public static native void internal_native_deleteNative(long this_addr);

    public int size() {
        return internal_native_size((long) getNativeData().getCPointer());
    }

    /*
      [-JNI;-NATIVE]
      IDLStringView* nativeObject = (IDLStringView*)this_addr;
      return nativeObject->size();
    */
    public static native int internal_native_size(long this_addr);

    public byte at(int index) {
        return internal_native_at((long) getNativeData().getCPointer(), index);
    }

    /*
      [-JNI;-NATIVE]
      IDLStringView* nativeObject = (IDLStringView*)this_addr;
      return nativeObject->at((int)index);
    */
    public static native byte internal_native_at(long this_addr, int index);
}
