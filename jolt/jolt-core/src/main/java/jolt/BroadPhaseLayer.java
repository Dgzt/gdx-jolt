/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt;

import jolt.idl.IDLBase;

public class BroadPhaseLayer extends IDLBase {

    static public final BroadPhaseLayer T_01 = new BroadPhaseLayer((byte) 1, (char) 1);

    static public final BroadPhaseLayer T_02 = new BroadPhaseLayer((byte) 1, (char) 1);

    static public final BroadPhaseLayer T_03 = new BroadPhaseLayer((byte) 1, (char) 1);

    public BroadPhaseLayer(short inLayer) {
        long addr = internal_native_create_short(inLayer);
        getNativeData().reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new BroadPhaseLayer(inLayer);
*/
    private static native long internal_native_create_short(short inLayer);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public BroadPhaseLayer(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
BroadPhaseLayer* nativeObject = (BroadPhaseLayer*)this_addr;
delete nativeObject;
*/
    private static native void internal_native_deleteNative(long this_addr);

    public short GetValue() {
        return internal_native_GetValue((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
BroadPhaseLayer* nativeObject = (BroadPhaseLayer*)this_addr;
return nativeObject->GetValue();
*/
    private static native short internal_native_GetValue(long this_addr);

    public static long native_create_short(short inLayer) {
        return internal_native_create_short(inLayer);
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }

    public static short native_GetValue(long this_addr) {
        return internal_native_GetValue(this_addr);
    }
}
