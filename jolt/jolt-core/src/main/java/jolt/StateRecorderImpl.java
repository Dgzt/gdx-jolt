/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt;

public class StateRecorderImpl extends StateRecorder {

    static public final StateRecorderImpl T_01 = new StateRecorderImpl((byte) 1, (char) 1);

    static public final StateRecorderImpl T_02 = new StateRecorderImpl((byte) 1, (char) 1);

    static public final StateRecorderImpl T_03 = new StateRecorderImpl((byte) 1, (char) 1);

    public StateRecorderImpl() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new StateRecorderImpl();
*/
    private static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public StateRecorderImpl(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
StateRecorderImpl* nativeObject = (StateRecorderImpl*)this_addr;
delete nativeObject;
*/
    private static native void internal_native_deleteNative(long this_addr);

    public void Clear() {
        internal_native_Clear((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
StateRecorderImpl* nativeObject = (StateRecorderImpl*)this_addr;
nativeObject->Clear();
*/
    private static native void internal_native_Clear(long this_addr);

    public void Rewind() {
        internal_native_Rewind((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
StateRecorderImpl* nativeObject = (StateRecorderImpl*)this_addr;
nativeObject->Rewind();
*/
    private static native void internal_native_Rewind(long this_addr);

    public boolean IsEqual(StateRecorderImpl inReference) {
        return internal_native_IsEqual((long) getNativeData().getCPointer(), (long) (inReference != null ? inReference.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
StateRecorderImpl* nativeObject = (StateRecorderImpl*)this_addr;
return nativeObject->IsEqual(*((StateRecorderImpl* )inReference_addr));
*/
    private static native boolean internal_native_IsEqual(long this_addr, long inReference_addr);

    public static long native_create() {
        return internal_native_create();
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }

    public static void native_Clear(long this_addr) {
        internal_native_Clear(this_addr);
    }

    public static void native_Rewind(long this_addr) {
        internal_native_Rewind(this_addr);
    }

    public static boolean native_IsEqual(long this_addr, long inReference_addr) {
        return internal_native_IsEqual(this_addr, inReference_addr);
    }
}
