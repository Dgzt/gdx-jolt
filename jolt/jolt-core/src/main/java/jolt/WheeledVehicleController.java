/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt;

import jolt.physics.vehicle.VehicleController;
import jolt.physics.vehicle.WheeledVehicleControllerSettings;
import jolt.physics.vehicle.ArrayVehicleDifferentialSettings;

public class WheeledVehicleController extends VehicleController {

    private VehicleEngine VehicleEngine_TEMP_GEN_0;

    private VehicleTransmission VehicleTransmission_TEMP_GEN_0;

    private ArrayVehicleDifferentialSettings ArrayVehicleDifferentialSettings_TEMP_GEN_0;

    static public final WheeledVehicleController T_01 = new WheeledVehicleController((byte) 1, (char) 1);

    static public final WheeledVehicleController T_02 = new WheeledVehicleController((byte) 1, (char) 1);

    static public final WheeledVehicleController T_03 = new WheeledVehicleController((byte) 1, (char) 1);

    public WheeledVehicleController(WheeledVehicleControllerSettings inSettings, VehicleConstraint inConstraint) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_WheeledVehicleControllerSettings_VehicleConstraint((long) (inSettings != null ? inSettings.getNativeData().getCPointer() : 0), (long) (inConstraint != null ? inConstraint.getNativeData().getCPointer() : 0));
        getNativeData().reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new WheeledVehicleController(*((WheeledVehicleControllerSettings* )inSettings_addr), *((VehicleConstraint* )inConstraint_addr));
*/
    private static native long internal_native_create_WheeledVehicleControllerSettings_VehicleConstraint(long inSettings_addr, long inConstraint_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public WheeledVehicleController(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public void SetDriverInput(float inForward, float inRight, float inBrake, float inHandBrake) {
        internal_native_SetDriverInput((long) getNativeData().getCPointer(), inForward, inRight, inBrake, inHandBrake);
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
nativeObject->SetDriverInput((float)inForward, (float)inRight, (float)inBrake, (float)inHandBrake);
*/
    private static native void internal_native_SetDriverInput(long this_addr, float inForward, float inRight, float inBrake, float inHandBrake);

    public void SetForwardInput(float inForward) {
        internal_native_SetForwardInput((long) getNativeData().getCPointer(), inForward);
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
nativeObject->SetForwardInput((float)inForward);
*/
    private static native void internal_native_SetForwardInput(long this_addr, float inForward);

    public float GetForwardInput() {
        return internal_native_GetForwardInput((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
return nativeObject->GetForwardInput();
*/
    private static native float internal_native_GetForwardInput(long this_addr);

    public void SetRightInput(float inRight) {
        internal_native_SetRightInput((long) getNativeData().getCPointer(), inRight);
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
nativeObject->SetRightInput((float)inRight);
*/
    private static native void internal_native_SetRightInput(long this_addr, float inRight);

    public float GetRightInput() {
        return internal_native_GetRightInput((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
return nativeObject->GetRightInput();
*/
    private static native float internal_native_GetRightInput(long this_addr);

    public void SetBrakeInput(float inBrake) {
        internal_native_SetBrakeInput((long) getNativeData().getCPointer(), inBrake);
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
nativeObject->SetBrakeInput((float)inBrake);
*/
    private static native void internal_native_SetBrakeInput(long this_addr, float inBrake);

    public float GetBrakeInput() {
        return internal_native_GetBrakeInput((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
return nativeObject->GetBrakeInput();
*/
    private static native float internal_native_GetBrakeInput(long this_addr);

    public void SetHandBrakeInput(float inHandBrake) {
        internal_native_SetHandBrakeInput((long) getNativeData().getCPointer(), inHandBrake);
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
nativeObject->SetHandBrakeInput((float)inHandBrake);
*/
    private static native void internal_native_SetHandBrakeInput(long this_addr, float inHandBrake);

    public float GetHandBrakeInput() {
        return internal_native_GetHandBrakeInput((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
return nativeObject->GetHandBrakeInput();
*/
    private static native float internal_native_GetHandBrakeInput(long this_addr);

    public VehicleEngine GetEngine() {
        long pointer = internal_native_GetEngine((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (VehicleEngine_TEMP_GEN_0 == null)
            VehicleEngine_TEMP_GEN_0 = new VehicleEngine((byte) 1, (char) 1);
        VehicleEngine_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return VehicleEngine_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
return (jlong)&nativeObject->GetEngine();
*/
    private static native long internal_native_GetEngine(long this_addr);

    public VehicleTransmission GetTransmission() {
        long pointer = internal_native_GetTransmission((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (VehicleTransmission_TEMP_GEN_0 == null)
            VehicleTransmission_TEMP_GEN_0 = new VehicleTransmission((byte) 1, (char) 1);
        VehicleTransmission_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return VehicleTransmission_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
return (jlong)&nativeObject->GetTransmission();
*/
    private static native long internal_native_GetTransmission(long this_addr);

    public ArrayVehicleDifferentialSettings GetDifferentials() {
        long pointer = internal_native_GetDifferentials((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (ArrayVehicleDifferentialSettings_TEMP_GEN_0 == null)
            ArrayVehicleDifferentialSettings_TEMP_GEN_0 = new ArrayVehicleDifferentialSettings((byte) 1, (char) 1);
        ArrayVehicleDifferentialSettings_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return ArrayVehicleDifferentialSettings_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
return (jlong)&nativeObject->GetDifferentials();
*/
    private static native long internal_native_GetDifferentials(long this_addr);

    public float GetDifferentialLimitedSlipRatio() {
        return internal_native_GetDifferentialLimitedSlipRatio((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
return nativeObject->GetDifferentialLimitedSlipRatio();
*/
    private static native float internal_native_GetDifferentialLimitedSlipRatio(long this_addr);

    public void SetDifferentialLimitedSlipRatio(float inV) {
        internal_native_SetDifferentialLimitedSlipRatio((long) getNativeData().getCPointer(), inV);
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
nativeObject->SetDifferentialLimitedSlipRatio((float)inV);
*/
    private static native void internal_native_SetDifferentialLimitedSlipRatio(long this_addr, float inV);

    public float GetWheelSpeedAtClutch() {
        return internal_native_GetWheelSpeedAtClutch((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
WheeledVehicleController* nativeObject = (WheeledVehicleController*)this_addr;
return nativeObject->GetWheelSpeedAtClutch();
*/
    private static native float internal_native_GetWheelSpeedAtClutch(long this_addr);

    public static long native_create_WheeledVehicleControllerSettings_VehicleConstraint(long inSettings_addr, long inConstraint_addr) {
        return internal_native_create_WheeledVehicleControllerSettings_VehicleConstraint(inSettings_addr, inConstraint_addr);
    }

    public static void native_SetDriverInput(long this_addr, float inForward, float inRight, float inBrake, float inHandBrake) {
        internal_native_SetDriverInput(this_addr, inForward, inRight, inBrake, inHandBrake);
    }

    public static void native_SetForwardInput(long this_addr, float inForward) {
        internal_native_SetForwardInput(this_addr, inForward);
    }

    public static float native_GetForwardInput(long this_addr) {
        return internal_native_GetForwardInput(this_addr);
    }

    public static void native_SetRightInput(long this_addr, float inRight) {
        internal_native_SetRightInput(this_addr, inRight);
    }

    public static float native_GetRightInput(long this_addr) {
        return internal_native_GetRightInput(this_addr);
    }

    public static void native_SetBrakeInput(long this_addr, float inBrake) {
        internal_native_SetBrakeInput(this_addr, inBrake);
    }

    public static float native_GetBrakeInput(long this_addr) {
        return internal_native_GetBrakeInput(this_addr);
    }

    public static void native_SetHandBrakeInput(long this_addr, float inHandBrake) {
        internal_native_SetHandBrakeInput(this_addr, inHandBrake);
    }

    public static float native_GetHandBrakeInput(long this_addr) {
        return internal_native_GetHandBrakeInput(this_addr);
    }

    public static long native_GetEngine(long this_addr) {
        return internal_native_GetEngine(this_addr);
    }

    public static long native_GetTransmission(long this_addr) {
        return internal_native_GetTransmission(this_addr);
    }

    public static long native_GetDifferentials(long this_addr) {
        return internal_native_GetDifferentials(this_addr);
    }

    public static float native_GetDifferentialLimitedSlipRatio(long this_addr) {
        return internal_native_GetDifferentialLimitedSlipRatio(this_addr);
    }

    public static void native_SetDifferentialLimitedSlipRatio(long this_addr, float inV) {
        internal_native_SetDifferentialLimitedSlipRatio(this_addr, inV);
    }

    public static float native_GetWheelSpeedAtClutch(long this_addr) {
        return internal_native_GetWheelSpeedAtClutch(this_addr);
    }
}
