/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt;

import jolt.idl.IDLBase;

public class CollisionGroup extends IDLBase {

    private GroupFilter GroupFilter_TEMP_GEN_0;

    static public final CollisionGroup T_01 = new CollisionGroup((byte) 1, (char) 1);

    static public final CollisionGroup T_02 = new CollisionGroup((byte) 1, (char) 1);

    static public final CollisionGroup T_03 = new CollisionGroup((byte) 1, (char) 1);

    public CollisionGroup() {
        long addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new CollisionGroup();
*/
    private static native long internal_native_create();

    public CollisionGroup(GroupFilter inFilter, int inGroupID, int inSubGroupID) {
        long addr = internal_native_create_GroupFilter_int_int((long) (inFilter != null ? inFilter.getNativeData().getCPointer() : 0), inGroupID, inSubGroupID);
        getNativeData().reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new CollisionGroup((GroupFilter* )inFilter_addr, inGroupID, inSubGroupID);
*/
    private static native long internal_native_create_GroupFilter_int_int(long inFilter_addr, int inGroupID, int inSubGroupID);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public CollisionGroup(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
delete nativeObject;
*/
    private static native void internal_native_deleteNative(long this_addr);

    public void SetGroupFilter(GroupFilter inFilter) {
        internal_native_SetGroupFilter((long) getNativeData().getCPointer(), (long) (inFilter != null ? inFilter.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
nativeObject->SetGroupFilter((GroupFilter* )inFilter_addr);
*/
    private static native void internal_native_SetGroupFilter(long this_addr, long inFilter_addr);

    public GroupFilter GetGroupFilter() {
        long pointer = internal_native_GetGroupFilter((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (GroupFilter_TEMP_GEN_0 == null)
            GroupFilter_TEMP_GEN_0 = new GroupFilter((byte) 1, (char) 1);
        GroupFilter_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return GroupFilter_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
const GroupFilter* obj = nativeObject->GetGroupFilter();
return (jlong)obj;
*/
    private static native long internal_native_GetGroupFilter(long this_addr);

    public void SetGroupID(int inGroupID) {
        internal_native_SetGroupID((long) getNativeData().getCPointer(), inGroupID);
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
nativeObject->SetGroupID(inGroupID);
*/
    private static native void internal_native_SetGroupID(long this_addr, int inGroupID);

    public int GetGroupID() {
        return internal_native_GetGroupID((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
return nativeObject->GetGroupID();
*/
    private static native int internal_native_GetGroupID(long this_addr);

    public void SetSubGroupID(int inSubGroupID) {
        internal_native_SetSubGroupID((long) getNativeData().getCPointer(), inSubGroupID);
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
nativeObject->SetSubGroupID(inSubGroupID);
*/
    private static native void internal_native_SetSubGroupID(long this_addr, int inSubGroupID);

    public int GetSubGroupID() {
        return internal_native_GetSubGroupID((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CollisionGroup* nativeObject = (CollisionGroup*)this_addr;
return nativeObject->GetSubGroupID();
*/
    private static native int internal_native_GetSubGroupID(long this_addr);

    public static long native_create() {
        return internal_native_create();
    }

    public static long native_create_GroupFilter_int_int(long inFilter_addr, int inGroupID, int inSubGroupID) {
        return internal_native_create_GroupFilter_int_int(inFilter_addr, inGroupID, inSubGroupID);
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }

    public static void native_SetGroupFilter(long this_addr, long inFilter_addr) {
        internal_native_SetGroupFilter(this_addr, inFilter_addr);
    }

    public static long native_GetGroupFilter(long this_addr) {
        return internal_native_GetGroupFilter(this_addr);
    }

    public static void native_SetGroupID(long this_addr, int inGroupID) {
        internal_native_SetGroupID(this_addr, inGroupID);
    }

    public static int native_GetGroupID(long this_addr) {
        return internal_native_GetGroupID(this_addr);
    }

    public static void native_SetSubGroupID(long this_addr, int inSubGroupID) {
        internal_native_SetSubGroupID(this_addr, inSubGroupID);
    }

    public static int native_GetSubGroupID(long this_addr) {
        return internal_native_GetSubGroupID(this_addr);
    }
}
