/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision;

import jolt.idl.IDLBase;

public class RayCastSettings extends IDLBase {

    static public final RayCastSettings T_01 = new RayCastSettings((byte) 1, (char) 1);

    static public final RayCastSettings T_02 = new RayCastSettings((byte) 1, (char) 1);

    static public final RayCastSettings T_03 = new RayCastSettings((byte) 1, (char) 1);

    public RayCastSettings() {
        long addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new RayCastSettings();
*/
    private static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public RayCastSettings(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
RayCastSettings* nativeObject = (RayCastSettings*)this_addr;
delete nativeObject;
*/
    private static native void internal_native_deleteNative(long this_addr);

    public int get_mBackFaceModeTriangles() {
        return internal_native_get_mBackFaceModeTriangles((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
RayCastSettings* nativeObject = (RayCastSettings*)this_addr;
return (jint)nativeObject->mBackFaceModeTriangles;
*/
    private static native int internal_native_get_mBackFaceModeTriangles(long this_addr);

    public void set_mBackFaceModeTriangles(int mBackFaceModeTriangles) {
        internal_native_set_mBackFaceModeTriangles((long) getNativeData().getCPointer(), mBackFaceModeTriangles);
    }

    /*[-JNI;-NATIVE]
RayCastSettings* nativeObject = (RayCastSettings*)this_addr;
nativeObject->mBackFaceModeTriangles = (::EBackFaceMode)mBackFaceModeTriangles;
*/
    private static native void internal_native_set_mBackFaceModeTriangles(long this_addr, int mBackFaceModeTriangles);

    public int get_mBackFaceModeConvex() {
        return internal_native_get_mBackFaceModeConvex((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
RayCastSettings* nativeObject = (RayCastSettings*)this_addr;
return (jint)nativeObject->mBackFaceModeConvex;
*/
    private static native int internal_native_get_mBackFaceModeConvex(long this_addr);

    public void set_mBackFaceModeConvex(int mBackFaceModeConvex) {
        internal_native_set_mBackFaceModeConvex((long) getNativeData().getCPointer(), mBackFaceModeConvex);
    }

    /*[-JNI;-NATIVE]
RayCastSettings* nativeObject = (RayCastSettings*)this_addr;
nativeObject->mBackFaceModeConvex = (::EBackFaceMode)mBackFaceModeConvex;
*/
    private static native void internal_native_set_mBackFaceModeConvex(long this_addr, int mBackFaceModeConvex);

    public boolean get_mTreatConvexAsSolid() {
        return internal_native_get_mTreatConvexAsSolid((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
RayCastSettings* nativeObject = (RayCastSettings*)this_addr;
return nativeObject->mTreatConvexAsSolid;
*/
    private static native boolean internal_native_get_mTreatConvexAsSolid(long this_addr);

    public void set_mTreatConvexAsSolid(boolean mTreatConvexAsSolid) {
        internal_native_set_mTreatConvexAsSolid((long) getNativeData().getCPointer(), mTreatConvexAsSolid);
    }

    /*[-JNI;-NATIVE]
RayCastSettings* nativeObject = (RayCastSettings*)this_addr;
nativeObject->mTreatConvexAsSolid = mTreatConvexAsSolid;
*/
    private static native void internal_native_set_mTreatConvexAsSolid(long this_addr, boolean mTreatConvexAsSolid);

    public static long native_create() {
        return internal_native_create();
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }

    public static int native_get_mBackFaceModeTriangles(long this_addr) {
        return internal_native_get_mBackFaceModeTriangles(this_addr);
    }

    public static void native_set_mBackFaceModeTriangles(long this_addr, int mBackFaceModeTriangles) {
        internal_native_set_mBackFaceModeTriangles(this_addr, mBackFaceModeTriangles);
    }

    public static int native_get_mBackFaceModeConvex(long this_addr) {
        return internal_native_get_mBackFaceModeConvex(this_addr);
    }

    public static void native_set_mBackFaceModeConvex(long this_addr, int mBackFaceModeConvex) {
        internal_native_set_mBackFaceModeConvex(this_addr, mBackFaceModeConvex);
    }

    public static boolean native_get_mTreatConvexAsSolid(long this_addr) {
        return internal_native_get_mTreatConvexAsSolid(this_addr);
    }

    public static void native_set_mTreatConvexAsSolid(long this_addr, boolean mTreatConvexAsSolid) {
        internal_native_set_mTreatConvexAsSolid(this_addr, mTreatConvexAsSolid);
    }
}
