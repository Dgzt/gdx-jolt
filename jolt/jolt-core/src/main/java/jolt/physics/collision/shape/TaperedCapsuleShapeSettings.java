/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision.shape;

import jolt.PhysicsMaterial;

public class TaperedCapsuleShapeSettings extends ConvexShapeSettings {

    static public final TaperedCapsuleShapeSettings T_01 = new TaperedCapsuleShapeSettings((byte) 1, (char) 1);

    static public final TaperedCapsuleShapeSettings T_02 = new TaperedCapsuleShapeSettings((byte) 1, (char) 1);

    static public final TaperedCapsuleShapeSettings T_03 = new TaperedCapsuleShapeSettings((byte) 1, (char) 1);

    public TaperedCapsuleShapeSettings(float inHalfHeightOfTaperedCylinder, float inTopRadius, float inBottomRadius, PhysicsMaterial inMaterial) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_float_float_float_PhysicsMaterial(inHalfHeightOfTaperedCylinder, inTopRadius, inBottomRadius, (long) (inMaterial != null ? inMaterial.getNativeData().getCPointer() : 0));
        getNativeData().reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new TaperedCapsuleShapeSettings((float)inHalfHeightOfTaperedCylinder, (float)inTopRadius, (float)inBottomRadius, (PhysicsMaterial* )inMaterial_addr);
*/
    private static native long internal_native_create_float_float_float_PhysicsMaterial(float inHalfHeightOfTaperedCylinder, float inTopRadius, float inBottomRadius, long inMaterial_addr);

    public TaperedCapsuleShapeSettings(float inHalfHeightOfTaperedCylinder, float inTopRadius, float inBottomRadius) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_float_float_float(inHalfHeightOfTaperedCylinder, inTopRadius, inBottomRadius);
        getNativeData().reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new TaperedCapsuleShapeSettings((float)inHalfHeightOfTaperedCylinder, (float)inTopRadius, (float)inBottomRadius);
*/
    private static native long internal_native_create_float_float_float(float inHalfHeightOfTaperedCylinder, float inTopRadius, float inBottomRadius);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public TaperedCapsuleShapeSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public float get_mHalfHeightOfTaperedCylinder() {
        return internal_native_get_mHalfHeightOfTaperedCylinder((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
TaperedCapsuleShapeSettings* nativeObject = (TaperedCapsuleShapeSettings*)this_addr;
return nativeObject->mHalfHeightOfTaperedCylinder;
*/
    private static native float internal_native_get_mHalfHeightOfTaperedCylinder(long this_addr);

    public void set_mHalfHeightOfTaperedCylinder(float mHalfHeightOfTaperedCylinder) {
        internal_native_set_mHalfHeightOfTaperedCylinder((long) getNativeData().getCPointer(), mHalfHeightOfTaperedCylinder);
    }

    /*[-JNI;-NATIVE]
TaperedCapsuleShapeSettings* nativeObject = (TaperedCapsuleShapeSettings*)this_addr;
nativeObject->mHalfHeightOfTaperedCylinder = mHalfHeightOfTaperedCylinder;
*/
    private static native void internal_native_set_mHalfHeightOfTaperedCylinder(long this_addr, float mHalfHeightOfTaperedCylinder);

    public float get_mTopRadius() {
        return internal_native_get_mTopRadius((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
TaperedCapsuleShapeSettings* nativeObject = (TaperedCapsuleShapeSettings*)this_addr;
return nativeObject->mTopRadius;
*/
    private static native float internal_native_get_mTopRadius(long this_addr);

    public void set_mTopRadius(float mTopRadius) {
        internal_native_set_mTopRadius((long) getNativeData().getCPointer(), mTopRadius);
    }

    /*[-JNI;-NATIVE]
TaperedCapsuleShapeSettings* nativeObject = (TaperedCapsuleShapeSettings*)this_addr;
nativeObject->mTopRadius = mTopRadius;
*/
    private static native void internal_native_set_mTopRadius(long this_addr, float mTopRadius);

    public float get_mBottomRadius() {
        return internal_native_get_mBottomRadius((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
TaperedCapsuleShapeSettings* nativeObject = (TaperedCapsuleShapeSettings*)this_addr;
return nativeObject->mBottomRadius;
*/
    private static native float internal_native_get_mBottomRadius(long this_addr);

    public void set_mBottomRadius(float mBottomRadius) {
        internal_native_set_mBottomRadius((long) getNativeData().getCPointer(), mBottomRadius);
    }

    /*[-JNI;-NATIVE]
TaperedCapsuleShapeSettings* nativeObject = (TaperedCapsuleShapeSettings*)this_addr;
nativeObject->mBottomRadius = mBottomRadius;
*/
    private static native void internal_native_set_mBottomRadius(long this_addr, float mBottomRadius);

    public static long native_create_float_float_float_PhysicsMaterial(float inHalfHeightOfTaperedCylinder, float inTopRadius, float inBottomRadius, long inMaterial_addr) {
        return internal_native_create_float_float_float_PhysicsMaterial(inHalfHeightOfTaperedCylinder, inTopRadius, inBottomRadius, inMaterial_addr);
    }

    public static long native_create_float_float_float(float inHalfHeightOfTaperedCylinder, float inTopRadius, float inBottomRadius) {
        return internal_native_create_float_float_float(inHalfHeightOfTaperedCylinder, inTopRadius, inBottomRadius);
    }

    public static float native_get_mHalfHeightOfTaperedCylinder(long this_addr) {
        return internal_native_get_mHalfHeightOfTaperedCylinder(this_addr);
    }

    public static void native_set_mHalfHeightOfTaperedCylinder(long this_addr, float mHalfHeightOfTaperedCylinder) {
        internal_native_set_mHalfHeightOfTaperedCylinder(this_addr, mHalfHeightOfTaperedCylinder);
    }

    public static float native_get_mTopRadius(long this_addr) {
        return internal_native_get_mTopRadius(this_addr);
    }

    public static void native_set_mTopRadius(long this_addr, float mTopRadius) {
        internal_native_set_mTopRadius(this_addr, mTopRadius);
    }

    public static float native_get_mBottomRadius(long this_addr) {
        return internal_native_get_mBottomRadius(this_addr);
    }

    public static void native_set_mBottomRadius(long this_addr, float mBottomRadius) {
        internal_native_set_mBottomRadius(this_addr, mBottomRadius);
    }
}
