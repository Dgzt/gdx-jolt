/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision.shape;

import jolt.physics.collision.PhysicsMaterial;

public class SphereShape extends ConvexShape {

    static public final SphereShape T_01 = new SphereShape((byte) 1, (char) 1);

    static public final SphereShape T_02 = new SphereShape((byte) 1, (char) 1);

    static public final SphereShape T_03 = new SphereShape((byte) 1, (char) 1);

    public SphereShape(float inRadius, PhysicsMaterial inMaterial) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_float_PhysicsMaterial(inRadius, (long) (inMaterial != null ? inMaterial.getNativeData().getCPointer() : 0));
        getNativeData().reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new SphereShape((float)inRadius, (PhysicsMaterial* )inMaterial_addr);
*/
    private static native long internal_native_create_float_PhysicsMaterial(float inRadius, long inMaterial_addr);

    public SphereShape(float inRadius) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_float(inRadius);
        getNativeData().reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new SphereShape((float)inRadius);
*/
    private static native long internal_native_create_float(float inRadius);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SphereShape(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public float GetRadius() {
        return internal_native_GetRadius((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SphereShape* nativeObject = (SphereShape*)this_addr;
return nativeObject->GetRadius();
*/
    private static native float internal_native_GetRadius(long this_addr);

    public static long native_create_float_PhysicsMaterial(float inRadius, long inMaterial_addr) {
        return internal_native_create_float_PhysicsMaterial(inRadius, inMaterial_addr);
    }

    public static long native_create_float(float inRadius) {
        return internal_native_create_float(inRadius);
    }

    public static float native_GetRadius(long this_addr) {
        return internal_native_GetRadius(this_addr);
    }
}
