/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision.shape;

import jolt.math.Vec3;

public class OffsetCenterOfMassShapeSettings extends DecoratedShapeSettings {

    private Vec3 Vec3_TEMP_GEN_0;

    static public final OffsetCenterOfMassShapeSettings T_01 = new OffsetCenterOfMassShapeSettings((byte) 1, (char) 1);

    static public final OffsetCenterOfMassShapeSettings T_02 = new OffsetCenterOfMassShapeSettings((byte) 1, (char) 1);

    static public final OffsetCenterOfMassShapeSettings T_03 = new OffsetCenterOfMassShapeSettings((byte) 1, (char) 1);

    public OffsetCenterOfMassShapeSettings(Vec3 inOffset, Shape inShape) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_Vec3_Shape((long) (inOffset != null ? inOffset.getNativeData().getCPointer() : 0), (long) (inShape != null ? inShape.getNativeData().getCPointer() : 0));
        getNativeData().reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new OffsetCenterOfMassShapeSettings(*((Vec3* )inOffset_addr), (Shape* )inShape_addr);
*/
    private static native long internal_native_create_Vec3_Shape(long inOffset_addr, long inShape_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public OffsetCenterOfMassShapeSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public Vec3 get_mOffset() {
        long pointer = internal_native_get_mOffset((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
OffsetCenterOfMassShapeSettings* nativeObject = (OffsetCenterOfMassShapeSettings*)this_addr;
return (jlong)&nativeObject->mOffset;
*/
    private static native long internal_native_get_mOffset(long this_addr);

    public void set_mOffset(Vec3 mOffset) {
        internal_native_set_mOffset((long) getNativeData().getCPointer(), (long) (mOffset != null ? mOffset.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
OffsetCenterOfMassShapeSettings* nativeObject = (OffsetCenterOfMassShapeSettings*)this_addr;
nativeObject->mOffset = *((Vec3*)mOffset_addr);
*/
    private static native void internal_native_set_mOffset(long this_addr, long mOffset_addr);

    public static long native_create_Vec3_Shape(long inOffset_addr, long inShape_addr) {
        return internal_native_create_Vec3_Shape(inOffset_addr, inShape_addr);
    }

    public static long native_get_mOffset(long this_addr) {
        return internal_native_get_mOffset(this_addr);
    }

    public static void native_set_mOffset(long this_addr, long mOffset_addr) {
        internal_native_set_mOffset(this_addr, mOffset_addr);
    }
}
