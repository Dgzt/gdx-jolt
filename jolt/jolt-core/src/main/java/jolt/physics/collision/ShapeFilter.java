/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision;

import jolt.idl.IDLBase;

public class ShapeFilter extends IDLBase {

    static public final ShapeFilter T_01 = new ShapeFilter((byte) 1, (char) 1);

    static public final ShapeFilter T_02 = new ShapeFilter((byte) 1, (char) 1);

    static public final ShapeFilter T_03 = new ShapeFilter((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public ShapeFilter(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
ShapeFilter* nativeObject = (ShapeFilter*)this_addr;
delete nativeObject;
*/
    private static native void internal_native_deleteNative(long this_addr);

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }
}
