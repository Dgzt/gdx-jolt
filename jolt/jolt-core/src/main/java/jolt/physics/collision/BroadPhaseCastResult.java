/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision;

import jolt.idl.IDLBase;
import jolt.BodyID;

public class BroadPhaseCastResult extends IDLBase {

    private BodyID BodyID_TEMP_GEN_0;

    static public final BroadPhaseCastResult T_01 = new BroadPhaseCastResult((byte) 1, (char) 1);

    static public final BroadPhaseCastResult T_02 = new BroadPhaseCastResult((byte) 1, (char) 1);

    static public final BroadPhaseCastResult T_03 = new BroadPhaseCastResult((byte) 1, (char) 1);

    public BroadPhaseCastResult() {
        long addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new BroadPhaseCastResult();
*/
    private static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public BroadPhaseCastResult(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
BroadPhaseCastResult* nativeObject = (BroadPhaseCastResult*)this_addr;
delete nativeObject;
*/
    private static native void internal_native_deleteNative(long this_addr);

    public void Reset() {
        internal_native_Reset((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
BroadPhaseCastResult* nativeObject = (BroadPhaseCastResult*)this_addr;
nativeObject->Reset();
*/
    private static native void internal_native_Reset(long this_addr);

    public BodyID get_mBodyID() {
        long pointer = internal_native_get_mBodyID((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (BodyID_TEMP_GEN_0 == null)
            BodyID_TEMP_GEN_0 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return BodyID_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
BroadPhaseCastResult* nativeObject = (BroadPhaseCastResult*)this_addr;
return (jlong)&nativeObject->mBodyID;
*/
    private static native long internal_native_get_mBodyID(long this_addr);

    public void set_mBodyID(BodyID mBodyID) {
        internal_native_set_mBodyID((long) getNativeData().getCPointer(), (long) (mBodyID != null ? mBodyID.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
BroadPhaseCastResult* nativeObject = (BroadPhaseCastResult*)this_addr;
nativeObject->mBodyID = *((BodyID*)mBodyID_addr);
*/
    private static native void internal_native_set_mBodyID(long this_addr, long mBodyID_addr);

    public float get_mFraction() {
        return internal_native_get_mFraction((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
BroadPhaseCastResult* nativeObject = (BroadPhaseCastResult*)this_addr;
return nativeObject->mFraction;
*/
    private static native float internal_native_get_mFraction(long this_addr);

    public void set_mFraction(float mFraction) {
        internal_native_set_mFraction((long) getNativeData().getCPointer(), mFraction);
    }

    /*[-JNI;-NATIVE]
BroadPhaseCastResult* nativeObject = (BroadPhaseCastResult*)this_addr;
nativeObject->mFraction = mFraction;
*/
    private static native void internal_native_set_mFraction(long this_addr, float mFraction);

    public static long native_create() {
        return internal_native_create();
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }

    public static void native_Reset(long this_addr) {
        internal_native_Reset(this_addr);
    }

    public static long native_get_mBodyID(long this_addr) {
        return internal_native_get_mBodyID(this_addr);
    }

    public static void native_set_mBodyID(long this_addr, long mBodyID_addr) {
        internal_native_set_mBodyID(this_addr, mBodyID_addr);
    }

    public static float native_get_mFraction(long this_addr) {
        return internal_native_get_mFraction(this_addr);
    }

    public static void native_set_mFraction(long this_addr, float mFraction) {
        internal_native_set_mFraction(this_addr, mFraction);
    }
}
