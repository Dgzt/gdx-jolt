/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision;

import jolt.physics.softbody.CastShapeCollector;
import jolt.physics.collision.shape.ArrayShapeCastResult;

public class CastShapeAllHitCollisionCollector extends CastShapeCollector {

    private ArrayShapeCastResult ArrayShapeCastResult_TEMP_GEN_0;

    static public final CastShapeAllHitCollisionCollector T_01 = new CastShapeAllHitCollisionCollector((byte) 1, (char) 1);

    static public final CastShapeAllHitCollisionCollector T_02 = new CastShapeAllHitCollisionCollector((byte) 1, (char) 1);

    static public final CastShapeAllHitCollisionCollector T_03 = new CastShapeAllHitCollisionCollector((byte) 1, (char) 1);

    public CastShapeAllHitCollisionCollector() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new CastShapeAllHitCollisionCollector();
*/
    private static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public CastShapeAllHitCollisionCollector(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CastShapeAllHitCollisionCollector* nativeObject = (CastShapeAllHitCollisionCollector*)this_addr;
delete nativeObject;
*/
    private static native void internal_native_deleteNative(long this_addr);

    public void Sort() {
        internal_native_Sort((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CastShapeAllHitCollisionCollector* nativeObject = (CastShapeAllHitCollisionCollector*)this_addr;
nativeObject->Sort();
*/
    private static native void internal_native_Sort(long this_addr);

    public boolean HadHit() {
        return internal_native_HadHit((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CastShapeAllHitCollisionCollector* nativeObject = (CastShapeAllHitCollisionCollector*)this_addr;
return nativeObject->HadHit();
*/
    private static native boolean internal_native_HadHit(long this_addr);

    public ArrayShapeCastResult get_mHits() {
        long pointer = internal_native_get_mHits((long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (ArrayShapeCastResult_TEMP_GEN_0 == null)
            ArrayShapeCastResult_TEMP_GEN_0 = new ArrayShapeCastResult((byte) 1, (char) 1);
        ArrayShapeCastResult_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return ArrayShapeCastResult_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CastShapeAllHitCollisionCollector* nativeObject = (CastShapeAllHitCollisionCollector*)this_addr;
return (jlong)&nativeObject->mHits;
*/
    private static native long internal_native_get_mHits(long this_addr);

    public void set_mHits(ArrayShapeCastResult mHits) {
        internal_native_set_mHits((long) getNativeData().getCPointer(), (long) (mHits != null ? mHits.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
CastShapeAllHitCollisionCollector* nativeObject = (CastShapeAllHitCollisionCollector*)this_addr;
nativeObject->mHits = *((ArrayShapeCastResult*)mHits_addr);
*/
    private static native void internal_native_set_mHits(long this_addr, long mHits_addr);

    public static long native_create() {
        return internal_native_create();
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }

    public static void native_Sort(long this_addr) {
        internal_native_Sort(this_addr);
    }

    public static boolean native_HadHit(long this_addr) {
        return internal_native_HadHit(this_addr);
    }

    public static long native_get_mHits(long this_addr) {
        return internal_native_get_mHits(this_addr);
    }

    public static void native_set_mHits(long this_addr, long mHits_addr) {
        internal_native_set_mHits(this_addr, mHits_addr);
    }
}
