/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision.shape;

import jolt.idl.IDLBase;

public class ShapeSettings extends IDLBase {

    private ShapeResult ShapeResult_TEMP_GEN_0;

    static public final ShapeSettings T_01 = new ShapeSettings((byte) 1, (char) 1);

    static public final ShapeSettings T_02 = new ShapeSettings((byte) 1, (char) 1);

    static public final ShapeSettings T_03 = new ShapeSettings((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public ShapeSettings(byte b, char c) {
    }

    public int GetRefCount() {
        return internal_native_GetRefCount((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
return nativeObject->GetRefCount();
*/
    private static native int internal_native_GetRefCount(long this_addr);

    public void AddRef() {
        internal_native_AddRef((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
nativeObject->AddRef();
*/
    private static native void internal_native_AddRef(long this_addr);

    public void Release() {
        internal_native_Release((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
nativeObject->Release();
*/
    private static native void internal_native_Release(long this_addr);

    public ShapeResult Create() {
        long pointer = internal_native_Create((long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (ShapeResult_TEMP_GEN_0 == null)
            ShapeResult_TEMP_GEN_0 = new ShapeResult((byte) 1, (char) 1);
        ShapeResult_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return ShapeResult_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
static Shape::ShapeResult copy_addr;
copy_addr = nativeObject->Create();
return (jlong)&copy_addr;*/
    private static native long internal_native_Create(long this_addr);

    public void ClearCachedResult() {
        internal_native_ClearCachedResult((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
nativeObject->ClearCachedResult();
*/
    private static native void internal_native_ClearCachedResult(long this_addr);

    public long get_mUserData() {
        return internal_native_get_mUserData((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
return nativeObject->mUserData;
*/
    private static native long internal_native_get_mUserData(long this_addr);

    public void set_mUserData(long mUserData) {
        internal_native_set_mUserData((long) getNativeData().getCPointer(), mUserData);
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
nativeObject->mUserData = mUserData;
*/
    private static native void internal_native_set_mUserData(long this_addr, long mUserData);

    public static int native_GetRefCount(long this_addr) {
        return internal_native_GetRefCount(this_addr);
    }

    public static void native_AddRef(long this_addr) {
        internal_native_AddRef(this_addr);
    }

    public static void native_Release(long this_addr) {
        internal_native_Release(this_addr);
    }

    public static long native_Create(long this_addr) {
        return internal_native_Create(this_addr);
    }

    public static void native_ClearCachedResult(long this_addr) {
        internal_native_ClearCachedResult(this_addr);
    }

    public static long native_get_mUserData(long this_addr) {
        return internal_native_get_mUserData(this_addr);
    }

    public static void native_set_mUserData(long this_addr, long mUserData) {
        internal_native_set_mUserData(this_addr, mUserData);
    }
}
