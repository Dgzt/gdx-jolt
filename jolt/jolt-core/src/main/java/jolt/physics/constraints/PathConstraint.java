/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.constraints;

public class PathConstraint extends TwoBodyConstraint {

    private PathConstraintPath PathConstraintPath_TEMP_GEN_0;

    private MotorSettings MotorSettings_TEMP_GEN_0;

    static public final PathConstraint T_01 = new PathConstraint((byte) 1, (char) 1);

    static public final PathConstraint T_02 = new PathConstraint((byte) 1, (char) 1);

    static public final PathConstraint T_03 = new PathConstraint((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public PathConstraint(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public void SetPath(PathConstraintPath inPath, float inPathFraction) {
        internal_native_SetPath((long) getNativeData().getCPointer(), (long) (inPath != null ? inPath.getNativeData().getCPointer() : 0), inPathFraction);
    }

    /*[-JNI;-NATIVE]
PathConstraint* nativeObject = (PathConstraint*)this_addr;
nativeObject->SetPath((PathConstraintPath* )inPath_addr, (float)inPathFraction);
*/
    private static native void internal_native_SetPath(long this_addr, long inPath_addr, float inPathFraction);

    public PathConstraintPath GetPath() {
        long pointer = internal_native_GetPath((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (PathConstraintPath_TEMP_GEN_0 == null)
            PathConstraintPath_TEMP_GEN_0 = new PathConstraintPath((byte) 1, (char) 1);
        PathConstraintPath_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return PathConstraintPath_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PathConstraint* nativeObject = (PathConstraint*)this_addr;
const PathConstraintPath* obj = nativeObject->GetPath();
return (jlong)obj;
*/
    private static native long internal_native_GetPath(long this_addr);

    public float GetPathFraction() {
        return internal_native_GetPathFraction((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PathConstraint* nativeObject = (PathConstraint*)this_addr;
return nativeObject->GetPathFraction();
*/
    private static native float internal_native_GetPathFraction(long this_addr);

    public void SetMaxFrictionForce(float inFrictionForce) {
        internal_native_SetMaxFrictionForce((long) getNativeData().getCPointer(), inFrictionForce);
    }

    /*[-JNI;-NATIVE]
PathConstraint* nativeObject = (PathConstraint*)this_addr;
nativeObject->SetMaxFrictionForce((float)inFrictionForce);
*/
    private static native void internal_native_SetMaxFrictionForce(long this_addr, float inFrictionForce);

    public float GetMaxFrictionForce() {
        return internal_native_GetMaxFrictionForce((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PathConstraint* nativeObject = (PathConstraint*)this_addr;
return nativeObject->GetMaxFrictionForce();
*/
    private static native float internal_native_GetMaxFrictionForce(long this_addr);

    public MotorSettings GetPositionMotorSettings() {
        long pointer = internal_native_GetPositionMotorSettings((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (MotorSettings_TEMP_GEN_0 == null)
            MotorSettings_TEMP_GEN_0 = new MotorSettings((byte) 1, (char) 1);
        MotorSettings_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return MotorSettings_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PathConstraint* nativeObject = (PathConstraint*)this_addr;
return (jlong)&nativeObject->GetPositionMotorSettings();
*/
    private static native long internal_native_GetPositionMotorSettings(long this_addr);

    public void SetPositionMotorState(int inState) {
        internal_native_SetPositionMotorState((long) getNativeData().getCPointer(), inState);
    }

    /*[-JNI;-NATIVE]
PathConstraint* nativeObject = (PathConstraint*)this_addr;
nativeObject->SetPositionMotorState((::EMotorState)inState);
*/
    private static native void internal_native_SetPositionMotorState(long this_addr, int inState);

    public int GetPositionMotorState() {
        return internal_native_GetPositionMotorState((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PathConstraint* nativeObject = (PathConstraint*)this_addr;
return (int)nativeObject->GetPositionMotorState();
*/
    private static native int internal_native_GetPositionMotorState(long this_addr);

    public void SetTargetVelocity(float inVelocity) {
        internal_native_SetTargetVelocity((long) getNativeData().getCPointer(), inVelocity);
    }

    /*[-JNI;-NATIVE]
PathConstraint* nativeObject = (PathConstraint*)this_addr;
nativeObject->SetTargetVelocity((float)inVelocity);
*/
    private static native void internal_native_SetTargetVelocity(long this_addr, float inVelocity);

    public float GetTargetVelocity() {
        return internal_native_GetTargetVelocity((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PathConstraint* nativeObject = (PathConstraint*)this_addr;
return nativeObject->GetTargetVelocity();
*/
    private static native float internal_native_GetTargetVelocity(long this_addr);

    public void SetTargetPathFraction(float inFraction) {
        internal_native_SetTargetPathFraction((long) getNativeData().getCPointer(), inFraction);
    }

    /*[-JNI;-NATIVE]
PathConstraint* nativeObject = (PathConstraint*)this_addr;
nativeObject->SetTargetPathFraction((float)inFraction);
*/
    private static native void internal_native_SetTargetPathFraction(long this_addr, float inFraction);

    public float GetTargetPathFraction() {
        return internal_native_GetTargetPathFraction((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PathConstraint* nativeObject = (PathConstraint*)this_addr;
return nativeObject->GetTargetPathFraction();
*/
    private static native float internal_native_GetTargetPathFraction(long this_addr);

    public static void native_SetPath(long this_addr, long inPath_addr, float inPathFraction) {
        internal_native_SetPath(this_addr, inPath_addr, inPathFraction);
    }

    public static long native_GetPath(long this_addr) {
        return internal_native_GetPath(this_addr);
    }

    public static float native_GetPathFraction(long this_addr) {
        return internal_native_GetPathFraction(this_addr);
    }

    public static void native_SetMaxFrictionForce(long this_addr, float inFrictionForce) {
        internal_native_SetMaxFrictionForce(this_addr, inFrictionForce);
    }

    public static float native_GetMaxFrictionForce(long this_addr) {
        return internal_native_GetMaxFrictionForce(this_addr);
    }

    public static long native_GetPositionMotorSettings(long this_addr) {
        return internal_native_GetPositionMotorSettings(this_addr);
    }

    public static void native_SetPositionMotorState(long this_addr, int inState) {
        internal_native_SetPositionMotorState(this_addr, inState);
    }

    public static int native_GetPositionMotorState(long this_addr) {
        return internal_native_GetPositionMotorState(this_addr);
    }

    public static void native_SetTargetVelocity(long this_addr, float inVelocity) {
        internal_native_SetTargetVelocity(this_addr, inVelocity);
    }

    public static float native_GetTargetVelocity(long this_addr) {
        return internal_native_GetTargetVelocity(this_addr);
    }

    public static void native_SetTargetPathFraction(long this_addr, float inFraction) {
        internal_native_SetTargetPathFraction(this_addr, inFraction);
    }

    public static float native_GetTargetPathFraction(long this_addr) {
        return internal_native_GetTargetPathFraction(this_addr);
    }
}
