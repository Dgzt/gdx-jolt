/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.constraints;

import jolt.idl.IDLBase;

public class Constraint extends IDLBase {

    static public final Constraint T_01 = new Constraint((byte) 1, (char) 1);

    static public final Constraint T_02 = new Constraint((byte) 1, (char) 1);

    static public final Constraint T_03 = new Constraint((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public Constraint(byte b, char c) {
    }

    public int GetRefCount() {
        return internal_native_GetRefCount((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
return nativeObject->GetRefCount();
*/
    private static native int internal_native_GetRefCount(long this_addr);

    public void AddRef() {
        internal_native_AddRef((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
nativeObject->AddRef();
*/
    private static native void internal_native_AddRef(long this_addr);

    public void Release() {
        internal_native_Release((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
nativeObject->Release();
*/
    private static native void internal_native_Release(long this_addr);

    public int GetType() {
        return internal_native_GetType((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
return (int)nativeObject->GetType();
*/
    private static native int internal_native_GetType(long this_addr);

    public int GetSubType() {
        return internal_native_GetSubType((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
return (int)nativeObject->GetSubType();
*/
    private static native int internal_native_GetSubType(long this_addr);

    public int GetConstraintPriority() {
        return internal_native_GetConstraintPriority((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
return nativeObject->GetConstraintPriority();
*/
    private static native int internal_native_GetConstraintPriority(long this_addr);

    public void SetConstraintPriority(int inPriority) {
        internal_native_SetConstraintPriority((long) getNativeData().getCPointer(), inPriority);
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
nativeObject->SetConstraintPriority(inPriority);
*/
    private static native void internal_native_SetConstraintPriority(long this_addr, int inPriority);

    public void SetNumVelocityStepsOverride(int inN) {
        internal_native_SetNumVelocityStepsOverride((long) getNativeData().getCPointer(), inN);
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
nativeObject->SetNumVelocityStepsOverride((int)inN);
*/
    private static native void internal_native_SetNumVelocityStepsOverride(long this_addr, int inN);

    public int GetNumVelocityStepsOverride() {
        return internal_native_GetNumVelocityStepsOverride((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
return nativeObject->GetNumVelocityStepsOverride();
*/
    private static native int internal_native_GetNumVelocityStepsOverride(long this_addr);

    public void SetNumPositionStepsOverride(int inN) {
        internal_native_SetNumPositionStepsOverride((long) getNativeData().getCPointer(), inN);
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
nativeObject->SetNumPositionStepsOverride((int)inN);
*/
    private static native void internal_native_SetNumPositionStepsOverride(long this_addr, int inN);

    public int GetNumPositionStepsOverride() {
        return internal_native_GetNumPositionStepsOverride((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
return nativeObject->GetNumPositionStepsOverride();
*/
    private static native int internal_native_GetNumPositionStepsOverride(long this_addr);

    public void SetEnabled(boolean inEnabled) {
        internal_native_SetEnabled((long) getNativeData().getCPointer(), inEnabled);
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
nativeObject->SetEnabled(inEnabled);
*/
    private static native void internal_native_SetEnabled(long this_addr, boolean inEnabled);

    public boolean GetEnabled() {
        return internal_native_GetEnabled((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
return nativeObject->GetEnabled();
*/
    private static native boolean internal_native_GetEnabled(long this_addr);

    public boolean IsActive() {
        return internal_native_IsActive((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
return nativeObject->IsActive();
*/
    private static native boolean internal_native_IsActive(long this_addr);

    public long GetUserData() {
        return internal_native_GetUserData((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
return nativeObject->GetUserData();
*/
    private static native long internal_native_GetUserData(long this_addr);

    public void SetUserData(long inUserData) {
        internal_native_SetUserData((long) getNativeData().getCPointer(), inUserData);
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
nativeObject->SetUserData(inUserData);
*/
    private static native void internal_native_SetUserData(long this_addr, long inUserData);

    public void ResetWarmStart() {
        internal_native_ResetWarmStart((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
Constraint* nativeObject = (Constraint*)this_addr;
nativeObject->ResetWarmStart();
*/
    private static native void internal_native_ResetWarmStart(long this_addr);

    public static int native_GetRefCount(long this_addr) {
        return internal_native_GetRefCount(this_addr);
    }

    public static void native_AddRef(long this_addr) {
        internal_native_AddRef(this_addr);
    }

    public static void native_Release(long this_addr) {
        internal_native_Release(this_addr);
    }

    public static int native_GetType(long this_addr) {
        return internal_native_GetType(this_addr);
    }

    public static int native_GetSubType(long this_addr) {
        return internal_native_GetSubType(this_addr);
    }

    public static int native_GetConstraintPriority(long this_addr) {
        return internal_native_GetConstraintPriority(this_addr);
    }

    public static void native_SetConstraintPriority(long this_addr, int inPriority) {
        internal_native_SetConstraintPriority(this_addr, inPriority);
    }

    public static void native_SetNumVelocityStepsOverride(long this_addr, int inN) {
        internal_native_SetNumVelocityStepsOverride(this_addr, inN);
    }

    public static int native_GetNumVelocityStepsOverride(long this_addr) {
        return internal_native_GetNumVelocityStepsOverride(this_addr);
    }

    public static void native_SetNumPositionStepsOverride(long this_addr, int inN) {
        internal_native_SetNumPositionStepsOverride(this_addr, inN);
    }

    public static int native_GetNumPositionStepsOverride(long this_addr) {
        return internal_native_GetNumPositionStepsOverride(this_addr);
    }

    public static void native_SetEnabled(long this_addr, boolean inEnabled) {
        internal_native_SetEnabled(this_addr, inEnabled);
    }

    public static boolean native_GetEnabled(long this_addr) {
        return internal_native_GetEnabled(this_addr);
    }

    public static boolean native_IsActive(long this_addr) {
        return internal_native_IsActive(this_addr);
    }

    public static long native_GetUserData(long this_addr) {
        return internal_native_GetUserData(this_addr);
    }

    public static void native_SetUserData(long this_addr, long inUserData) {
        internal_native_SetUserData(this_addr, inUserData);
    }

    public static void native_ResetWarmStart(long this_addr) {
        internal_native_ResetWarmStart(this_addr);
    }
}
