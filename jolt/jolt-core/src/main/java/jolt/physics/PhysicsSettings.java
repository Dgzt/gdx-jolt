/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics;

import jolt.idl.IDLBase;

public class PhysicsSettings extends IDLBase {

    static public final PhysicsSettings T_01 = new PhysicsSettings((byte) 1, (char) 1);

    static public final PhysicsSettings T_02 = new PhysicsSettings((byte) 1, (char) 1);

    static public final PhysicsSettings T_03 = new PhysicsSettings((byte) 1, (char) 1);

    public PhysicsSettings() {
        long addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new PhysicsSettings();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public PhysicsSettings(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public int get_mMaxInFlightBodyPairs() {
        return internal_native_get_mMaxInFlightBodyPairs((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mMaxInFlightBodyPairs;
*/
    public static native int internal_native_get_mMaxInFlightBodyPairs(long this_addr);

    public void set_mMaxInFlightBodyPairs(int mMaxInFlightBodyPairs) {
        internal_native_set_mMaxInFlightBodyPairs((long) getNativeData().getCPointer(), mMaxInFlightBodyPairs);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mMaxInFlightBodyPairs = mMaxInFlightBodyPairs;
*/
    public static native void internal_native_set_mMaxInFlightBodyPairs(long this_addr, int mMaxInFlightBodyPairs);

    public int get_mStepListenersBatchSize() {
        return internal_native_get_mStepListenersBatchSize((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mStepListenersBatchSize;
*/
    public static native int internal_native_get_mStepListenersBatchSize(long this_addr);

    public void set_mStepListenersBatchSize(int mStepListenersBatchSize) {
        internal_native_set_mStepListenersBatchSize((long) getNativeData().getCPointer(), mStepListenersBatchSize);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mStepListenersBatchSize = mStepListenersBatchSize;
*/
    public static native void internal_native_set_mStepListenersBatchSize(long this_addr, int mStepListenersBatchSize);

    public int get_mStepListenerBatchesPerJob() {
        return internal_native_get_mStepListenerBatchesPerJob((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mStepListenerBatchesPerJob;
*/
    public static native int internal_native_get_mStepListenerBatchesPerJob(long this_addr);

    public void set_mStepListenerBatchesPerJob(int mStepListenerBatchesPerJob) {
        internal_native_set_mStepListenerBatchesPerJob((long) getNativeData().getCPointer(), mStepListenerBatchesPerJob);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mStepListenerBatchesPerJob = mStepListenerBatchesPerJob;
*/
    public static native void internal_native_set_mStepListenerBatchesPerJob(long this_addr, int mStepListenerBatchesPerJob);

    public float get_mBaumgarte() {
        return internal_native_get_mBaumgarte((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mBaumgarte;
*/
    public static native float internal_native_get_mBaumgarte(long this_addr);

    public void set_mBaumgarte(float mBaumgarte) {
        internal_native_set_mBaumgarte((long) getNativeData().getCPointer(), mBaumgarte);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mBaumgarte = mBaumgarte;
*/
    public static native void internal_native_set_mBaumgarte(long this_addr, float mBaumgarte);

    public float get_mSpeculativeContactDistance() {
        return internal_native_get_mSpeculativeContactDistance((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mSpeculativeContactDistance;
*/
    public static native float internal_native_get_mSpeculativeContactDistance(long this_addr);

    public void set_mSpeculativeContactDistance(float mSpeculativeContactDistance) {
        internal_native_set_mSpeculativeContactDistance((long) getNativeData().getCPointer(), mSpeculativeContactDistance);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mSpeculativeContactDistance = mSpeculativeContactDistance;
*/
    public static native void internal_native_set_mSpeculativeContactDistance(long this_addr, float mSpeculativeContactDistance);

    public float get_mPenetrationSlop() {
        return internal_native_get_mPenetrationSlop((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mPenetrationSlop;
*/
    public static native float internal_native_get_mPenetrationSlop(long this_addr);

    public void set_mPenetrationSlop(float mPenetrationSlop) {
        internal_native_set_mPenetrationSlop((long) getNativeData().getCPointer(), mPenetrationSlop);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mPenetrationSlop = mPenetrationSlop;
*/
    public static native void internal_native_set_mPenetrationSlop(long this_addr, float mPenetrationSlop);

    public float get_mLinearCastThreshold() {
        return internal_native_get_mLinearCastThreshold((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mLinearCastThreshold;
*/
    public static native float internal_native_get_mLinearCastThreshold(long this_addr);

    public void set_mLinearCastThreshold(float mLinearCastThreshold) {
        internal_native_set_mLinearCastThreshold((long) getNativeData().getCPointer(), mLinearCastThreshold);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mLinearCastThreshold = mLinearCastThreshold;
*/
    public static native void internal_native_set_mLinearCastThreshold(long this_addr, float mLinearCastThreshold);

    public float get_mLinearCastMaxPenetration() {
        return internal_native_get_mLinearCastMaxPenetration((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mLinearCastMaxPenetration;
*/
    public static native float internal_native_get_mLinearCastMaxPenetration(long this_addr);

    public void set_mLinearCastMaxPenetration(float mLinearCastMaxPenetration) {
        internal_native_set_mLinearCastMaxPenetration((long) getNativeData().getCPointer(), mLinearCastMaxPenetration);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mLinearCastMaxPenetration = mLinearCastMaxPenetration;
*/
    public static native void internal_native_set_mLinearCastMaxPenetration(long this_addr, float mLinearCastMaxPenetration);

    public float get_mManifoldTolerance() {
        return internal_native_get_mManifoldTolerance((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mManifoldTolerance;
*/
    public static native float internal_native_get_mManifoldTolerance(long this_addr);

    public void set_mManifoldTolerance(float mManifoldTolerance) {
        internal_native_set_mManifoldTolerance((long) getNativeData().getCPointer(), mManifoldTolerance);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mManifoldTolerance = mManifoldTolerance;
*/
    public static native void internal_native_set_mManifoldTolerance(long this_addr, float mManifoldTolerance);

    public float get_mMaxPenetrationDistance() {
        return internal_native_get_mMaxPenetrationDistance((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mMaxPenetrationDistance;
*/
    public static native float internal_native_get_mMaxPenetrationDistance(long this_addr);

    public void set_mMaxPenetrationDistance(float mMaxPenetrationDistance) {
        internal_native_set_mMaxPenetrationDistance((long) getNativeData().getCPointer(), mMaxPenetrationDistance);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mMaxPenetrationDistance = mMaxPenetrationDistance;
*/
    public static native void internal_native_set_mMaxPenetrationDistance(long this_addr, float mMaxPenetrationDistance);

    public float get_mBodyPairCacheMaxDeltaPositionSq() {
        return internal_native_get_mBodyPairCacheMaxDeltaPositionSq((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mBodyPairCacheMaxDeltaPositionSq;
*/
    public static native float internal_native_get_mBodyPairCacheMaxDeltaPositionSq(long this_addr);

    public void set_mBodyPairCacheMaxDeltaPositionSq(float mBodyPairCacheMaxDeltaPositionSq) {
        internal_native_set_mBodyPairCacheMaxDeltaPositionSq((long) getNativeData().getCPointer(), mBodyPairCacheMaxDeltaPositionSq);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mBodyPairCacheMaxDeltaPositionSq = mBodyPairCacheMaxDeltaPositionSq;
*/
    public static native void internal_native_set_mBodyPairCacheMaxDeltaPositionSq(long this_addr, float mBodyPairCacheMaxDeltaPositionSq);

    public float get_mBodyPairCacheCosMaxDeltaRotationDiv2() {
        return internal_native_get_mBodyPairCacheCosMaxDeltaRotationDiv2((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mBodyPairCacheCosMaxDeltaRotationDiv2;
*/
    public static native float internal_native_get_mBodyPairCacheCosMaxDeltaRotationDiv2(long this_addr);

    public void set_mBodyPairCacheCosMaxDeltaRotationDiv2(float mBodyPairCacheCosMaxDeltaRotationDiv2) {
        internal_native_set_mBodyPairCacheCosMaxDeltaRotationDiv2((long) getNativeData().getCPointer(), mBodyPairCacheCosMaxDeltaRotationDiv2);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mBodyPairCacheCosMaxDeltaRotationDiv2 = mBodyPairCacheCosMaxDeltaRotationDiv2;
*/
    public static native void internal_native_set_mBodyPairCacheCosMaxDeltaRotationDiv2(long this_addr, float mBodyPairCacheCosMaxDeltaRotationDiv2);

    public float get_mContactNormalCosMaxDeltaRotation() {
        return internal_native_get_mContactNormalCosMaxDeltaRotation((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mContactNormalCosMaxDeltaRotation;
*/
    public static native float internal_native_get_mContactNormalCosMaxDeltaRotation(long this_addr);

    public void set_mContactNormalCosMaxDeltaRotation(float mContactNormalCosMaxDeltaRotation) {
        internal_native_set_mContactNormalCosMaxDeltaRotation((long) getNativeData().getCPointer(), mContactNormalCosMaxDeltaRotation);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mContactNormalCosMaxDeltaRotation = mContactNormalCosMaxDeltaRotation;
*/
    public static native void internal_native_set_mContactNormalCosMaxDeltaRotation(long this_addr, float mContactNormalCosMaxDeltaRotation);

    public float get_mContactPointPreserveLambdaMaxDistSq() {
        return internal_native_get_mContactPointPreserveLambdaMaxDistSq((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mContactPointPreserveLambdaMaxDistSq;
*/
    public static native float internal_native_get_mContactPointPreserveLambdaMaxDistSq(long this_addr);

    public void set_mContactPointPreserveLambdaMaxDistSq(float mContactPointPreserveLambdaMaxDistSq) {
        internal_native_set_mContactPointPreserveLambdaMaxDistSq((long) getNativeData().getCPointer(), mContactPointPreserveLambdaMaxDistSq);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mContactPointPreserveLambdaMaxDistSq = mContactPointPreserveLambdaMaxDistSq;
*/
    public static native void internal_native_set_mContactPointPreserveLambdaMaxDistSq(long this_addr, float mContactPointPreserveLambdaMaxDistSq);

    public int get_mNumVelocitySteps() {
        return internal_native_get_mNumVelocitySteps((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mNumVelocitySteps;
*/
    public static native int internal_native_get_mNumVelocitySteps(long this_addr);

    public void set_mNumVelocitySteps(int mNumVelocitySteps) {
        internal_native_set_mNumVelocitySteps((long) getNativeData().getCPointer(), mNumVelocitySteps);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mNumVelocitySteps = mNumVelocitySteps;
*/
    public static native void internal_native_set_mNumVelocitySteps(long this_addr, int mNumVelocitySteps);

    public int get_mNumPositionSteps() {
        return internal_native_get_mNumPositionSteps((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mNumPositionSteps;
*/
    public static native int internal_native_get_mNumPositionSteps(long this_addr);

    public void set_mNumPositionSteps(int mNumPositionSteps) {
        internal_native_set_mNumPositionSteps((long) getNativeData().getCPointer(), mNumPositionSteps);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mNumPositionSteps = mNumPositionSteps;
*/
    public static native void internal_native_set_mNumPositionSteps(long this_addr, int mNumPositionSteps);

    public float get_mMinVelocityForRestitution() {
        return internal_native_get_mMinVelocityForRestitution((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mMinVelocityForRestitution;
*/
    public static native float internal_native_get_mMinVelocityForRestitution(long this_addr);

    public void set_mMinVelocityForRestitution(float mMinVelocityForRestitution) {
        internal_native_set_mMinVelocityForRestitution((long) getNativeData().getCPointer(), mMinVelocityForRestitution);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mMinVelocityForRestitution = mMinVelocityForRestitution;
*/
    public static native void internal_native_set_mMinVelocityForRestitution(long this_addr, float mMinVelocityForRestitution);

    public float get_mTimeBeforeSleep() {
        return internal_native_get_mTimeBeforeSleep((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mTimeBeforeSleep;
*/
    public static native float internal_native_get_mTimeBeforeSleep(long this_addr);

    public void set_mTimeBeforeSleep(float mTimeBeforeSleep) {
        internal_native_set_mTimeBeforeSleep((long) getNativeData().getCPointer(), mTimeBeforeSleep);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mTimeBeforeSleep = mTimeBeforeSleep;
*/
    public static native void internal_native_set_mTimeBeforeSleep(long this_addr, float mTimeBeforeSleep);

    public float get_mPointVelocitySleepThreshold() {
        return internal_native_get_mPointVelocitySleepThreshold((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mPointVelocitySleepThreshold;
*/
    public static native float internal_native_get_mPointVelocitySleepThreshold(long this_addr);

    public void set_mPointVelocitySleepThreshold(float mPointVelocitySleepThreshold) {
        internal_native_set_mPointVelocitySleepThreshold((long) getNativeData().getCPointer(), mPointVelocitySleepThreshold);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mPointVelocitySleepThreshold = mPointVelocitySleepThreshold;
*/
    public static native void internal_native_set_mPointVelocitySleepThreshold(long this_addr, float mPointVelocitySleepThreshold);

    public boolean get_mDeterministicSimulation() {
        return internal_native_get_mDeterministicSimulation((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mDeterministicSimulation;
*/
    public static native boolean internal_native_get_mDeterministicSimulation(long this_addr);

    public void set_mDeterministicSimulation(boolean mDeterministicSimulation) {
        internal_native_set_mDeterministicSimulation((long) getNativeData().getCPointer(), mDeterministicSimulation);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mDeterministicSimulation = mDeterministicSimulation;
*/
    public static native void internal_native_set_mDeterministicSimulation(long this_addr, boolean mDeterministicSimulation);

    public boolean get_mConstraintWarmStart() {
        return internal_native_get_mConstraintWarmStart((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mConstraintWarmStart;
*/
    public static native boolean internal_native_get_mConstraintWarmStart(long this_addr);

    public void set_mConstraintWarmStart(boolean mConstraintWarmStart) {
        internal_native_set_mConstraintWarmStart((long) getNativeData().getCPointer(), mConstraintWarmStart);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mConstraintWarmStart = mConstraintWarmStart;
*/
    public static native void internal_native_set_mConstraintWarmStart(long this_addr, boolean mConstraintWarmStart);

    public boolean get_mUseBodyPairContactCache() {
        return internal_native_get_mUseBodyPairContactCache((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mUseBodyPairContactCache;
*/
    public static native boolean internal_native_get_mUseBodyPairContactCache(long this_addr);

    public void set_mUseBodyPairContactCache(boolean mUseBodyPairContactCache) {
        internal_native_set_mUseBodyPairContactCache((long) getNativeData().getCPointer(), mUseBodyPairContactCache);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mUseBodyPairContactCache = mUseBodyPairContactCache;
*/
    public static native void internal_native_set_mUseBodyPairContactCache(long this_addr, boolean mUseBodyPairContactCache);

    public boolean get_mUseManifoldReduction() {
        return internal_native_get_mUseManifoldReduction((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mUseManifoldReduction;
*/
    public static native boolean internal_native_get_mUseManifoldReduction(long this_addr);

    public void set_mUseManifoldReduction(boolean mUseManifoldReduction) {
        internal_native_set_mUseManifoldReduction((long) getNativeData().getCPointer(), mUseManifoldReduction);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mUseManifoldReduction = mUseManifoldReduction;
*/
    public static native void internal_native_set_mUseManifoldReduction(long this_addr, boolean mUseManifoldReduction);

    public boolean get_mUseLargeIslandSplitter() {
        return internal_native_get_mUseLargeIslandSplitter((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mUseLargeIslandSplitter;
*/
    public static native boolean internal_native_get_mUseLargeIslandSplitter(long this_addr);

    public void set_mUseLargeIslandSplitter(boolean mUseLargeIslandSplitter) {
        internal_native_set_mUseLargeIslandSplitter((long) getNativeData().getCPointer(), mUseLargeIslandSplitter);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mUseLargeIslandSplitter = mUseLargeIslandSplitter;
*/
    public static native void internal_native_set_mUseLargeIslandSplitter(long this_addr, boolean mUseLargeIslandSplitter);

    public boolean get_mAllowSleeping() {
        return internal_native_get_mAllowSleeping((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mAllowSleeping;
*/
    public static native boolean internal_native_get_mAllowSleeping(long this_addr);

    public void set_mAllowSleeping(boolean mAllowSleeping) {
        internal_native_set_mAllowSleeping((long) getNativeData().getCPointer(), mAllowSleeping);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mAllowSleeping = mAllowSleeping;
*/
    public static native void internal_native_set_mAllowSleeping(long this_addr, boolean mAllowSleeping);

    public boolean get_mCheckActiveEdges() {
        return internal_native_get_mCheckActiveEdges((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
return nativeObject->mCheckActiveEdges;
*/
    public static native boolean internal_native_get_mCheckActiveEdges(long this_addr);

    public void set_mCheckActiveEdges(boolean mCheckActiveEdges) {
        internal_native_set_mCheckActiveEdges((long) getNativeData().getCPointer(), mCheckActiveEdges);
    }

    /*[-JNI;-NATIVE]
PhysicsSettings* nativeObject = (PhysicsSettings*)this_addr;
nativeObject->mCheckActiveEdges = mCheckActiveEdges;
*/
    public static native void internal_native_set_mCheckActiveEdges(long this_addr, boolean mCheckActiveEdges);
}
