/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.softbody;

import jolt.idl.IDLBase;

public class SoftBodyContactSettings extends IDLBase {

    static public final SoftBodyContactSettings T_01 = new SoftBodyContactSettings((byte) 1, (char) 1);

    static public final SoftBodyContactSettings T_02 = new SoftBodyContactSettings((byte) 1, (char) 1);

    static public final SoftBodyContactSettings T_03 = new SoftBodyContactSettings((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SoftBodyContactSettings(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodyContactSettings* nativeObject = (SoftBodyContactSettings*)this_addr;
delete nativeObject;
*/
    private static native void internal_native_deleteNative(long this_addr);

    public float get_mInvMassScale1() {
        return internal_native_get_mInvMassScale1((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodyContactSettings* nativeObject = (SoftBodyContactSettings*)this_addr;
return nativeObject->mInvMassScale1;
*/
    private static native float internal_native_get_mInvMassScale1(long this_addr);

    public void set_mInvMassScale1(float mInvMassScale1) {
        internal_native_set_mInvMassScale1((long) getNativeData().getCPointer(), mInvMassScale1);
    }

    /*[-JNI;-NATIVE]
SoftBodyContactSettings* nativeObject = (SoftBodyContactSettings*)this_addr;
nativeObject->mInvMassScale1 = mInvMassScale1;
*/
    private static native void internal_native_set_mInvMassScale1(long this_addr, float mInvMassScale1);

    public float get_mInvMassScale2() {
        return internal_native_get_mInvMassScale2((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodyContactSettings* nativeObject = (SoftBodyContactSettings*)this_addr;
return nativeObject->mInvMassScale2;
*/
    private static native float internal_native_get_mInvMassScale2(long this_addr);

    public void set_mInvMassScale2(float mInvMassScale2) {
        internal_native_set_mInvMassScale2((long) getNativeData().getCPointer(), mInvMassScale2);
    }

    /*[-JNI;-NATIVE]
SoftBodyContactSettings* nativeObject = (SoftBodyContactSettings*)this_addr;
nativeObject->mInvMassScale2 = mInvMassScale2;
*/
    private static native void internal_native_set_mInvMassScale2(long this_addr, float mInvMassScale2);

    public float get_mInvInertiaScale2() {
        return internal_native_get_mInvInertiaScale2((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodyContactSettings* nativeObject = (SoftBodyContactSettings*)this_addr;
return nativeObject->mInvInertiaScale2;
*/
    private static native float internal_native_get_mInvInertiaScale2(long this_addr);

    public void set_mInvInertiaScale2(float mInvInertiaScale2) {
        internal_native_set_mInvInertiaScale2((long) getNativeData().getCPointer(), mInvInertiaScale2);
    }

    /*[-JNI;-NATIVE]
SoftBodyContactSettings* nativeObject = (SoftBodyContactSettings*)this_addr;
nativeObject->mInvInertiaScale2 = mInvInertiaScale2;
*/
    private static native void internal_native_set_mInvInertiaScale2(long this_addr, float mInvInertiaScale2);

    public boolean get_mIsSensor() {
        return internal_native_get_mIsSensor((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodyContactSettings* nativeObject = (SoftBodyContactSettings*)this_addr;
return nativeObject->mIsSensor;
*/
    private static native boolean internal_native_get_mIsSensor(long this_addr);

    public void set_mIsSensor(boolean mIsSensor) {
        internal_native_set_mIsSensor((long) getNativeData().getCPointer(), mIsSensor);
    }

    /*[-JNI;-NATIVE]
SoftBodyContactSettings* nativeObject = (SoftBodyContactSettings*)this_addr;
nativeObject->mIsSensor = mIsSensor;
*/
    private static native void internal_native_set_mIsSensor(long this_addr, boolean mIsSensor);

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }

    public static float native_get_mInvMassScale1(long this_addr) {
        return internal_native_get_mInvMassScale1(this_addr);
    }

    public static void native_set_mInvMassScale1(long this_addr, float mInvMassScale1) {
        internal_native_set_mInvMassScale1(this_addr, mInvMassScale1);
    }

    public static float native_get_mInvMassScale2(long this_addr) {
        return internal_native_get_mInvMassScale2(this_addr);
    }

    public static void native_set_mInvMassScale2(long this_addr, float mInvMassScale2) {
        internal_native_set_mInvMassScale2(this_addr, mInvMassScale2);
    }

    public static float native_get_mInvInertiaScale2(long this_addr) {
        return internal_native_get_mInvInertiaScale2(this_addr);
    }

    public static void native_set_mInvInertiaScale2(long this_addr, float mInvInertiaScale2) {
        internal_native_set_mInvInertiaScale2(this_addr, mInvInertiaScale2);
    }

    public static boolean native_get_mIsSensor(long this_addr) {
        return internal_native_get_mIsSensor(this_addr);
    }

    public static void native_set_mIsSensor(long this_addr, boolean mIsSensor) {
        internal_native_set_mIsSensor(this_addr, mIsSensor);
    }
}
