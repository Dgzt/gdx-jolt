/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.softbody;

import jolt.idl.IDLBase;

public class SoftBodySharedSettingsVertexAttributes extends IDLBase {

    static public final SoftBodySharedSettingsVertexAttributes T_01 = new SoftBodySharedSettingsVertexAttributes((byte) 1, (char) 1);

    static public final SoftBodySharedSettingsVertexAttributes T_02 = new SoftBodySharedSettingsVertexAttributes((byte) 1, (char) 1);

    static public final SoftBodySharedSettingsVertexAttributes T_03 = new SoftBodySharedSettingsVertexAttributes((byte) 1, (char) 1);

    public SoftBodySharedSettingsVertexAttributes() {
        long addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new SoftBodySharedSettingsVertexAttributes();
*/
    private static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SoftBodySharedSettingsVertexAttributes(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsVertexAttributes* nativeObject = (SoftBodySharedSettingsVertexAttributes*)this_addr;
delete nativeObject;
*/
    private static native void internal_native_deleteNative(long this_addr);

    public float get_mCompliance() {
        return internal_native_get_mCompliance((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsVertexAttributes* nativeObject = (SoftBodySharedSettingsVertexAttributes*)this_addr;
return nativeObject->mCompliance;
*/
    private static native float internal_native_get_mCompliance(long this_addr);

    public void set_mCompliance(float mCompliance) {
        internal_native_set_mCompliance((long) getNativeData().getCPointer(), mCompliance);
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsVertexAttributes* nativeObject = (SoftBodySharedSettingsVertexAttributes*)this_addr;
nativeObject->mCompliance = mCompliance;
*/
    private static native void internal_native_set_mCompliance(long this_addr, float mCompliance);

    public float get_mShearCompliance() {
        return internal_native_get_mShearCompliance((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsVertexAttributes* nativeObject = (SoftBodySharedSettingsVertexAttributes*)this_addr;
return nativeObject->mShearCompliance;
*/
    private static native float internal_native_get_mShearCompliance(long this_addr);

    public void set_mShearCompliance(float mShearCompliance) {
        internal_native_set_mShearCompliance((long) getNativeData().getCPointer(), mShearCompliance);
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsVertexAttributes* nativeObject = (SoftBodySharedSettingsVertexAttributes*)this_addr;
nativeObject->mShearCompliance = mShearCompliance;
*/
    private static native void internal_native_set_mShearCompliance(long this_addr, float mShearCompliance);

    public float get_mBendCompliance() {
        return internal_native_get_mBendCompliance((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsVertexAttributes* nativeObject = (SoftBodySharedSettingsVertexAttributes*)this_addr;
return nativeObject->mBendCompliance;
*/
    private static native float internal_native_get_mBendCompliance(long this_addr);

    public void set_mBendCompliance(float mBendCompliance) {
        internal_native_set_mBendCompliance((long) getNativeData().getCPointer(), mBendCompliance);
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsVertexAttributes* nativeObject = (SoftBodySharedSettingsVertexAttributes*)this_addr;
nativeObject->mBendCompliance = mBendCompliance;
*/
    private static native void internal_native_set_mBendCompliance(long this_addr, float mBendCompliance);

    public SoftBodySharedSettings_ELRAType get_mLRAType() {
        int value = internal_native_get_mLRAType((long) getNativeData().getCPointer());
        return SoftBodySharedSettings_ELRAType.MAP.get(value);
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsVertexAttributes* nativeObject = (SoftBodySharedSettingsVertexAttributes*)this_addr;
return (jint)nativeObject->mLRAType;
*/
    private static native int internal_native_get_mLRAType(long this_addr);

    public void set_mLRAType(SoftBodySharedSettings_ELRAType mLRAType) {
        internal_native_set_mLRAType((long) getNativeData().getCPointer(), (long) (mLRAType != null ? mLRAType.getValue() : 0));
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsVertexAttributes* nativeObject = (SoftBodySharedSettingsVertexAttributes*)this_addr;
nativeObject->mLRAType = (::SoftBodySharedSettings_ELRAType)mLRAType;
*/
    private static native void internal_native_set_mLRAType(long this_addr, long mLRAType);

    public float get_mLRAMaxDistanceMultiplier() {
        return internal_native_get_mLRAMaxDistanceMultiplier((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsVertexAttributes* nativeObject = (SoftBodySharedSettingsVertexAttributes*)this_addr;
return nativeObject->mLRAMaxDistanceMultiplier;
*/
    private static native float internal_native_get_mLRAMaxDistanceMultiplier(long this_addr);

    public void set_mLRAMaxDistanceMultiplier(float mLRAMaxDistanceMultiplier) {
        internal_native_set_mLRAMaxDistanceMultiplier((long) getNativeData().getCPointer(), mLRAMaxDistanceMultiplier);
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsVertexAttributes* nativeObject = (SoftBodySharedSettingsVertexAttributes*)this_addr;
nativeObject->mLRAMaxDistanceMultiplier = mLRAMaxDistanceMultiplier;
*/
    private static native void internal_native_set_mLRAMaxDistanceMultiplier(long this_addr, float mLRAMaxDistanceMultiplier);

    public static long native_create() {
        return internal_native_create();
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }

    public static float native_get_mCompliance(long this_addr) {
        return internal_native_get_mCompliance(this_addr);
    }

    public static void native_set_mCompliance(long this_addr, float mCompliance) {
        internal_native_set_mCompliance(this_addr, mCompliance);
    }

    public static float native_get_mShearCompliance(long this_addr) {
        return internal_native_get_mShearCompliance(this_addr);
    }

    public static void native_set_mShearCompliance(long this_addr, float mShearCompliance) {
        internal_native_set_mShearCompliance(this_addr, mShearCompliance);
    }

    public static float native_get_mBendCompliance(long this_addr) {
        return internal_native_get_mBendCompliance(this_addr);
    }

    public static void native_set_mBendCompliance(long this_addr, float mBendCompliance) {
        internal_native_set_mBendCompliance(this_addr, mBendCompliance);
    }

    public static long native_get_mLRAType(long this_addr) {
        return internal_native_get_mLRAType(this_addr);
    }

    public static void native_set_mLRAType(long this_addr, long mLRAType) {
        internal_native_set_mLRAType(this_addr, mLRAType);
    }

    public static float native_get_mLRAMaxDistanceMultiplier(long this_addr) {
        return internal_native_get_mLRAMaxDistanceMultiplier(this_addr);
    }

    public static void native_set_mLRAMaxDistanceMultiplier(long this_addr, float mLRAMaxDistanceMultiplier) {
        internal_native_set_mLRAMaxDistanceMultiplier(this_addr, mLRAMaxDistanceMultiplier);
    }
}
