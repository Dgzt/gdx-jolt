/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.softbody;

import jolt.Shape;
import jolt.SubShapeID;

public class SoftBodyShape extends Shape {

    static public final SoftBodyShape T_01 = new SoftBodyShape((byte) 1, (char) 1);

    static public final SoftBodyShape T_02 = new SoftBodyShape((byte) 1, (char) 1);

    static public final SoftBodyShape T_03 = new SoftBodyShape((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SoftBodyShape(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public int GetSubShapeIDBits() {
        return internal_native_GetSubShapeIDBits((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodyShape* nativeObject = (SoftBodyShape*)this_addr;
return nativeObject->GetSubShapeIDBits();
*/
    private static native int internal_native_GetSubShapeIDBits(long this_addr);

    public int GetFaceIndex(SubShapeID inSubShapeID) {
        return internal_native_GetFaceIndex((long) getNativeData().getCPointer(), (long) (inSubShapeID != null ? inSubShapeID.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
SoftBodyShape* nativeObject = (SoftBodyShape*)this_addr;
return nativeObject->GetFaceIndex(*((SubShapeID* )inSubShapeID_addr));
*/
    private static native int internal_native_GetFaceIndex(long this_addr, long inSubShapeID_addr);

    public static int native_GetSubShapeIDBits(long this_addr) {
        return internal_native_GetSubShapeIDBits(this_addr);
    }

    public static int native_GetFaceIndex(long this_addr, long inSubShapeID_addr) {
        return internal_native_GetFaceIndex(this_addr, inSubShapeID_addr);
    }
}
