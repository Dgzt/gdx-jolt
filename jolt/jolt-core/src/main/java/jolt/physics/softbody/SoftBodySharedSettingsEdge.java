/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.softbody;

import jolt.idl.IDLBase;

public class SoftBodySharedSettingsEdge extends IDLBase {

    static public final SoftBodySharedSettingsEdge T_01 = new SoftBodySharedSettingsEdge((byte) 1, (char) 1);

    static public final SoftBodySharedSettingsEdge T_02 = new SoftBodySharedSettingsEdge((byte) 1, (char) 1);

    static public final SoftBodySharedSettingsEdge T_03 = new SoftBodySharedSettingsEdge((byte) 1, (char) 1);

    public SoftBodySharedSettingsEdge(int inVertex1, int inVertex2, float inCompliance) {
        long addr = internal_native_create_int_int_float(inVertex1, inVertex2, inCompliance);
        getNativeData().reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new SoftBodySharedSettingsEdge(inVertex1, inVertex2, (float)inCompliance);
*/
    private static native long internal_native_create_int_int_float(int inVertex1, int inVertex2, float inCompliance);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SoftBodySharedSettingsEdge(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsEdge* nativeObject = (SoftBodySharedSettingsEdge*)this_addr;
delete nativeObject;
*/
    private static native void internal_native_deleteNative(long this_addr);

    public int get_mVertex(int index) {
        return internal_native_get_mVertex((long) getNativeData().getCPointer(), index);
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsEdge* nativeObject = (SoftBodySharedSettingsEdge*)this_addr;
return nativeObject->mVertex[index];
*/
    private static native int internal_native_get_mVertex(long this_addr, int index);

    public void set_mVertex(int index, int mVertex) {
        internal_native_set_mVertex((long) getNativeData().getCPointer(), index, mVertex);
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsEdge* nativeObject = (SoftBodySharedSettingsEdge*)this_addr;
nativeObject->mVertex[index] = mVertex;
*/
    private static native void internal_native_set_mVertex(long this_addr, int index, int mVertex);

    public float get_mRestLength() {
        return internal_native_get_mRestLength((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsEdge* nativeObject = (SoftBodySharedSettingsEdge*)this_addr;
return nativeObject->mRestLength;
*/
    private static native float internal_native_get_mRestLength(long this_addr);

    public void set_mRestLength(float mRestLength) {
        internal_native_set_mRestLength((long) getNativeData().getCPointer(), mRestLength);
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsEdge* nativeObject = (SoftBodySharedSettingsEdge*)this_addr;
nativeObject->mRestLength = mRestLength;
*/
    private static native void internal_native_set_mRestLength(long this_addr, float mRestLength);

    public float get_mCompliance() {
        return internal_native_get_mCompliance((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsEdge* nativeObject = (SoftBodySharedSettingsEdge*)this_addr;
return nativeObject->mCompliance;
*/
    private static native float internal_native_get_mCompliance(long this_addr);

    public void set_mCompliance(float mCompliance) {
        internal_native_set_mCompliance((long) getNativeData().getCPointer(), mCompliance);
    }

    /*[-JNI;-NATIVE]
SoftBodySharedSettingsEdge* nativeObject = (SoftBodySharedSettingsEdge*)this_addr;
nativeObject->mCompliance = mCompliance;
*/
    private static native void internal_native_set_mCompliance(long this_addr, float mCompliance);

    public static long native_create_int_int_float(int inVertex1, int inVertex2, float inCompliance) {
        return internal_native_create_int_int_float(inVertex1, inVertex2, inCompliance);
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }

    public static int native_get_mVertex(long this_addr, int index) {
        return internal_native_get_mVertex(this_addr, index);
    }

    public static void native_set_mVertex(long this_addr, int index, int mVertex) {
        internal_native_set_mVertex(this_addr, index, mVertex);
    }

    public static float native_get_mRestLength(long this_addr) {
        return internal_native_get_mRestLength(this_addr);
    }

    public static void native_set_mRestLength(long this_addr, float mRestLength) {
        internal_native_set_mRestLength(this_addr, mRestLength);
    }

    public static float native_get_mCompliance(long this_addr) {
        return internal_native_get_mCompliance(this_addr);
    }

    public static void native_set_mCompliance(long this_addr, float mCompliance) {
        internal_native_set_mCompliance(this_addr, mCompliance);
    }
}
