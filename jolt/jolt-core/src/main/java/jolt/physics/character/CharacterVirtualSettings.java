/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.character;

import jolt.math.Vec3;
import jolt.physics.collision.shape.Shape;
import jolt.physics.body.BodyID;

public class CharacterVirtualSettings extends CharacterBaseSettings {

    private CharacterID CharacterID_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_0;

    private Shape Shape_TEMP_GEN_0;

    private BodyID BodyID_TEMP_GEN_0;

    static public final CharacterVirtualSettings T_01 = new CharacterVirtualSettings((byte) 1, (char) 1);

    static public final CharacterVirtualSettings T_02 = new CharacterVirtualSettings((byte) 1, (char) 1);

    static public final CharacterVirtualSettings T_03 = new CharacterVirtualSettings((byte) 1, (char) 1);

    public CharacterVirtualSettings() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        getNativeData().reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new CharacterVirtualSettings();
*/
    private static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public CharacterVirtualSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public CharacterID get_mID() {
        long pointer = internal_native_get_mID((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (CharacterID_TEMP_GEN_0 == null)
            CharacterID_TEMP_GEN_0 = new CharacterID((byte) 1, (char) 1);
        CharacterID_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return CharacterID_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return (jlong)&nativeObject->mID;
*/
    private static native long internal_native_get_mID(long this_addr);

    public void set_mID(CharacterID mID) {
        internal_native_set_mID((long) getNativeData().getCPointer(), (long) (mID != null ? mID.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mID = *((CharacterID*)mID_addr);
*/
    private static native void internal_native_set_mID(long this_addr, long mID_addr);

    public float get_mMass() {
        return internal_native_get_mMass((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return nativeObject->mMass;
*/
    private static native float internal_native_get_mMass(long this_addr);

    public void set_mMass(float mMass) {
        internal_native_set_mMass((long) getNativeData().getCPointer(), mMass);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mMass = mMass;
*/
    private static native void internal_native_set_mMass(long this_addr, float mMass);

    public float get_mMaxStrength() {
        return internal_native_get_mMaxStrength((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return nativeObject->mMaxStrength;
*/
    private static native float internal_native_get_mMaxStrength(long this_addr);

    public void set_mMaxStrength(float mMaxStrength) {
        internal_native_set_mMaxStrength((long) getNativeData().getCPointer(), mMaxStrength);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mMaxStrength = mMaxStrength;
*/
    private static native void internal_native_set_mMaxStrength(long this_addr, float mMaxStrength);

    public Vec3 get_mShapeOffset() {
        long pointer = internal_native_get_mShapeOffset((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return (jlong)&nativeObject->mShapeOffset;
*/
    private static native long internal_native_get_mShapeOffset(long this_addr);

    public void set_mShapeOffset(Vec3 mShapeOffset) {
        internal_native_set_mShapeOffset((long) getNativeData().getCPointer(), (long) (mShapeOffset != null ? mShapeOffset.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mShapeOffset = *((Vec3*)mShapeOffset_addr);
*/
    private static native void internal_native_set_mShapeOffset(long this_addr, long mShapeOffset_addr);

    public int get_mBackFaceMode() {
        return internal_native_get_mBackFaceMode((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return (jint)nativeObject->mBackFaceMode;
*/
    private static native int internal_native_get_mBackFaceMode(long this_addr);

    public void set_mBackFaceMode(int mBackFaceMode) {
        internal_native_set_mBackFaceMode((long) getNativeData().getCPointer(), mBackFaceMode);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mBackFaceMode = (::EBackFaceMode)mBackFaceMode;
*/
    private static native void internal_native_set_mBackFaceMode(long this_addr, int mBackFaceMode);

    public float get_mPredictiveContactDistance() {
        return internal_native_get_mPredictiveContactDistance((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return nativeObject->mPredictiveContactDistance;
*/
    private static native float internal_native_get_mPredictiveContactDistance(long this_addr);

    public void set_mPredictiveContactDistance(float mPredictiveContactDistance) {
        internal_native_set_mPredictiveContactDistance((long) getNativeData().getCPointer(), mPredictiveContactDistance);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mPredictiveContactDistance = mPredictiveContactDistance;
*/
    private static native void internal_native_set_mPredictiveContactDistance(long this_addr, float mPredictiveContactDistance);

    public int get_mMaxCollisionIterations() {
        return internal_native_get_mMaxCollisionIterations((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return nativeObject->mMaxCollisionIterations;
*/
    private static native int internal_native_get_mMaxCollisionIterations(long this_addr);

    public void set_mMaxCollisionIterations(int mMaxCollisionIterations) {
        internal_native_set_mMaxCollisionIterations((long) getNativeData().getCPointer(), mMaxCollisionIterations);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mMaxCollisionIterations = mMaxCollisionIterations;
*/
    private static native void internal_native_set_mMaxCollisionIterations(long this_addr, int mMaxCollisionIterations);

    public int get_mMaxConstraintIterations() {
        return internal_native_get_mMaxConstraintIterations((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return nativeObject->mMaxConstraintIterations;
*/
    private static native int internal_native_get_mMaxConstraintIterations(long this_addr);

    public void set_mMaxConstraintIterations(int mMaxConstraintIterations) {
        internal_native_set_mMaxConstraintIterations((long) getNativeData().getCPointer(), mMaxConstraintIterations);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mMaxConstraintIterations = mMaxConstraintIterations;
*/
    private static native void internal_native_set_mMaxConstraintIterations(long this_addr, int mMaxConstraintIterations);

    public float get_mMinTimeRemaining() {
        return internal_native_get_mMinTimeRemaining((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return nativeObject->mMinTimeRemaining;
*/
    private static native float internal_native_get_mMinTimeRemaining(long this_addr);

    public void set_mMinTimeRemaining(float mMinTimeRemaining) {
        internal_native_set_mMinTimeRemaining((long) getNativeData().getCPointer(), mMinTimeRemaining);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mMinTimeRemaining = mMinTimeRemaining;
*/
    private static native void internal_native_set_mMinTimeRemaining(long this_addr, float mMinTimeRemaining);

    public float get_mCollisionTolerance() {
        return internal_native_get_mCollisionTolerance((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return nativeObject->mCollisionTolerance;
*/
    private static native float internal_native_get_mCollisionTolerance(long this_addr);

    public void set_mCollisionTolerance(float mCollisionTolerance) {
        internal_native_set_mCollisionTolerance((long) getNativeData().getCPointer(), mCollisionTolerance);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mCollisionTolerance = mCollisionTolerance;
*/
    private static native void internal_native_set_mCollisionTolerance(long this_addr, float mCollisionTolerance);

    public float get_mCharacterPadding() {
        return internal_native_get_mCharacterPadding((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return nativeObject->mCharacterPadding;
*/
    private static native float internal_native_get_mCharacterPadding(long this_addr);

    public void set_mCharacterPadding(float mCharacterPadding) {
        internal_native_set_mCharacterPadding((long) getNativeData().getCPointer(), mCharacterPadding);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mCharacterPadding = mCharacterPadding;
*/
    private static native void internal_native_set_mCharacterPadding(long this_addr, float mCharacterPadding);

    public int get_mMaxNumHits() {
        return internal_native_get_mMaxNumHits((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return nativeObject->mMaxNumHits;
*/
    private static native int internal_native_get_mMaxNumHits(long this_addr);

    public void set_mMaxNumHits(int mMaxNumHits) {
        internal_native_set_mMaxNumHits((long) getNativeData().getCPointer(), mMaxNumHits);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mMaxNumHits = mMaxNumHits;
*/
    private static native void internal_native_set_mMaxNumHits(long this_addr, int mMaxNumHits);

    public float get_mHitReductionCosMaxAngle() {
        return internal_native_get_mHitReductionCosMaxAngle((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return nativeObject->mHitReductionCosMaxAngle;
*/
    private static native float internal_native_get_mHitReductionCosMaxAngle(long this_addr);

    public void set_mHitReductionCosMaxAngle(float mHitReductionCosMaxAngle) {
        internal_native_set_mHitReductionCosMaxAngle((long) getNativeData().getCPointer(), mHitReductionCosMaxAngle);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mHitReductionCosMaxAngle = mHitReductionCosMaxAngle;
*/
    private static native void internal_native_set_mHitReductionCosMaxAngle(long this_addr, float mHitReductionCosMaxAngle);

    public float get_mPenetrationRecoverySpeed() {
        return internal_native_get_mPenetrationRecoverySpeed((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return nativeObject->mPenetrationRecoverySpeed;
*/
    private static native float internal_native_get_mPenetrationRecoverySpeed(long this_addr);

    public void set_mPenetrationRecoverySpeed(float mPenetrationRecoverySpeed) {
        internal_native_set_mPenetrationRecoverySpeed((long) getNativeData().getCPointer(), mPenetrationRecoverySpeed);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mPenetrationRecoverySpeed = mPenetrationRecoverySpeed;
*/
    private static native void internal_native_set_mPenetrationRecoverySpeed(long this_addr, float mPenetrationRecoverySpeed);

    public Shape get_mInnerBodyShape() {
        long pointer = internal_native_get_mInnerBodyShape((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (Shape_TEMP_GEN_0 == null)
            Shape_TEMP_GEN_0 = new Shape((byte) 1, (char) 1);
        Shape_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return Shape_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
const Shape* attr = nativeObject->mInnerBodyShape;
return (jlong)attr;
*/
    private static native long internal_native_get_mInnerBodyShape(long this_addr);

    public void set_mInnerBodyShape(Shape mInnerBodyShape) {
        internal_native_set_mInnerBodyShape((long) getNativeData().getCPointer(), (long) (mInnerBodyShape != null ? mInnerBodyShape.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mInnerBodyShape = (Shape*)mInnerBodyShape_addr;
*/
    private static native void internal_native_set_mInnerBodyShape(long this_addr, long mInnerBodyShape_addr);

    public BodyID get_mInnerBodyIDOverride() {
        long pointer = internal_native_get_mInnerBodyIDOverride((long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (BodyID_TEMP_GEN_0 == null)
            BodyID_TEMP_GEN_0 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return BodyID_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return (jlong)&nativeObject->mInnerBodyIDOverride;
*/
    private static native long internal_native_get_mInnerBodyIDOverride(long this_addr);

    public void set_mInnerBodyIDOverride(BodyID mInnerBodyIDOverride) {
        internal_native_set_mInnerBodyIDOverride((long) getNativeData().getCPointer(), (long) (mInnerBodyIDOverride != null ? mInnerBodyIDOverride.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mInnerBodyIDOverride = *((BodyID*)mInnerBodyIDOverride_addr);
*/
    private static native void internal_native_set_mInnerBodyIDOverride(long this_addr, long mInnerBodyIDOverride_addr);

    public int get_mInnerBodyLayer() {
        return internal_native_get_mInnerBodyLayer((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
return nativeObject->mInnerBodyLayer;
*/
    private static native int internal_native_get_mInnerBodyLayer(long this_addr);

    public void set_mInnerBodyLayer(int mInnerBodyLayer) {
        internal_native_set_mInnerBodyLayer((long) getNativeData().getCPointer(), mInnerBodyLayer);
    }

    /*[-JNI;-NATIVE]
CharacterVirtualSettings* nativeObject = (CharacterVirtualSettings*)this_addr;
nativeObject->mInnerBodyLayer = mInnerBodyLayer;
*/
    private static native void internal_native_set_mInnerBodyLayer(long this_addr, int mInnerBodyLayer);

    public static long native_create() {
        return internal_native_create();
    }

    public static long native_get_mID(long this_addr) {
        return internal_native_get_mID(this_addr);
    }

    public static void native_set_mID(long this_addr, long mID_addr) {
        internal_native_set_mID(this_addr, mID_addr);
    }

    public static float native_get_mMass(long this_addr) {
        return internal_native_get_mMass(this_addr);
    }

    public static void native_set_mMass(long this_addr, float mMass) {
        internal_native_set_mMass(this_addr, mMass);
    }

    public static float native_get_mMaxStrength(long this_addr) {
        return internal_native_get_mMaxStrength(this_addr);
    }

    public static void native_set_mMaxStrength(long this_addr, float mMaxStrength) {
        internal_native_set_mMaxStrength(this_addr, mMaxStrength);
    }

    public static long native_get_mShapeOffset(long this_addr) {
        return internal_native_get_mShapeOffset(this_addr);
    }

    public static void native_set_mShapeOffset(long this_addr, long mShapeOffset_addr) {
        internal_native_set_mShapeOffset(this_addr, mShapeOffset_addr);
    }

    public static int native_get_mBackFaceMode(long this_addr) {
        return internal_native_get_mBackFaceMode(this_addr);
    }

    public static void native_set_mBackFaceMode(long this_addr, int mBackFaceMode) {
        internal_native_set_mBackFaceMode(this_addr, mBackFaceMode);
    }

    public static float native_get_mPredictiveContactDistance(long this_addr) {
        return internal_native_get_mPredictiveContactDistance(this_addr);
    }

    public static void native_set_mPredictiveContactDistance(long this_addr, float mPredictiveContactDistance) {
        internal_native_set_mPredictiveContactDistance(this_addr, mPredictiveContactDistance);
    }

    public static int native_get_mMaxCollisionIterations(long this_addr) {
        return internal_native_get_mMaxCollisionIterations(this_addr);
    }

    public static void native_set_mMaxCollisionIterations(long this_addr, int mMaxCollisionIterations) {
        internal_native_set_mMaxCollisionIterations(this_addr, mMaxCollisionIterations);
    }

    public static int native_get_mMaxConstraintIterations(long this_addr) {
        return internal_native_get_mMaxConstraintIterations(this_addr);
    }

    public static void native_set_mMaxConstraintIterations(long this_addr, int mMaxConstraintIterations) {
        internal_native_set_mMaxConstraintIterations(this_addr, mMaxConstraintIterations);
    }

    public static float native_get_mMinTimeRemaining(long this_addr) {
        return internal_native_get_mMinTimeRemaining(this_addr);
    }

    public static void native_set_mMinTimeRemaining(long this_addr, float mMinTimeRemaining) {
        internal_native_set_mMinTimeRemaining(this_addr, mMinTimeRemaining);
    }

    public static float native_get_mCollisionTolerance(long this_addr) {
        return internal_native_get_mCollisionTolerance(this_addr);
    }

    public static void native_set_mCollisionTolerance(long this_addr, float mCollisionTolerance) {
        internal_native_set_mCollisionTolerance(this_addr, mCollisionTolerance);
    }

    public static float native_get_mCharacterPadding(long this_addr) {
        return internal_native_get_mCharacterPadding(this_addr);
    }

    public static void native_set_mCharacterPadding(long this_addr, float mCharacterPadding) {
        internal_native_set_mCharacterPadding(this_addr, mCharacterPadding);
    }

    public static int native_get_mMaxNumHits(long this_addr) {
        return internal_native_get_mMaxNumHits(this_addr);
    }

    public static void native_set_mMaxNumHits(long this_addr, int mMaxNumHits) {
        internal_native_set_mMaxNumHits(this_addr, mMaxNumHits);
    }

    public static float native_get_mHitReductionCosMaxAngle(long this_addr) {
        return internal_native_get_mHitReductionCosMaxAngle(this_addr);
    }

    public static void native_set_mHitReductionCosMaxAngle(long this_addr, float mHitReductionCosMaxAngle) {
        internal_native_set_mHitReductionCosMaxAngle(this_addr, mHitReductionCosMaxAngle);
    }

    public static float native_get_mPenetrationRecoverySpeed(long this_addr) {
        return internal_native_get_mPenetrationRecoverySpeed(this_addr);
    }

    public static void native_set_mPenetrationRecoverySpeed(long this_addr, float mPenetrationRecoverySpeed) {
        internal_native_set_mPenetrationRecoverySpeed(this_addr, mPenetrationRecoverySpeed);
    }

    public static long native_get_mInnerBodyShape(long this_addr) {
        return internal_native_get_mInnerBodyShape(this_addr);
    }

    public static void native_set_mInnerBodyShape(long this_addr, long mInnerBodyShape_addr) {
        internal_native_set_mInnerBodyShape(this_addr, mInnerBodyShape_addr);
    }

    public static long native_get_mInnerBodyIDOverride(long this_addr) {
        return internal_native_get_mInnerBodyIDOverride(this_addr);
    }

    public static void native_set_mInnerBodyIDOverride(long this_addr, long mInnerBodyIDOverride_addr) {
        internal_native_set_mInnerBodyIDOverride(this_addr, mInnerBodyIDOverride_addr);
    }

    public static int native_get_mInnerBodyLayer(long this_addr) {
        return internal_native_get_mInnerBodyLayer(this_addr);
    }

    public static void native_set_mInnerBodyLayer(long this_addr, int mInnerBodyLayer) {
        internal_native_set_mInnerBodyLayer(this_addr, mInnerBodyLayer);
    }
}
