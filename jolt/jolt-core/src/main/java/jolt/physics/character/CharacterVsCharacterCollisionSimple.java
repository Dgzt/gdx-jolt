/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.character;

public class CharacterVsCharacterCollisionSimple extends CharacterVsCharacterCollision {

    static public final CharacterVsCharacterCollisionSimple T_01 = new CharacterVsCharacterCollisionSimple((byte) 1, (char) 1);

    static public final CharacterVsCharacterCollisionSimple T_02 = new CharacterVsCharacterCollisionSimple((byte) 1, (char) 1);

    static public final CharacterVsCharacterCollisionSimple T_03 = new CharacterVsCharacterCollisionSimple((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public CharacterVsCharacterCollisionSimple(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
CharacterVsCharacterCollisionSimple* nativeObject = (CharacterVsCharacterCollisionSimple*)this_addr;
delete nativeObject;
*/
    private static native void internal_native_deleteNative(long this_addr);

    public void Add(CharacterVirtual inCharacter) {
        internal_native_Add((long) getNativeData().getCPointer(), (long) (inCharacter != null ? inCharacter.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
CharacterVsCharacterCollisionSimple* nativeObject = (CharacterVsCharacterCollisionSimple*)this_addr;
nativeObject->Add((CharacterVirtual* )inCharacter_addr);
*/
    private static native void internal_native_Add(long this_addr, long inCharacter_addr);

    public void Remove(CharacterVirtual inCharacter) {
        internal_native_Remove((long) getNativeData().getCPointer(), (long) (inCharacter != null ? inCharacter.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
CharacterVsCharacterCollisionSimple* nativeObject = (CharacterVsCharacterCollisionSimple*)this_addr;
nativeObject->Remove((CharacterVirtual* )inCharacter_addr);
*/
    private static native void internal_native_Remove(long this_addr, long inCharacter_addr);

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }

    public static void native_Add(long this_addr, long inCharacter_addr) {
        internal_native_Add(this_addr, inCharacter_addr);
    }

    public static void native_Remove(long this_addr, long inCharacter_addr) {
        internal_native_Remove(this_addr, inCharacter_addr);
    }
}
