/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.vehicle;

public class TrackedVehicleControllerSettings extends VehicleControllerSettings {

    private VehicleEngineSettings VehicleEngineSettings_TEMP_GEN_0;

    private VehicleTransmissionSettings VehicleTransmissionSettings_TEMP_GEN_0;

    private VehicleTrackSettings VehicleTrackSettings_TEMP_GEN_0;

    static public final TrackedVehicleControllerSettings T_01 = new TrackedVehicleControllerSettings((byte) 1, (char) 1);

    static public final TrackedVehicleControllerSettings T_02 = new TrackedVehicleControllerSettings((byte) 1, (char) 1);

    static public final TrackedVehicleControllerSettings T_03 = new TrackedVehicleControllerSettings((byte) 1, (char) 1);

    public TrackedVehicleControllerSettings() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        getNativeData().reset(addr, false);
    }

    /*[-JNI;-NATIVE]
return (jlong)new TrackedVehicleControllerSettings();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public TrackedVehicleControllerSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public VehicleEngineSettings get_mEngine() {
        long pointer = internal_native_get_mEngine((long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (VehicleEngineSettings_TEMP_GEN_0 == null)
            VehicleEngineSettings_TEMP_GEN_0 = new VehicleEngineSettings((byte) 1, (char) 1);
        VehicleEngineSettings_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return VehicleEngineSettings_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
TrackedVehicleControllerSettings* nativeObject = (TrackedVehicleControllerSettings*)this_addr;
return (jlong)&nativeObject->mEngine;
*/
    public static native long internal_native_get_mEngine(long this_addr);

    public void set_mEngine(VehicleEngineSettings mEngine) {
        internal_native_set_mEngine((long) getNativeData().getCPointer(), (long) (mEngine != null ? mEngine.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
TrackedVehicleControllerSettings* nativeObject = (TrackedVehicleControllerSettings*)this_addr;
nativeObject->mEngine = *((VehicleEngineSettings*)mEngine_addr);
*/
    public static native void internal_native_set_mEngine(long this_addr, long mEngine_addr);

    public VehicleTransmissionSettings get_mTransmission() {
        long pointer = internal_native_get_mTransmission((long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (VehicleTransmissionSettings_TEMP_GEN_0 == null)
            VehicleTransmissionSettings_TEMP_GEN_0 = new VehicleTransmissionSettings((byte) 1, (char) 1);
        VehicleTransmissionSettings_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return VehicleTransmissionSettings_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
TrackedVehicleControllerSettings* nativeObject = (TrackedVehicleControllerSettings*)this_addr;
return (jlong)&nativeObject->mTransmission;
*/
    public static native long internal_native_get_mTransmission(long this_addr);

    public void set_mTransmission(VehicleTransmissionSettings mTransmission) {
        internal_native_set_mTransmission((long) getNativeData().getCPointer(), (long) (mTransmission != null ? mTransmission.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
TrackedVehicleControllerSettings* nativeObject = (TrackedVehicleControllerSettings*)this_addr;
nativeObject->mTransmission = *((VehicleTransmissionSettings*)mTransmission_addr);
*/
    public static native void internal_native_set_mTransmission(long this_addr, long mTransmission_addr);

    public VehicleTrackSettings get_mTracks(int index) {
        long pointer = internal_native_get_mTracks((long) getNativeData().getCPointer(), index);
        if (pointer == 0)
            return null;
        if (VehicleTrackSettings_TEMP_GEN_0 == null)
            VehicleTrackSettings_TEMP_GEN_0 = new VehicleTrackSettings((byte) 1, (char) 1);
        VehicleTrackSettings_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return VehicleTrackSettings_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
TrackedVehicleControllerSettings* nativeObject = (TrackedVehicleControllerSettings*)this_addr;
return (jlong)&nativeObject->mTracks[index];
*/
    public static native long internal_native_get_mTracks(long this_addr, int index);

    public void set_mTracks(int index, VehicleTrackSettings mTracks) {
        internal_native_set_mTracks((long) getNativeData().getCPointer(), index, (long) (mTracks != null ? mTracks.getNativeData().getCPointer() : 0));
    }

    /*[-JNI;-NATIVE]
TrackedVehicleControllerSettings* nativeObject = (TrackedVehicleControllerSettings*)this_addr;
nativeObject->mTracks[index] = *((VehicleTrackSettings*)mTracks_addr);
*/
    public static native void internal_native_set_mTracks(long this_addr, int index, long mTracks_addr);
}
