/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.vehicle;

public class MotorcycleControllerSettings extends WheeledVehicleControllerSettings {

    static public final MotorcycleControllerSettings T_01 = new MotorcycleControllerSettings((byte) 1, (char) 1);

    static public final MotorcycleControllerSettings T_02 = new MotorcycleControllerSettings((byte) 1, (char) 1);

    static public final MotorcycleControllerSettings T_03 = new MotorcycleControllerSettings((byte) 1, (char) 1);

    public MotorcycleControllerSettings() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new MotorcycleControllerSettings();
*/
    private static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public MotorcycleControllerSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
delete nativeObject;
*/
    private static native void internal_native_deleteNative(long this_addr);

    public float get_mMaxLeanAngle() {
        return internal_native_get_mMaxLeanAngle((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
return nativeObject->mMaxLeanAngle;
*/
    private static native float internal_native_get_mMaxLeanAngle(long this_addr);

    public void set_mMaxLeanAngle(float mMaxLeanAngle) {
        internal_native_set_mMaxLeanAngle((long) getNativeData().getCPointer(), mMaxLeanAngle);
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
nativeObject->mMaxLeanAngle = mMaxLeanAngle;
*/
    private static native void internal_native_set_mMaxLeanAngle(long this_addr, float mMaxLeanAngle);

    public float get_mLeanSpringConstant() {
        return internal_native_get_mLeanSpringConstant((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
return nativeObject->mLeanSpringConstant;
*/
    private static native float internal_native_get_mLeanSpringConstant(long this_addr);

    public void set_mLeanSpringConstant(float mLeanSpringConstant) {
        internal_native_set_mLeanSpringConstant((long) getNativeData().getCPointer(), mLeanSpringConstant);
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
nativeObject->mLeanSpringConstant = mLeanSpringConstant;
*/
    private static native void internal_native_set_mLeanSpringConstant(long this_addr, float mLeanSpringConstant);

    public float get_mLeanSpringDamping() {
        return internal_native_get_mLeanSpringDamping((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
return nativeObject->mLeanSpringDamping;
*/
    private static native float internal_native_get_mLeanSpringDamping(long this_addr);

    public void set_mLeanSpringDamping(float mLeanSpringDamping) {
        internal_native_set_mLeanSpringDamping((long) getNativeData().getCPointer(), mLeanSpringDamping);
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
nativeObject->mLeanSpringDamping = mLeanSpringDamping;
*/
    private static native void internal_native_set_mLeanSpringDamping(long this_addr, float mLeanSpringDamping);

    public float get_mLeanSpringIntegrationCoefficient() {
        return internal_native_get_mLeanSpringIntegrationCoefficient((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
return nativeObject->mLeanSpringIntegrationCoefficient;
*/
    private static native float internal_native_get_mLeanSpringIntegrationCoefficient(long this_addr);

    public void set_mLeanSpringIntegrationCoefficient(float mLeanSpringIntegrationCoefficient) {
        internal_native_set_mLeanSpringIntegrationCoefficient((long) getNativeData().getCPointer(), mLeanSpringIntegrationCoefficient);
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
nativeObject->mLeanSpringIntegrationCoefficient = mLeanSpringIntegrationCoefficient;
*/
    private static native void internal_native_set_mLeanSpringIntegrationCoefficient(long this_addr, float mLeanSpringIntegrationCoefficient);

    public float get_mLeanSpringIntegrationCoefficientDecay() {
        return internal_native_get_mLeanSpringIntegrationCoefficientDecay((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
return nativeObject->mLeanSpringIntegrationCoefficientDecay;
*/
    private static native float internal_native_get_mLeanSpringIntegrationCoefficientDecay(long this_addr);

    public void set_mLeanSpringIntegrationCoefficientDecay(float mLeanSpringIntegrationCoefficientDecay) {
        internal_native_set_mLeanSpringIntegrationCoefficientDecay((long) getNativeData().getCPointer(), mLeanSpringIntegrationCoefficientDecay);
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
nativeObject->mLeanSpringIntegrationCoefficientDecay = mLeanSpringIntegrationCoefficientDecay;
*/
    private static native void internal_native_set_mLeanSpringIntegrationCoefficientDecay(long this_addr, float mLeanSpringIntegrationCoefficientDecay);

    public float get_mLeanSmoothingFactor() {
        return internal_native_get_mLeanSmoothingFactor((long) getNativeData().getCPointer());
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
return nativeObject->mLeanSmoothingFactor;
*/
    private static native float internal_native_get_mLeanSmoothingFactor(long this_addr);

    public void set_mLeanSmoothingFactor(float mLeanSmoothingFactor) {
        internal_native_set_mLeanSmoothingFactor((long) getNativeData().getCPointer(), mLeanSmoothingFactor);
    }

    /*[-JNI;-NATIVE]
MotorcycleControllerSettings* nativeObject = (MotorcycleControllerSettings*)this_addr;
nativeObject->mLeanSmoothingFactor = mLeanSmoothingFactor;
*/
    private static native void internal_native_set_mLeanSmoothingFactor(long this_addr, float mLeanSmoothingFactor);

    public static long native_create() {
        return internal_native_create();
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative(this_addr);
    }

    public static float native_get_mMaxLeanAngle(long this_addr) {
        return internal_native_get_mMaxLeanAngle(this_addr);
    }

    public static void native_set_mMaxLeanAngle(long this_addr, float mMaxLeanAngle) {
        internal_native_set_mMaxLeanAngle(this_addr, mMaxLeanAngle);
    }

    public static float native_get_mLeanSpringConstant(long this_addr) {
        return internal_native_get_mLeanSpringConstant(this_addr);
    }

    public static void native_set_mLeanSpringConstant(long this_addr, float mLeanSpringConstant) {
        internal_native_set_mLeanSpringConstant(this_addr, mLeanSpringConstant);
    }

    public static float native_get_mLeanSpringDamping(long this_addr) {
        return internal_native_get_mLeanSpringDamping(this_addr);
    }

    public static void native_set_mLeanSpringDamping(long this_addr, float mLeanSpringDamping) {
        internal_native_set_mLeanSpringDamping(this_addr, mLeanSpringDamping);
    }

    public static float native_get_mLeanSpringIntegrationCoefficient(long this_addr) {
        return internal_native_get_mLeanSpringIntegrationCoefficient(this_addr);
    }

    public static void native_set_mLeanSpringIntegrationCoefficient(long this_addr, float mLeanSpringIntegrationCoefficient) {
        internal_native_set_mLeanSpringIntegrationCoefficient(this_addr, mLeanSpringIntegrationCoefficient);
    }

    public static float native_get_mLeanSpringIntegrationCoefficientDecay(long this_addr) {
        return internal_native_get_mLeanSpringIntegrationCoefficientDecay(this_addr);
    }

    public static void native_set_mLeanSpringIntegrationCoefficientDecay(long this_addr, float mLeanSpringIntegrationCoefficientDecay) {
        internal_native_set_mLeanSpringIntegrationCoefficientDecay(this_addr, mLeanSpringIntegrationCoefficientDecay);
    }

    public static float native_get_mLeanSmoothingFactor(long this_addr) {
        return internal_native_get_mLeanSmoothingFactor(this_addr);
    }

    public static void native_set_mLeanSmoothingFactor(long this_addr, float mLeanSmoothingFactor) {
        internal_native_set_mLeanSmoothingFactor(this_addr, mLeanSmoothingFactor);
    }
}
