/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.core;

import gen.jolt.idl.IDLBase;

public class LinearCurve extends IDLBase {

    static public final LinearCurve T_01 = new LinearCurve((byte) 1, (char) 1);

    static public final LinearCurve T_02 = new LinearCurve((byte) 1, (char) 1);

    static public final LinearCurve T_03 = new LinearCurve((byte) 1, (char) 1);

    public LinearCurve() {
        int addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.LinearCurve();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.LinearCurve();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public LinearCurve(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void Clear() {
        internal_native_Clear((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);
jsObj.Clear();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);jsObj.Clear();")
    public static native void internal_native_Clear(int this_addr);

    public void Reserve(int inSize) {
        internal_native_Reserve((int) (long) getNativeData().getCPointer(), inSize);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);
jsObj.Reserve(inSize);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSize"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);jsObj.Reserve(inSize);")
    public static native void internal_native_Reserve(int this_addr, int inSize);

    public void AddPoint(float inX, float inY) {
        internal_native_AddPoint((int) (long) getNativeData().getCPointer(), inX, inY);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);
jsObj.AddPoint(inX, inY);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inX", "inY"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);jsObj.AddPoint(inX, inY);")
    public static native void internal_native_AddPoint(int this_addr, float inX, float inY);

    public void Sort() {
        internal_native_Sort((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);
jsObj.Sort();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);jsObj.Sort();")
    public static native void internal_native_Sort(int this_addr);

    public float GetMinX() {
        return internal_native_GetMinX((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);
var returnedJSObj = jsObj.GetMinX();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);var returnedJSObj = jsObj.GetMinX();return returnedJSObj;")
    public static native float internal_native_GetMinX(int this_addr);

    public float GetMaxX() {
        return internal_native_GetMaxX((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);
var returnedJSObj = jsObj.GetMaxX();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);var returnedJSObj = jsObj.GetMaxX();return returnedJSObj;")
    public static native float internal_native_GetMaxX(int this_addr);

    public float GetValue(float inX) {
        return internal_native_GetValue((int) (long) getNativeData().getCPointer(), inX);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);
var returnedJSObj = jsObj.GetValue(inX);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inX"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.LinearCurve);var returnedJSObj = jsObj.GetValue(inX);return returnedJSObj;")
    public static native float internal_native_GetValue(int this_addr, float inX);
}
