/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.core;

import gen.jolt.idl.IDLBase;

public class Factory extends IDLBase {

    static private Factory Factory_TEMP_STATIC_GEN_0;

    static public final Factory NULL = Factory.createInstance();

    static public final Factory T_01 = Factory.createInstance();

    static public final Factory T_02 = Factory.createInstance();

    static public final Factory T_03 = Factory.createInstance();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected Factory(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static Factory createInstance() {
        return new Factory((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Factory);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Factory);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public static Factory get_sInstance() {
        int pointer = internal_native_get_sInstance();
        if (pointer == 0)
            return null;
        if (Factory_TEMP_STATIC_GEN_0 == null)
            Factory_TEMP_STATIC_GEN_0 = Factory.createInstance();
        Factory_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return Factory_TEMP_STATIC_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jolt.Factory.prototype.get_sInstance();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jolt.Factory.prototype.get_sInstance();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_sInstance();

    public static void set_sInstance(Factory sInstance) {
        internal_native_set_sInstance(sInstance.native_address);
    }

    /*[-TEAVM;-NATIVE]
jolt.Factory.prototype.set_sInstance(sInstance_addr);

*/
    @org.teavm.jso.JSBody(params = {"sInstance_addr"}, script = "jolt.Factory.prototype.set_sInstance(sInstance_addr);")
    public static native void internal_native_set_sInstance(int sInstance_addr);
}
