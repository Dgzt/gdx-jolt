/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package gen.jolt.idl.helper;

import gen.jolt.idl.IDLBase;

public class IDLDoubleArray extends IDLBase {

    public IDLDoubleArray(int size) {
        int addr = internal_native_create_int(size);
        getNativeData().reset(addr, true);
    }

    public void copy(double[] array) {
        int length = array.length;
        resize(length);
        for (int i = 0; i < length; i++) {
            double value = array[i];
            setValue(i, value);
        }
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = new jolt.IDLDoubleArray(size);
      return jolt.getPointer(jsObj);
    */
    @org.teavm.jso.JSBody(params = {"size"}, script = "var jsObj = new jolt.IDLDoubleArray(size);return jolt.getPointer(jsObj);")
    private static native int internal_native_create_int(int size);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public IDLDoubleArray(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);
      jolt.destroy(jsObj);
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public void resize(int size) {
        internal_native_resize((int) (long) getNativeData().getCPointer(), size);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);
      jsObj.resize(size);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "size"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);jsObj.resize(size);")
    private static native void internal_native_resize(int this_addr, int size);

    public void clear() {
        internal_native_clear((int) (long) getNativeData().getCPointer());
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);
      jsObj.clear();
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);jsObj.clear();")
    private static native void internal_native_clear(int this_addr);

    public double getValue(int index) {
        return internal_native_getValue((int) (long) getNativeData().getCPointer(), index);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);
      var returnedJSObj = jsObj.getValue(index);
      return returnedJSObj;
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "index"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);var returnedJSObj = jsObj.getValue(index);return returnedJSObj;")
    private static native double internal_native_getValue(int this_addr, int index);

    public void setValue(int index, double value) {
        internal_native_setValue((int) (long) getNativeData().getCPointer(), index, value);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);
      jsObj.setValue(index, value);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "index", "value"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);jsObj.setValue(index, value);")
    private static native void internal_native_setValue(int this_addr, int index, double value);

    public int getSize() {
        return internal_native_getSize((int) (long) getNativeData().getCPointer());
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);
      var returnedJSObj = jsObj.getSize();
      return returnedJSObj;
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);var returnedJSObj = jsObj.getSize();return returnedJSObj;")
    private static native int internal_native_getSize(int this_addr);

    public long getPointer() {
        return internal_native_getPointer((int) (long) getNativeData().getCPointer());
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);
      var returnedJSObj = jsObj.getPointer();
      return returnedJSObj;
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);var returnedJSObj = jsObj.getPointer();return returnedJSObj;")
    private static native int internal_native_getPointer(int this_addr);

    public void copy(IDLDoubleArray src, int srcOffset, int destOffset, int length) {
        internal_native_copy((int) (long) getNativeData().getCPointer(), (int) (long) (src != null ? src.getNativeData().getCPointer() : 0), srcOffset, destOffset, length);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);
      jsObj.copy(src_addr, srcOffset, destOffset, length);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "src_addr", "srcOffset", "destOffset", "length"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.IDLDoubleArray);jsObj.copy(src_addr, srcOffset, destOffset, length);")
    private static native void internal_native_copy(int this_addr, int src_addr, int srcOffset, int destOffset, int length);

    public static long native_create_int(int size) {
        return internal_native_create_int(size);
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static void native_resize(long this_addr, int size) {
        internal_native_resize((int) this_addr, size);
    }

    public static void native_clear(long this_addr) {
        internal_native_clear((int) this_addr);
    }

    public static double native_getValue(long this_addr, int index) {
        return internal_native_getValue((int) this_addr, index);
    }

    public static void native_setValue(long this_addr, int index, double value) {
        internal_native_setValue((int) this_addr, index, value);
    }

    public static int native_getSize(long this_addr) {
        return internal_native_getSize((int) this_addr);
    }

    public static long native_getPointer(long this_addr) {
        return internal_native_getPointer((int) this_addr);
    }

    public static void native_copy(long this_addr, long src_addr, int srcOffset, int destOffset, int length) {
        internal_native_copy((int) this_addr, (int) src_addr, srcOffset, destOffset, length);
    }
}
