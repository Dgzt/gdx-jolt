/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.collision;

import gen.jolt.idl.IDLBase;
import gen.jolt.enums.EBackFaceMode;

public class RayCastSettings extends IDLBase {

    static public final RayCastSettings T_01 = new RayCastSettings((byte) 1, (char) 1);

    static public final RayCastSettings T_02 = new RayCastSettings((byte) 1, (char) 1);

    static public final RayCastSettings T_03 = new RayCastSettings((byte) 1, (char) 1);

    public RayCastSettings() {
        int addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.RayCastSettings();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.RayCastSettings();return jolt.getPointer(jsObj);")
    private static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public RayCastSettings(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public EBackFaceMode get_mBackFaceModeTriangles() {
        int value = internal_native_get_mBackFaceModeTriangles((int) (long) getNativeData().getCPointer());
        return EBackFaceMode.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);
return jsObj.get_mBackFaceModeTriangles();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);return jsObj.get_mBackFaceModeTriangles();")
    private static native int internal_native_get_mBackFaceModeTriangles(int this_addr);

    public void set_mBackFaceModeTriangles(EBackFaceMode mBackFaceModeTriangles) {
        internal_native_set_mBackFaceModeTriangles((int) (long) getNativeData().getCPointer(), (int) (long) (mBackFaceModeTriangles != null ? mBackFaceModeTriangles.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);
jsObj.set_mBackFaceModeTriangles(mBackFaceModeTriangles);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mBackFaceModeTriangles"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);jsObj.set_mBackFaceModeTriangles(mBackFaceModeTriangles);")
    private static native void internal_native_set_mBackFaceModeTriangles(int this_addr, int mBackFaceModeTriangles);

    public EBackFaceMode get_mBackFaceModeConvex() {
        int value = internal_native_get_mBackFaceModeConvex((int) (long) getNativeData().getCPointer());
        return EBackFaceMode.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);
return jsObj.get_mBackFaceModeConvex();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);return jsObj.get_mBackFaceModeConvex();")
    private static native int internal_native_get_mBackFaceModeConvex(int this_addr);

    public void set_mBackFaceModeConvex(EBackFaceMode mBackFaceModeConvex) {
        internal_native_set_mBackFaceModeConvex((int) (long) getNativeData().getCPointer(), (int) (long) (mBackFaceModeConvex != null ? mBackFaceModeConvex.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);
jsObj.set_mBackFaceModeConvex(mBackFaceModeConvex);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mBackFaceModeConvex"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);jsObj.set_mBackFaceModeConvex(mBackFaceModeConvex);")
    private static native void internal_native_set_mBackFaceModeConvex(int this_addr, int mBackFaceModeConvex);

    public boolean get_mTreatConvexAsSolid() {
        return internal_native_get_mTreatConvexAsSolid((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);
return jsObj.get_mTreatConvexAsSolid();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);return jsObj.get_mTreatConvexAsSolid();")
    private static native boolean internal_native_get_mTreatConvexAsSolid(int this_addr);

    public void set_mTreatConvexAsSolid(boolean mTreatConvexAsSolid) {
        internal_native_set_mTreatConvexAsSolid((int) (long) getNativeData().getCPointer(), mTreatConvexAsSolid);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);
jsObj.set_mTreatConvexAsSolid(mTreatConvexAsSolid);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mTreatConvexAsSolid"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.RayCastSettings);jsObj.set_mTreatConvexAsSolid(mTreatConvexAsSolid);")
    private static native void internal_native_set_mTreatConvexAsSolid(int this_addr, boolean mTreatConvexAsSolid);

    public static long native_create() {
        return internal_native_create();
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static long native_get_mBackFaceModeTriangles(long this_addr) {
        return internal_native_get_mBackFaceModeTriangles((int) this_addr);
    }

    public static void native_set_mBackFaceModeTriangles(long this_addr, long mBackFaceModeTriangles) {
        internal_native_set_mBackFaceModeTriangles((int) this_addr, (int) mBackFaceModeTriangles);
    }

    public static long native_get_mBackFaceModeConvex(long this_addr) {
        return internal_native_get_mBackFaceModeConvex((int) this_addr);
    }

    public static void native_set_mBackFaceModeConvex(long this_addr, long mBackFaceModeConvex) {
        internal_native_set_mBackFaceModeConvex((int) this_addr, (int) mBackFaceModeConvex);
    }

    public static boolean native_get_mTreatConvexAsSolid(long this_addr) {
        return internal_native_get_mTreatConvexAsSolid((int) this_addr);
    }

    public static void native_set_mTreatConvexAsSolid(long this_addr, boolean mTreatConvexAsSolid) {
        internal_native_set_mTreatConvexAsSolid((int) this_addr, mTreatConvexAsSolid);
    }
}
