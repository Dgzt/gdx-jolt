/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.collision;

import gen.jolt.idl.IDLBase;
import gen.jolt.physics.collision.shape.Shape;
import gen.jolt.math.Vec3;
import gen.jolt.math.Mat44;

public class ShapeCast extends IDLBase {

    private Vec3 Vec3_TEMP_GEN_0;

    private Shape Shape_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private Mat44 Mat44_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_2;

    static public final ShapeCast T_01 = new ShapeCast((byte) 1, (char) 1);

    static public final ShapeCast T_02 = new ShapeCast((byte) 1, (char) 1);

    static public final ShapeCast T_03 = new ShapeCast((byte) 1, (char) 1);

    public ShapeCast(Shape inShape, Vec3 inScale, Mat44 inCenterOfMassStart, Vec3 inDirection) {
        int addr = internal_native_create_Shape_Vec3_Mat44_Vec3((int) (long) (inShape != null ? inShape.getNativeData().getCPointer() : 0), (int) (long) (inScale != null ? inScale.getNativeData().getCPointer() : 0), (int) (long) (inCenterOfMassStart != null ? inCenterOfMassStart.getNativeData().getCPointer() : 0), (int) (long) (inDirection != null ? inDirection.getNativeData().getCPointer() : 0));
        getNativeData().reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.ShapeCast(inShape_addr, inScale_addr, inCenterOfMassStart_addr, inDirection_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inShape_addr", "inScale_addr", "inCenterOfMassStart_addr", "inDirection_addr"}, script = "var jsObj = new jolt.ShapeCast(inShape_addr, inScale_addr, inCenterOfMassStart_addr, inDirection_addr);return jolt.getPointer(jsObj);")
    private static native int internal_native_create_Shape_Vec3_Mat44_Vec3(int inShape_addr, int inScale_addr, int inCenterOfMassStart_addr, int inDirection_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public ShapeCast(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ShapeCast);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ShapeCast);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public Vec3 GetPointOnRay(float inFraction) {
        int pointer = internal_native_GetPointOnRay((int) (long) getNativeData().getCPointer(), inFraction);
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ShapeCast);
var returnedJSObj = jsObj.GetPointOnRay(inFraction);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inFraction"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ShapeCast);var returnedJSObj = jsObj.GetPointOnRay(inFraction);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_GetPointOnRay(int this_addr, float inFraction);

    public Shape get_mShape() {
        int pointer = internal_native_get_mShape((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (Shape_TEMP_GEN_0 == null)
            Shape_TEMP_GEN_0 = new Shape((byte) 1, (char) 1);
        Shape_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return Shape_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ShapeCast);
var returnedJSObj = jsObj.get_mShape();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ShapeCast);var returnedJSObj = jsObj.get_mShape();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mShape(int this_addr);

    public Vec3 get_mScale() {
        int pointer = internal_native_get_mScale((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_1.getNativeData().reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ShapeCast);
var returnedJSObj = jsObj.get_mScale();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ShapeCast);var returnedJSObj = jsObj.get_mScale();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mScale(int this_addr);

    public Mat44 get_mCenterOfMassStart() {
        int pointer = internal_native_get_mCenterOfMassStart((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (Mat44_TEMP_GEN_0 == null)
            Mat44_TEMP_GEN_0 = new Mat44((byte) 1, (char) 1);
        Mat44_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return Mat44_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ShapeCast);
var returnedJSObj = jsObj.get_mCenterOfMassStart();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ShapeCast);var returnedJSObj = jsObj.get_mCenterOfMassStart();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mCenterOfMassStart(int this_addr);

    public Vec3 get_mDirection() {
        int pointer = internal_native_get_mDirection((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_2.getNativeData().reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ShapeCast);
var returnedJSObj = jsObj.get_mDirection();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ShapeCast);var returnedJSObj = jsObj.get_mDirection();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mDirection(int this_addr);

    public static long native_create_Shape_Vec3_Mat44_Vec3(long inShape_addr, long inScale_addr, long inCenterOfMassStart_addr, long inDirection_addr) {
        return internal_native_create_Shape_Vec3_Mat44_Vec3((int) inShape_addr, (int) inScale_addr, (int) inCenterOfMassStart_addr, (int) inDirection_addr);
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static long native_GetPointOnRay(long this_addr, float inFraction) {
        return internal_native_GetPointOnRay((int) this_addr, inFraction);
    }

    public static long native_get_mShape(long this_addr) {
        return internal_native_get_mShape((int) this_addr);
    }

    public static long native_get_mScale(long this_addr) {
        return internal_native_get_mScale((int) this_addr);
    }

    public static long native_get_mCenterOfMassStart(long this_addr) {
        return internal_native_get_mCenterOfMassStart((int) this_addr);
    }

    public static long native_get_mDirection(long this_addr) {
        return internal_native_get_mDirection((int) this_addr);
    }
}
