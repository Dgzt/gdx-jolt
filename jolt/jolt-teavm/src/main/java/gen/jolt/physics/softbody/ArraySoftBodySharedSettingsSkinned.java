/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.softbody;

import gen.jolt.idl.IDLBase;

public class ArraySoftBodySharedSettingsSkinned extends IDLBase {

    private SoftBodySharedSettingsSkinned SoftBodySharedSettingsSkinned_TEMP_GEN_0;

    static public final ArraySoftBodySharedSettingsSkinned T_01 = new ArraySoftBodySharedSettingsSkinned((byte) 1, (char) 1);

    static public final ArraySoftBodySharedSettingsSkinned T_02 = new ArraySoftBodySharedSettingsSkinned((byte) 1, (char) 1);

    static public final ArraySoftBodySharedSettingsSkinned T_03 = new ArraySoftBodySharedSettingsSkinned((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public ArraySoftBodySharedSettingsSkinned(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public boolean empty() {
        return internal_native_empty((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);
var returnedJSObj = jsObj.empty();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);var returnedJSObj = jsObj.empty();return returnedJSObj;")
    private static native boolean internal_native_empty(int this_addr);

    public int size() {
        return internal_native_size((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);
var returnedJSObj = jsObj.size();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);var returnedJSObj = jsObj.size();return returnedJSObj;")
    private static native int internal_native_size(int this_addr);

    public SoftBodySharedSettingsSkinned at(int inIndex) {
        int pointer = internal_native_at((int) (long) getNativeData().getCPointer(), inIndex);
        if (pointer == 0)
            return null;
        if (SoftBodySharedSettingsSkinned_TEMP_GEN_0 == null)
            SoftBodySharedSettingsSkinned_TEMP_GEN_0 = new SoftBodySharedSettingsSkinned((byte) 1, (char) 1);
        SoftBodySharedSettingsSkinned_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return SoftBodySharedSettingsSkinned_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);
var returnedJSObj = jsObj.at(inIndex);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inIndex"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);var returnedJSObj = jsObj.at(inIndex);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_at(int this_addr, int inIndex);

    public void push_back(SoftBodySharedSettingsSkinned inValue) {
        internal_native_push_back((int) (long) getNativeData().getCPointer(), (int) (long) (inValue != null ? inValue.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);
jsObj.push_back(inValue_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inValue_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);jsObj.push_back(inValue_addr);")
    private static native void internal_native_push_back(int this_addr, int inValue_addr);

    public void reserve(int inSize) {
        internal_native_reserve((int) (long) getNativeData().getCPointer(), inSize);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);
jsObj.reserve(inSize);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSize"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);jsObj.reserve(inSize);")
    private static native void internal_native_reserve(int this_addr, int inSize);

    public void resize(int inSize) {
        internal_native_resize((int) (long) getNativeData().getCPointer(), inSize);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);
jsObj.resize(inSize);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSize"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);jsObj.resize(inSize);")
    private static native void internal_native_resize(int this_addr, int inSize);

    public void clear() {
        internal_native_clear((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);
jsObj.clear();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArraySoftBodySharedSettingsSkinned);jsObj.clear();")
    private static native void internal_native_clear(int this_addr);

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static boolean native_empty(long this_addr) {
        return internal_native_empty((int) this_addr);
    }

    public static int native_size(long this_addr) {
        return internal_native_size((int) this_addr);
    }

    public static long native_at(long this_addr, int inIndex) {
        return internal_native_at((int) this_addr, inIndex);
    }

    public static void native_push_back(long this_addr, long inValue_addr) {
        internal_native_push_back((int) this_addr, (int) inValue_addr);
    }

    public static void native_reserve(long this_addr, int inSize) {
        internal_native_reserve((int) this_addr, inSize);
    }

    public static void native_resize(long this_addr, int inSize) {
        internal_native_resize((int) this_addr, inSize);
    }

    public static void native_clear(long this_addr) {
        internal_native_clear((int) this_addr);
    }
}
