/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.vehicle;

import gen.jolt.idl.IDLBase;
import gen.jolt.VehicleConstraint;
import gen.jolt.Body;
import gen.jolt.SubShapeID;
import gen.jolt.physics.PhysicsStepListenerContext;

public class VehicleConstraintCallbacksEm extends IDLBase {

    static private Body Body_TEMP_STATIC_GEN_0;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_0;

    static private VehicleConstraint VehicleConstraint_TEMP_STATIC_GEN_0;

    static private PhysicsStepListenerContext PhysicsStepListenerContext_TEMP_STATIC_GEN_0;

    static private VehicleConstraint VehicleConstraint_TEMP_STATIC_GEN_1;

    static private PhysicsStepListenerContext PhysicsStepListenerContext_TEMP_STATIC_GEN_1;

    static private VehicleConstraint VehicleConstraint_TEMP_STATIC_GEN_2;

    static private PhysicsStepListenerContext PhysicsStepListenerContext_TEMP_STATIC_GEN_2;

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public VehicleConstraintCallbacksEm(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraintCallbacksJS);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraintCallbacksJS);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public void SetVehicleConstraint(VehicleConstraint inConstraint) {
        internal_native_SetVehicleConstraint((int) (long) getNativeData().getCPointer(), (int) (long) (inConstraint != null ? inConstraint.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraintCallbacksEm);
jsObj.SetVehicleConstraint(inConstraint_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inConstraint_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraintCallbacksEm);jsObj.SetVehicleConstraint(inConstraint_addr);")
    private static native void internal_native_SetVehicleConstraint(int this_addr, int inConstraint_addr);

    public VehicleConstraintCallbacksEm() {
        int addr = internal_native_create();
        getNativeData().reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        GetCombinedFriction GetCombinedFriction = new GetCombinedFriction() {

            public float GetCombinedFriction(int inWheelIndex, int inTireFrictionDirection, float inTireFriction, int inBody2, int inSubShapeID2) {
                return internal_GetCombinedFriction(inWheelIndex, inTireFrictionDirection, inTireFriction, inBody2, inSubShapeID2);
            }
        };
        OnPreStepCallback OnPreStepCallback = new OnPreStepCallback() {

            public void OnPreStepCallback(int inVehicle, int inContext) {
                internal_OnPreStepCallback(inVehicle, inContext);
            }
        };
        OnPostCollideCallback OnPostCollideCallback = new OnPostCollideCallback() {

            public void OnPostCollideCallback(int inVehicle, int inContext) {
                internal_OnPostCollideCallback(inVehicle, inContext);
            }
        };
        OnPostStepCallback OnPostStepCallback = new OnPostStepCallback() {

            public void OnPostStepCallback(int inVehicle, int inContext) {
                internal_OnPostStepCallback(inVehicle, inContext);
            }
        };
        internal_native_setupCallback((int) getNativeData().getCPointer(), GetCombinedFriction, OnPreStepCallback, OnPostCollideCallback, OnPostStepCallback);
    }

    protected float GetCombinedFriction(int inWheelIndex, int inTireFrictionDirection, float inTireFriction, Body inBody2, SubShapeID inSubShapeID2) {
        return 0;
    }

    private float internal_GetCombinedFriction(int inWheelIndex, int inTireFrictionDirection, float inTireFriction, long inBody2, long inSubShapeID2) {
        if (Body_TEMP_STATIC_GEN_0 == null)
            Body_TEMP_STATIC_GEN_0 = new Body((byte) 1, (char) 1);
        Body_TEMP_STATIC_GEN_0.getNativeData().reset(inBody2, false);
        if (SubShapeID_TEMP_STATIC_GEN_0 == null)
            SubShapeID_TEMP_STATIC_GEN_0 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_STATIC_GEN_0.getNativeData().reset(inSubShapeID2, false);
        return GetCombinedFriction(inWheelIndex, inTireFrictionDirection, inTireFriction, Body_TEMP_STATIC_GEN_0, SubShapeID_TEMP_STATIC_GEN_0);
    }

    protected void OnPreStepCallback(VehicleConstraint inVehicle, PhysicsStepListenerContext inContext) {
    }

    private void internal_OnPreStepCallback(long inVehicle, long inContext) {
        if (VehicleConstraint_TEMP_STATIC_GEN_0 == null)
            VehicleConstraint_TEMP_STATIC_GEN_0 = new VehicleConstraint((byte) 1, (char) 1);
        VehicleConstraint_TEMP_STATIC_GEN_0.getNativeData().reset(inVehicle, false);
        if (PhysicsStepListenerContext_TEMP_STATIC_GEN_0 == null)
            PhysicsStepListenerContext_TEMP_STATIC_GEN_0 = new PhysicsStepListenerContext((byte) 1, (char) 1);
        PhysicsStepListenerContext_TEMP_STATIC_GEN_0.getNativeData().reset(inContext, false);
        OnPreStepCallback(VehicleConstraint_TEMP_STATIC_GEN_0, PhysicsStepListenerContext_TEMP_STATIC_GEN_0);
    }

    protected void OnPostCollideCallback(VehicleConstraint inVehicle, PhysicsStepListenerContext inContext) {
    }

    private void internal_OnPostCollideCallback(long inVehicle, long inContext) {
        if (VehicleConstraint_TEMP_STATIC_GEN_1 == null)
            VehicleConstraint_TEMP_STATIC_GEN_1 = new VehicleConstraint((byte) 1, (char) 1);
        VehicleConstraint_TEMP_STATIC_GEN_1.getNativeData().reset(inVehicle, false);
        if (PhysicsStepListenerContext_TEMP_STATIC_GEN_1 == null)
            PhysicsStepListenerContext_TEMP_STATIC_GEN_1 = new PhysicsStepListenerContext((byte) 1, (char) 1);
        PhysicsStepListenerContext_TEMP_STATIC_GEN_1.getNativeData().reset(inContext, false);
        OnPostCollideCallback(VehicleConstraint_TEMP_STATIC_GEN_1, PhysicsStepListenerContext_TEMP_STATIC_GEN_1);
    }

    protected void OnPostStepCallback(VehicleConstraint inVehicle, PhysicsStepListenerContext inContext) {
    }

    private void internal_OnPostStepCallback(long inVehicle, long inContext) {
        if (VehicleConstraint_TEMP_STATIC_GEN_2 == null)
            VehicleConstraint_TEMP_STATIC_GEN_2 = new VehicleConstraint((byte) 1, (char) 1);
        VehicleConstraint_TEMP_STATIC_GEN_2.getNativeData().reset(inVehicle, false);
        if (PhysicsStepListenerContext_TEMP_STATIC_GEN_2 == null)
            PhysicsStepListenerContext_TEMP_STATIC_GEN_2 = new PhysicsStepListenerContext((byte) 1, (char) 1);
        PhysicsStepListenerContext_TEMP_STATIC_GEN_2.getNativeData().reset(inContext, false);
        OnPostStepCallback(VehicleConstraint_TEMP_STATIC_GEN_2, PhysicsStepListenerContext_TEMP_STATIC_GEN_2);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.VehicleConstraintCallbacksJS();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.VehicleConstraintCallbacksJS();return jolt.getPointer(jsObj);")
    private static native int internal_native_create();

    @org.teavm.jso.JSBody(params = { "this_addr", "GetCombinedFriction", "OnPreStepCallback", "OnPostCollideCallback", "OnPostStepCallback" }, script = "var VehicleConstraintCallbacksJS = jolt.wrapPointer(this_addr, jolt.VehicleConstraintCallbacksJS); VehicleConstraintCallbacksJS.GetCombinedFriction = GetCombinedFriction; VehicleConstraintCallbacksJS.OnPreStepCallback = OnPreStepCallback; VehicleConstraintCallbacksJS.OnPostCollideCallback = OnPostCollideCallback; VehicleConstraintCallbacksJS.OnPostStepCallback = OnPostStepCallback;")
    private static native void internal_native_setupCallback(int this_addr, GetCombinedFriction GetCombinedFriction, OnPreStepCallback OnPreStepCallback, OnPostCollideCallback OnPostCollideCallback, OnPostStepCallback OnPostStepCallback);

    @org.teavm.jso.JSFunctor()
    public interface GetCombinedFriction extends org.teavm.jso.JSObject {

        float GetCombinedFriction(int inWheelIndex, int inTireFrictionDirection, float inTireFriction, int inBody2, int inSubShapeID2);
    }

    @org.teavm.jso.JSFunctor()
    public interface OnPreStepCallback extends org.teavm.jso.JSObject {

        void OnPreStepCallback(int inVehicle, int inContext);
    }

    @org.teavm.jso.JSFunctor()
    public interface OnPostCollideCallback extends org.teavm.jso.JSObject {

        void OnPostCollideCallback(int inVehicle, int inContext);
    }

    @org.teavm.jso.JSFunctor()
    public interface OnPostStepCallback extends org.teavm.jso.JSObject {

        void OnPostStepCallback(int inVehicle, int inContext);
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static void native_SetVehicleConstraint(long this_addr, long inConstraint_addr) {
        internal_native_SetVehicleConstraint((int) this_addr, (int) inConstraint_addr);
    }

    public static long native_create() {
        return internal_native_create();
    }
}
