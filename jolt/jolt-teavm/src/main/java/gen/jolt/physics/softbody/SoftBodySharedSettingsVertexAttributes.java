/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.softbody;

import gen.jolt.idl.IDLBase;
import gen.jolt.enums.SoftBodySharedSettings_ELRAType;

public class SoftBodySharedSettingsVertexAttributes extends IDLBase {

    static public final SoftBodySharedSettingsVertexAttributes T_01 = new SoftBodySharedSettingsVertexAttributes((byte) 1, (char) 1);

    static public final SoftBodySharedSettingsVertexAttributes T_02 = new SoftBodySharedSettingsVertexAttributes((byte) 1, (char) 1);

    static public final SoftBodySharedSettingsVertexAttributes T_03 = new SoftBodySharedSettingsVertexAttributes((byte) 1, (char) 1);

    public SoftBodySharedSettingsVertexAttributes() {
        int addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.SoftBodySharedSettingsVertexAttributes();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.SoftBodySharedSettingsVertexAttributes();return jolt.getPointer(jsObj);")
    private static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SoftBodySharedSettingsVertexAttributes(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public float get_mCompliance() {
        return internal_native_get_mCompliance((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);
return jsObj.get_mCompliance();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);return jsObj.get_mCompliance();")
    private static native float internal_native_get_mCompliance(int this_addr);

    public void set_mCompliance(float mCompliance) {
        internal_native_set_mCompliance((int) (long) getNativeData().getCPointer(), mCompliance);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);
jsObj.set_mCompliance(mCompliance);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mCompliance"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);jsObj.set_mCompliance(mCompliance);")
    private static native void internal_native_set_mCompliance(int this_addr, float mCompliance);

    public float get_mShearCompliance() {
        return internal_native_get_mShearCompliance((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);
return jsObj.get_mShearCompliance();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);return jsObj.get_mShearCompliance();")
    private static native float internal_native_get_mShearCompliance(int this_addr);

    public void set_mShearCompliance(float mShearCompliance) {
        internal_native_set_mShearCompliance((int) (long) getNativeData().getCPointer(), mShearCompliance);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);
jsObj.set_mShearCompliance(mShearCompliance);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mShearCompliance"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);jsObj.set_mShearCompliance(mShearCompliance);")
    private static native void internal_native_set_mShearCompliance(int this_addr, float mShearCompliance);

    public float get_mBendCompliance() {
        return internal_native_get_mBendCompliance((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);
return jsObj.get_mBendCompliance();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);return jsObj.get_mBendCompliance();")
    private static native float internal_native_get_mBendCompliance(int this_addr);

    public void set_mBendCompliance(float mBendCompliance) {
        internal_native_set_mBendCompliance((int) (long) getNativeData().getCPointer(), mBendCompliance);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);
jsObj.set_mBendCompliance(mBendCompliance);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mBendCompliance"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);jsObj.set_mBendCompliance(mBendCompliance);")
    private static native void internal_native_set_mBendCompliance(int this_addr, float mBendCompliance);

    public SoftBodySharedSettings_ELRAType get_mLRAType() {
        int value = internal_native_get_mLRAType((int) (long) getNativeData().getCPointer());
        return SoftBodySharedSettings_ELRAType.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);
return jsObj.get_mLRAType();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);return jsObj.get_mLRAType();")
    private static native int internal_native_get_mLRAType(int this_addr);

    public void set_mLRAType(SoftBodySharedSettings_ELRAType mLRAType) {
        internal_native_set_mLRAType((int) (long) getNativeData().getCPointer(), (int) (long) (mLRAType != null ? mLRAType.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);
jsObj.set_mLRAType(mLRAType);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mLRAType"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);jsObj.set_mLRAType(mLRAType);")
    private static native void internal_native_set_mLRAType(int this_addr, int mLRAType);

    public float get_mLRAMaxDistanceMultiplier() {
        return internal_native_get_mLRAMaxDistanceMultiplier((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);
return jsObj.get_mLRAMaxDistanceMultiplier();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);return jsObj.get_mLRAMaxDistanceMultiplier();")
    private static native float internal_native_get_mLRAMaxDistanceMultiplier(int this_addr);

    public void set_mLRAMaxDistanceMultiplier(float mLRAMaxDistanceMultiplier) {
        internal_native_set_mLRAMaxDistanceMultiplier((int) (long) getNativeData().getCPointer(), mLRAMaxDistanceMultiplier);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);
jsObj.set_mLRAMaxDistanceMultiplier(mLRAMaxDistanceMultiplier);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mLRAMaxDistanceMultiplier"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertexAttributes);jsObj.set_mLRAMaxDistanceMultiplier(mLRAMaxDistanceMultiplier);")
    private static native void internal_native_set_mLRAMaxDistanceMultiplier(int this_addr, float mLRAMaxDistanceMultiplier);

    public static long native_create() {
        return internal_native_create();
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static float native_get_mCompliance(long this_addr) {
        return internal_native_get_mCompliance((int) this_addr);
    }

    public static void native_set_mCompliance(long this_addr, float mCompliance) {
        internal_native_set_mCompliance((int) this_addr, mCompliance);
    }

    public static float native_get_mShearCompliance(long this_addr) {
        return internal_native_get_mShearCompliance((int) this_addr);
    }

    public static void native_set_mShearCompliance(long this_addr, float mShearCompliance) {
        internal_native_set_mShearCompliance((int) this_addr, mShearCompliance);
    }

    public static float native_get_mBendCompliance(long this_addr) {
        return internal_native_get_mBendCompliance((int) this_addr);
    }

    public static void native_set_mBendCompliance(long this_addr, float mBendCompliance) {
        internal_native_set_mBendCompliance((int) this_addr, mBendCompliance);
    }

    public static long native_get_mLRAType(long this_addr) {
        return internal_native_get_mLRAType((int) this_addr);
    }

    public static void native_set_mLRAType(long this_addr, long mLRAType) {
        internal_native_set_mLRAType((int) this_addr, (int) mLRAType);
    }

    public static float native_get_mLRAMaxDistanceMultiplier(long this_addr) {
        return internal_native_get_mLRAMaxDistanceMultiplier((int) this_addr);
    }

    public static void native_set_mLRAMaxDistanceMultiplier(long this_addr, float mLRAMaxDistanceMultiplier) {
        internal_native_set_mLRAMaxDistanceMultiplier((int) this_addr, mLRAMaxDistanceMultiplier);
    }
}
