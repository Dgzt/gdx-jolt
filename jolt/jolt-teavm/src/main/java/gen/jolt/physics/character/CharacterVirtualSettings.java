/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.character;

import gen.jolt.math.Vec3;
import gen.jolt.physics.collision.shape.Shape;
import gen.jolt.physics.body.BodyID;

public class CharacterVirtualSettings extends CharacterBaseSettings {

    private CharacterID CharacterID_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_0;

    private Shape Shape_TEMP_GEN_0;

    private BodyID BodyID_TEMP_GEN_0;

    static public final CharacterVirtualSettings T_01 = new CharacterVirtualSettings((byte) 1, (char) 1);

    static public final CharacterVirtualSettings T_02 = new CharacterVirtualSettings((byte) 1, (char) 1);

    static public final CharacterVirtualSettings T_03 = new CharacterVirtualSettings((byte) 1, (char) 1);

    public CharacterVirtualSettings() {
        super((byte) 1, (char) 1);
        int addr = internal_native_create();
        getNativeData().reset(addr, false);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.CharacterVirtualSettings();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.CharacterVirtualSettings();return jolt.getPointer(jsObj);")
    private static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public CharacterVirtualSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public CharacterID get_mID() {
        int pointer = internal_native_get_mID((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (CharacterID_TEMP_GEN_0 == null)
            CharacterID_TEMP_GEN_0 = new CharacterID((byte) 1, (char) 1);
        CharacterID_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return CharacterID_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
var returnedJSObj = jsObj.get_mID();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);var returnedJSObj = jsObj.get_mID();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mID(int this_addr);

    public void set_mID(CharacterID mID) {
        internal_native_set_mID((int) (long) getNativeData().getCPointer(), (int) (long) (mID != null ? mID.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mID(mID_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mID(mID_addr);")
    private static native void internal_native_set_mID(int this_addr, int mID_addr);

    public float get_mMass() {
        return internal_native_get_mMass((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mMass();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mMass();")
    private static native float internal_native_get_mMass(int this_addr);

    public void set_mMass(float mMass) {
        internal_native_set_mMass((int) (long) getNativeData().getCPointer(), mMass);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mMass(mMass);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMass"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mMass(mMass);")
    private static native void internal_native_set_mMass(int this_addr, float mMass);

    public float get_mMaxStrength() {
        return internal_native_get_mMaxStrength((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mMaxStrength();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mMaxStrength();")
    private static native float internal_native_get_mMaxStrength(int this_addr);

    public void set_mMaxStrength(float mMaxStrength) {
        internal_native_set_mMaxStrength((int) (long) getNativeData().getCPointer(), mMaxStrength);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mMaxStrength(mMaxStrength);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMaxStrength"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mMaxStrength(mMaxStrength);")
    private static native void internal_native_set_mMaxStrength(int this_addr, float mMaxStrength);

    public Vec3 get_mShapeOffset() {
        int pointer = internal_native_get_mShapeOffset((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
var returnedJSObj = jsObj.get_mShapeOffset();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);var returnedJSObj = jsObj.get_mShapeOffset();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mShapeOffset(int this_addr);

    public void set_mShapeOffset(Vec3 mShapeOffset) {
        internal_native_set_mShapeOffset((int) (long) getNativeData().getCPointer(), (int) (long) (mShapeOffset != null ? mShapeOffset.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mShapeOffset(mShapeOffset_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mShapeOffset_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mShapeOffset(mShapeOffset_addr);")
    private static native void internal_native_set_mShapeOffset(int this_addr, int mShapeOffset_addr);

    public EBackFaceMode get_mBackFaceMode() {
        int value = internal_native_get_mBackFaceMode((int) (long) getNativeData().getCPointer());
        return EBackFaceMode.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mBackFaceMode();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mBackFaceMode();")
    private static native int internal_native_get_mBackFaceMode(int this_addr);

    public void set_mBackFaceMode(EBackFaceMode mBackFaceMode) {
        internal_native_set_mBackFaceMode((int) (long) getNativeData().getCPointer(), (int) (long) (mBackFaceMode != null ? mBackFaceMode.getValue() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mBackFaceMode(mBackFaceMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mBackFaceMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mBackFaceMode(mBackFaceMode);")
    private static native void internal_native_set_mBackFaceMode(int this_addr, int mBackFaceMode);

    public float get_mPredictiveContactDistance() {
        return internal_native_get_mPredictiveContactDistance((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mPredictiveContactDistance();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mPredictiveContactDistance();")
    private static native float internal_native_get_mPredictiveContactDistance(int this_addr);

    public void set_mPredictiveContactDistance(float mPredictiveContactDistance) {
        internal_native_set_mPredictiveContactDistance((int) (long) getNativeData().getCPointer(), mPredictiveContactDistance);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mPredictiveContactDistance(mPredictiveContactDistance);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPredictiveContactDistance"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mPredictiveContactDistance(mPredictiveContactDistance);")
    private static native void internal_native_set_mPredictiveContactDistance(int this_addr, float mPredictiveContactDistance);

    public int get_mMaxCollisionIterations() {
        return internal_native_get_mMaxCollisionIterations((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mMaxCollisionIterations();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mMaxCollisionIterations();")
    private static native int internal_native_get_mMaxCollisionIterations(int this_addr);

    public void set_mMaxCollisionIterations(int mMaxCollisionIterations) {
        internal_native_set_mMaxCollisionIterations((int) (long) getNativeData().getCPointer(), mMaxCollisionIterations);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mMaxCollisionIterations(mMaxCollisionIterations);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMaxCollisionIterations"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mMaxCollisionIterations(mMaxCollisionIterations);")
    private static native void internal_native_set_mMaxCollisionIterations(int this_addr, int mMaxCollisionIterations);

    public int get_mMaxConstraintIterations() {
        return internal_native_get_mMaxConstraintIterations((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mMaxConstraintIterations();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mMaxConstraintIterations();")
    private static native int internal_native_get_mMaxConstraintIterations(int this_addr);

    public void set_mMaxConstraintIterations(int mMaxConstraintIterations) {
        internal_native_set_mMaxConstraintIterations((int) (long) getNativeData().getCPointer(), mMaxConstraintIterations);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mMaxConstraintIterations(mMaxConstraintIterations);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMaxConstraintIterations"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mMaxConstraintIterations(mMaxConstraintIterations);")
    private static native void internal_native_set_mMaxConstraintIterations(int this_addr, int mMaxConstraintIterations);

    public float get_mMinTimeRemaining() {
        return internal_native_get_mMinTimeRemaining((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mMinTimeRemaining();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mMinTimeRemaining();")
    private static native float internal_native_get_mMinTimeRemaining(int this_addr);

    public void set_mMinTimeRemaining(float mMinTimeRemaining) {
        internal_native_set_mMinTimeRemaining((int) (long) getNativeData().getCPointer(), mMinTimeRemaining);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mMinTimeRemaining(mMinTimeRemaining);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMinTimeRemaining"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mMinTimeRemaining(mMinTimeRemaining);")
    private static native void internal_native_set_mMinTimeRemaining(int this_addr, float mMinTimeRemaining);

    public float get_mCollisionTolerance() {
        return internal_native_get_mCollisionTolerance((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mCollisionTolerance();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mCollisionTolerance();")
    private static native float internal_native_get_mCollisionTolerance(int this_addr);

    public void set_mCollisionTolerance(float mCollisionTolerance) {
        internal_native_set_mCollisionTolerance((int) (long) getNativeData().getCPointer(), mCollisionTolerance);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mCollisionTolerance(mCollisionTolerance);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mCollisionTolerance"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mCollisionTolerance(mCollisionTolerance);")
    private static native void internal_native_set_mCollisionTolerance(int this_addr, float mCollisionTolerance);

    public float get_mCharacterPadding() {
        return internal_native_get_mCharacterPadding((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mCharacterPadding();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mCharacterPadding();")
    private static native float internal_native_get_mCharacterPadding(int this_addr);

    public void set_mCharacterPadding(float mCharacterPadding) {
        internal_native_set_mCharacterPadding((int) (long) getNativeData().getCPointer(), mCharacterPadding);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mCharacterPadding(mCharacterPadding);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mCharacterPadding"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mCharacterPadding(mCharacterPadding);")
    private static native void internal_native_set_mCharacterPadding(int this_addr, float mCharacterPadding);

    public int get_mMaxNumHits() {
        return internal_native_get_mMaxNumHits((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mMaxNumHits();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mMaxNumHits();")
    private static native int internal_native_get_mMaxNumHits(int this_addr);

    public void set_mMaxNumHits(int mMaxNumHits) {
        internal_native_set_mMaxNumHits((int) (long) getNativeData().getCPointer(), mMaxNumHits);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mMaxNumHits(mMaxNumHits);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mMaxNumHits"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mMaxNumHits(mMaxNumHits);")
    private static native void internal_native_set_mMaxNumHits(int this_addr, int mMaxNumHits);

    public float get_mHitReductionCosMaxAngle() {
        return internal_native_get_mHitReductionCosMaxAngle((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mHitReductionCosMaxAngle();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mHitReductionCosMaxAngle();")
    private static native float internal_native_get_mHitReductionCosMaxAngle(int this_addr);

    public void set_mHitReductionCosMaxAngle(float mHitReductionCosMaxAngle) {
        internal_native_set_mHitReductionCosMaxAngle((int) (long) getNativeData().getCPointer(), mHitReductionCosMaxAngle);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mHitReductionCosMaxAngle(mHitReductionCosMaxAngle);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mHitReductionCosMaxAngle"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mHitReductionCosMaxAngle(mHitReductionCosMaxAngle);")
    private static native void internal_native_set_mHitReductionCosMaxAngle(int this_addr, float mHitReductionCosMaxAngle);

    public float get_mPenetrationRecoverySpeed() {
        return internal_native_get_mPenetrationRecoverySpeed((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mPenetrationRecoverySpeed();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mPenetrationRecoverySpeed();")
    private static native float internal_native_get_mPenetrationRecoverySpeed(int this_addr);

    public void set_mPenetrationRecoverySpeed(float mPenetrationRecoverySpeed) {
        internal_native_set_mPenetrationRecoverySpeed((int) (long) getNativeData().getCPointer(), mPenetrationRecoverySpeed);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mPenetrationRecoverySpeed(mPenetrationRecoverySpeed);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPenetrationRecoverySpeed"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mPenetrationRecoverySpeed(mPenetrationRecoverySpeed);")
    private static native void internal_native_set_mPenetrationRecoverySpeed(int this_addr, float mPenetrationRecoverySpeed);

    public Shape get_mInnerBodyShape() {
        int pointer = internal_native_get_mInnerBodyShape((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (Shape_TEMP_GEN_0 == null)
            Shape_TEMP_GEN_0 = new Shape((byte) 1, (char) 1);
        Shape_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return Shape_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
var returnedJSObj = jsObj.get_mInnerBodyShape();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);var returnedJSObj = jsObj.get_mInnerBodyShape();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mInnerBodyShape(int this_addr);

    public void set_mInnerBodyShape(Shape mInnerBodyShape) {
        internal_native_set_mInnerBodyShape((int) (long) getNativeData().getCPointer(), (int) (long) (mInnerBodyShape != null ? mInnerBodyShape.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mInnerBodyShape(mInnerBodyShape_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mInnerBodyShape_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mInnerBodyShape(mInnerBodyShape_addr);")
    private static native void internal_native_set_mInnerBodyShape(int this_addr, int mInnerBodyShape_addr);

    public BodyID get_mInnerBodyIDOverride() {
        int pointer = internal_native_get_mInnerBodyIDOverride((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (BodyID_TEMP_GEN_0 == null)
            BodyID_TEMP_GEN_0 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return BodyID_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
var returnedJSObj = jsObj.get_mInnerBodyIDOverride();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);var returnedJSObj = jsObj.get_mInnerBodyIDOverride();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mInnerBodyIDOverride(int this_addr);

    public void set_mInnerBodyIDOverride(BodyID mInnerBodyIDOverride) {
        internal_native_set_mInnerBodyIDOverride((int) (long) getNativeData().getCPointer(), (int) (long) (mInnerBodyIDOverride != null ? mInnerBodyIDOverride.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mInnerBodyIDOverride(mInnerBodyIDOverride_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mInnerBodyIDOverride_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mInnerBodyIDOverride(mInnerBodyIDOverride_addr);")
    private static native void internal_native_set_mInnerBodyIDOverride(int this_addr, int mInnerBodyIDOverride_addr);

    public int get_mInnerBodyLayer() {
        return internal_native_get_mInnerBodyLayer((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
return jsObj.get_mInnerBodyLayer();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);return jsObj.get_mInnerBodyLayer();")
    private static native int internal_native_get_mInnerBodyLayer(int this_addr);

    public void set_mInnerBodyLayer(int mInnerBodyLayer) {
        internal_native_set_mInnerBodyLayer((int) (long) getNativeData().getCPointer(), mInnerBodyLayer);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);
jsObj.set_mInnerBodyLayer(mInnerBodyLayer);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mInnerBodyLayer"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CharacterVirtualSettings);jsObj.set_mInnerBodyLayer(mInnerBodyLayer);")
    private static native void internal_native_set_mInnerBodyLayer(int this_addr, int mInnerBodyLayer);

    public static long native_create() {
        return internal_native_create();
    }

    public static long native_get_mID(long this_addr) {
        return internal_native_get_mID((int) this_addr);
    }

    public static void native_set_mID(long this_addr, long mID_addr) {
        internal_native_set_mID((int) this_addr, (int) mID_addr);
    }

    public static float native_get_mMass(long this_addr) {
        return internal_native_get_mMass((int) this_addr);
    }

    public static void native_set_mMass(long this_addr, float mMass) {
        internal_native_set_mMass((int) this_addr, mMass);
    }

    public static float native_get_mMaxStrength(long this_addr) {
        return internal_native_get_mMaxStrength((int) this_addr);
    }

    public static void native_set_mMaxStrength(long this_addr, float mMaxStrength) {
        internal_native_set_mMaxStrength((int) this_addr, mMaxStrength);
    }

    public static long native_get_mShapeOffset(long this_addr) {
        return internal_native_get_mShapeOffset((int) this_addr);
    }

    public static void native_set_mShapeOffset(long this_addr, long mShapeOffset_addr) {
        internal_native_set_mShapeOffset((int) this_addr, (int) mShapeOffset_addr);
    }

    public static long native_get_mBackFaceMode(long this_addr) {
        return internal_native_get_mBackFaceMode((int) this_addr);
    }

    public static void native_set_mBackFaceMode(long this_addr, long mBackFaceMode) {
        internal_native_set_mBackFaceMode((int) this_addr, (int) mBackFaceMode);
    }

    public static float native_get_mPredictiveContactDistance(long this_addr) {
        return internal_native_get_mPredictiveContactDistance((int) this_addr);
    }

    public static void native_set_mPredictiveContactDistance(long this_addr, float mPredictiveContactDistance) {
        internal_native_set_mPredictiveContactDistance((int) this_addr, mPredictiveContactDistance);
    }

    public static int native_get_mMaxCollisionIterations(long this_addr) {
        return internal_native_get_mMaxCollisionIterations((int) this_addr);
    }

    public static void native_set_mMaxCollisionIterations(long this_addr, int mMaxCollisionIterations) {
        internal_native_set_mMaxCollisionIterations((int) this_addr, mMaxCollisionIterations);
    }

    public static int native_get_mMaxConstraintIterations(long this_addr) {
        return internal_native_get_mMaxConstraintIterations((int) this_addr);
    }

    public static void native_set_mMaxConstraintIterations(long this_addr, int mMaxConstraintIterations) {
        internal_native_set_mMaxConstraintIterations((int) this_addr, mMaxConstraintIterations);
    }

    public static float native_get_mMinTimeRemaining(long this_addr) {
        return internal_native_get_mMinTimeRemaining((int) this_addr);
    }

    public static void native_set_mMinTimeRemaining(long this_addr, float mMinTimeRemaining) {
        internal_native_set_mMinTimeRemaining((int) this_addr, mMinTimeRemaining);
    }

    public static float native_get_mCollisionTolerance(long this_addr) {
        return internal_native_get_mCollisionTolerance((int) this_addr);
    }

    public static void native_set_mCollisionTolerance(long this_addr, float mCollisionTolerance) {
        internal_native_set_mCollisionTolerance((int) this_addr, mCollisionTolerance);
    }

    public static float native_get_mCharacterPadding(long this_addr) {
        return internal_native_get_mCharacterPadding((int) this_addr);
    }

    public static void native_set_mCharacterPadding(long this_addr, float mCharacterPadding) {
        internal_native_set_mCharacterPadding((int) this_addr, mCharacterPadding);
    }

    public static int native_get_mMaxNumHits(long this_addr) {
        return internal_native_get_mMaxNumHits((int) this_addr);
    }

    public static void native_set_mMaxNumHits(long this_addr, int mMaxNumHits) {
        internal_native_set_mMaxNumHits((int) this_addr, mMaxNumHits);
    }

    public static float native_get_mHitReductionCosMaxAngle(long this_addr) {
        return internal_native_get_mHitReductionCosMaxAngle((int) this_addr);
    }

    public static void native_set_mHitReductionCosMaxAngle(long this_addr, float mHitReductionCosMaxAngle) {
        internal_native_set_mHitReductionCosMaxAngle((int) this_addr, mHitReductionCosMaxAngle);
    }

    public static float native_get_mPenetrationRecoverySpeed(long this_addr) {
        return internal_native_get_mPenetrationRecoverySpeed((int) this_addr);
    }

    public static void native_set_mPenetrationRecoverySpeed(long this_addr, float mPenetrationRecoverySpeed) {
        internal_native_set_mPenetrationRecoverySpeed((int) this_addr, mPenetrationRecoverySpeed);
    }

    public static long native_get_mInnerBodyShape(long this_addr) {
        return internal_native_get_mInnerBodyShape((int) this_addr);
    }

    public static void native_set_mInnerBodyShape(long this_addr, long mInnerBodyShape_addr) {
        internal_native_set_mInnerBodyShape((int) this_addr, (int) mInnerBodyShape_addr);
    }

    public static long native_get_mInnerBodyIDOverride(long this_addr) {
        return internal_native_get_mInnerBodyIDOverride((int) this_addr);
    }

    public static void native_set_mInnerBodyIDOverride(long this_addr, long mInnerBodyIDOverride_addr) {
        internal_native_set_mInnerBodyIDOverride((int) this_addr, (int) mInnerBodyIDOverride_addr);
    }

    public static int native_get_mInnerBodyLayer(long this_addr) {
        return internal_native_get_mInnerBodyLayer((int) this_addr);
    }

    public static void native_set_mInnerBodyLayer(long this_addr, int mInnerBodyLayer) {
        internal_native_set_mInnerBodyLayer((int) this_addr, mInnerBodyLayer);
    }
}
