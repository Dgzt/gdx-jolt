/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.vehicle;

import gen.jolt.PhysicsStepListener;
import gen.jolt.VehicleConstraint;

public class VehicleConstraintStepListener extends PhysicsStepListener {

    static public final VehicleConstraintStepListener T_01 = new VehicleConstraintStepListener((byte) 1, (char) 1);

    static public final VehicleConstraintStepListener T_02 = new VehicleConstraintStepListener((byte) 1, (char) 1);

    static public final VehicleConstraintStepListener T_03 = new VehicleConstraintStepListener((byte) 1, (char) 1);

    public VehicleConstraintStepListener(VehicleConstraint inConstraint) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_VehicleConstraint((int) (long) (inConstraint != null ? inConstraint.getNativeData().getCPointer() : 0));
        getNativeData().reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.VehicleConstraintStepListener(inConstraint_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inConstraint_addr"}, script = "var jsObj = new jolt.VehicleConstraintStepListener(inConstraint_addr);return jolt.getPointer(jsObj);")
    private static native int internal_native_create_VehicleConstraint(int inConstraint_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public VehicleConstraintStepListener(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraintStepListener);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraintStepListener);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public static long native_create_VehicleConstraint(long inConstraint_addr) {
        return internal_native_create_VehicleConstraint((int) inConstraint_addr);
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }
}
