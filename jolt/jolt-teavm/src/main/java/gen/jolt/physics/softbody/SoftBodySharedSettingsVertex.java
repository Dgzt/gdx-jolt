/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.softbody;

import gen.jolt.idl.IDLBase;
import gen.jolt.math.Float3;

public class SoftBodySharedSettingsVertex extends IDLBase {

    private Float3 Float3_TEMP_GEN_0;

    private Float3 Float3_TEMP_GEN_1;

    static public final SoftBodySharedSettingsVertex T_01 = new SoftBodySharedSettingsVertex((byte) 1, (char) 1);

    static public final SoftBodySharedSettingsVertex T_02 = new SoftBodySharedSettingsVertex((byte) 1, (char) 1);

    static public final SoftBodySharedSettingsVertex T_03 = new SoftBodySharedSettingsVertex((byte) 1, (char) 1);

    public SoftBodySharedSettingsVertex() {
        int addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.SoftBodySharedSettingsVertex();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.SoftBodySharedSettingsVertex();return jolt.getPointer(jsObj);")
    private static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SoftBodySharedSettingsVertex(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public Float3 get_mPosition() {
        int pointer = internal_native_get_mPosition((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (Float3_TEMP_GEN_0 == null)
            Float3_TEMP_GEN_0 = new Float3((byte) 1, (char) 1);
        Float3_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return Float3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);
var returnedJSObj = jsObj.get_mPosition();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);var returnedJSObj = jsObj.get_mPosition();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mPosition(int this_addr);

    public void set_mPosition(Float3 mPosition) {
        internal_native_set_mPosition((int) (long) getNativeData().getCPointer(), (int) (long) (mPosition != null ? mPosition.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);
jsObj.set_mPosition(mPosition_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPosition_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);jsObj.set_mPosition(mPosition_addr);")
    private static native void internal_native_set_mPosition(int this_addr, int mPosition_addr);

    public Float3 get_mVelocity() {
        int pointer = internal_native_get_mVelocity((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (Float3_TEMP_GEN_1 == null)
            Float3_TEMP_GEN_1 = new Float3((byte) 1, (char) 1);
        Float3_TEMP_GEN_1.getNativeData().reset(pointer, false);
        return Float3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);
var returnedJSObj = jsObj.get_mVelocity();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);var returnedJSObj = jsObj.get_mVelocity();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mVelocity(int this_addr);

    public void set_mVelocity(Float3 mVelocity) {
        internal_native_set_mVelocity((int) (long) getNativeData().getCPointer(), (int) (long) (mVelocity != null ? mVelocity.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);
jsObj.set_mVelocity(mVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);jsObj.set_mVelocity(mVelocity_addr);")
    private static native void internal_native_set_mVelocity(int this_addr, int mVelocity_addr);

    public float get_mInvMass() {
        return internal_native_get_mInvMass((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);
return jsObj.get_mInvMass();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);return jsObj.get_mInvMass();")
    private static native float internal_native_get_mInvMass(int this_addr);

    public void set_mInvMass(float mInvMass) {
        internal_native_set_mInvMass((int) (long) getNativeData().getCPointer(), mInvMass);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);
jsObj.set_mInvMass(mInvMass);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mInvMass"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsVertex);jsObj.set_mInvMass(mInvMass);")
    private static native void internal_native_set_mInvMass(int this_addr, float mInvMass);

    public static long native_create() {
        return internal_native_create();
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static long native_get_mPosition(long this_addr) {
        return internal_native_get_mPosition((int) this_addr);
    }

    public static void native_set_mPosition(long this_addr, long mPosition_addr) {
        internal_native_set_mPosition((int) this_addr, (int) mPosition_addr);
    }

    public static long native_get_mVelocity(long this_addr) {
        return internal_native_get_mVelocity((int) this_addr);
    }

    public static void native_set_mVelocity(long this_addr, long mVelocity_addr) {
        internal_native_set_mVelocity((int) this_addr, (int) mVelocity_addr);
    }

    public static float native_get_mInvMass(long this_addr) {
        return internal_native_get_mInvMass((int) this_addr);
    }

    public static void native_set_mInvMass(long this_addr, float mInvMass) {
        internal_native_set_mInvMass((int) this_addr, mInvMass);
    }
}
