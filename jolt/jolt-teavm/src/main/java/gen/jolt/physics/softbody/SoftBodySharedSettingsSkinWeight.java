/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.softbody;

import gen.jolt.idl.IDLBase;

public class SoftBodySharedSettingsSkinWeight extends IDLBase {

    static public final SoftBodySharedSettingsSkinWeight T_01 = new SoftBodySharedSettingsSkinWeight((byte) 1, (char) 1);

    static public final SoftBodySharedSettingsSkinWeight T_02 = new SoftBodySharedSettingsSkinWeight((byte) 1, (char) 1);

    static public final SoftBodySharedSettingsSkinWeight T_03 = new SoftBodySharedSettingsSkinWeight((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public SoftBodySharedSettingsSkinWeight(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsSkinWeight);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsSkinWeight);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public int get_mInvBindIndex() {
        return internal_native_get_mInvBindIndex((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsSkinWeight);
return jsObj.get_mInvBindIndex();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsSkinWeight);return jsObj.get_mInvBindIndex();")
    private static native int internal_native_get_mInvBindIndex(int this_addr);

    public void set_mInvBindIndex(int mInvBindIndex) {
        internal_native_set_mInvBindIndex((int) (long) getNativeData().getCPointer(), mInvBindIndex);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsSkinWeight);
jsObj.set_mInvBindIndex(mInvBindIndex);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mInvBindIndex"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsSkinWeight);jsObj.set_mInvBindIndex(mInvBindIndex);")
    private static native void internal_native_set_mInvBindIndex(int this_addr, int mInvBindIndex);

    public float get_mWeight() {
        return internal_native_get_mWeight((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsSkinWeight);
return jsObj.get_mWeight();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsSkinWeight);return jsObj.get_mWeight();")
    private static native float internal_native_get_mWeight(int this_addr);

    public void set_mWeight(float mWeight) {
        internal_native_set_mWeight((int) (long) getNativeData().getCPointer(), mWeight);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsSkinWeight);
jsObj.set_mWeight(mWeight);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mWeight"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodySharedSettingsSkinWeight);jsObj.set_mWeight(mWeight);")
    private static native void internal_native_set_mWeight(int this_addr, float mWeight);

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static int native_get_mInvBindIndex(long this_addr) {
        return internal_native_get_mInvBindIndex((int) this_addr);
    }

    public static void native_set_mInvBindIndex(long this_addr, int mInvBindIndex) {
        internal_native_set_mInvBindIndex((int) this_addr, mInvBindIndex);
    }

    public static float native_get_mWeight(long this_addr) {
        return internal_native_get_mWeight((int) this_addr);
    }

    public static void native_set_mWeight(long this_addr, float mWeight) {
        internal_native_set_mWeight((int) this_addr, mWeight);
    }
}
