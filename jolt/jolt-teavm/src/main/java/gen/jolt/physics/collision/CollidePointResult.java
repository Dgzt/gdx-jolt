/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.collision;

import gen.jolt.idl.IDLBase;
import gen.jolt.physics.body.BodyID;
import gen.jolt.physics.collision.shape.SubShapeID;

public class CollidePointResult extends IDLBase {

    private BodyID BodyID_TEMP_GEN_0;

    private SubShapeID SubShapeID_TEMP_GEN_0;

    static public final CollidePointResult T_01 = new CollidePointResult((byte) 1, (char) 1);

    static public final CollidePointResult T_02 = new CollidePointResult((byte) 1, (char) 1);

    static public final CollidePointResult T_03 = new CollidePointResult((byte) 1, (char) 1);

    public CollidePointResult() {
        int addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.CollidePointResult();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.CollidePointResult();return jolt.getPointer(jsObj);")
    private static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public CollidePointResult(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CollidePointResult);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CollidePointResult);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public BodyID get_mBodyID() {
        int pointer = internal_native_get_mBodyID((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (BodyID_TEMP_GEN_0 == null)
            BodyID_TEMP_GEN_0 = new BodyID((byte) 1, (char) 1);
        BodyID_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return BodyID_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CollidePointResult);
var returnedJSObj = jsObj.get_mBodyID();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CollidePointResult);var returnedJSObj = jsObj.get_mBodyID();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mBodyID(int this_addr);

    public void set_mBodyID(BodyID mBodyID) {
        internal_native_set_mBodyID((int) (long) getNativeData().getCPointer(), (int) (long) (mBodyID != null ? mBodyID.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CollidePointResult);
jsObj.set_mBodyID(mBodyID_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mBodyID_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CollidePointResult);jsObj.set_mBodyID(mBodyID_addr);")
    private static native void internal_native_set_mBodyID(int this_addr, int mBodyID_addr);

    public SubShapeID get_mSubShapeID2() {
        int pointer = internal_native_get_mSubShapeID2((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (SubShapeID_TEMP_GEN_0 == null)
            SubShapeID_TEMP_GEN_0 = new SubShapeID((byte) 1, (char) 1);
        SubShapeID_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return SubShapeID_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CollidePointResult);
var returnedJSObj = jsObj.get_mSubShapeID2();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CollidePointResult);var returnedJSObj = jsObj.get_mSubShapeID2();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mSubShapeID2(int this_addr);

    public void set_mSubShapeID2(SubShapeID mSubShapeID2) {
        internal_native_set_mSubShapeID2((int) (long) getNativeData().getCPointer(), (int) (long) (mSubShapeID2 != null ? mSubShapeID2.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CollidePointResult);
jsObj.set_mSubShapeID2(mSubShapeID2_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mSubShapeID2_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CollidePointResult);jsObj.set_mSubShapeID2(mSubShapeID2_addr);")
    private static native void internal_native_set_mSubShapeID2(int this_addr, int mSubShapeID2_addr);

    public static long native_create() {
        return internal_native_create();
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static long native_get_mBodyID(long this_addr) {
        return internal_native_get_mBodyID((int) this_addr);
    }

    public static void native_set_mBodyID(long this_addr, long mBodyID_addr) {
        internal_native_set_mBodyID((int) this_addr, (int) mBodyID_addr);
    }

    public static long native_get_mSubShapeID2(long this_addr) {
        return internal_native_get_mSubShapeID2((int) this_addr);
    }

    public static void native_set_mSubShapeID2(long this_addr, long mSubShapeID2_addr) {
        internal_native_set_mSubShapeID2((int) this_addr, (int) mSubShapeID2_addr);
    }
}
