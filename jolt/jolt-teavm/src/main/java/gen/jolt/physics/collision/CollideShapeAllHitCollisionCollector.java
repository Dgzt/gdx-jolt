/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.collision;

import gen.jolt.physics.softbody.CollideShapeCollector;

public class CollideShapeAllHitCollisionCollector extends CollideShapeCollector {

    private ArrayCollideShapeResult ArrayCollideShapeResult_TEMP_GEN_0;

    static public final CollideShapeAllHitCollisionCollector T_01 = new CollideShapeAllHitCollisionCollector((byte) 1, (char) 1);

    static public final CollideShapeAllHitCollisionCollector T_02 = new CollideShapeAllHitCollisionCollector((byte) 1, (char) 1);

    static public final CollideShapeAllHitCollisionCollector T_03 = new CollideShapeAllHitCollisionCollector((byte) 1, (char) 1);

    public CollideShapeAllHitCollisionCollector() {
        super((byte) 1, (char) 1);
        int addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.CollideShapeAllHitCollisionCollector();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.CollideShapeAllHitCollisionCollector();return jolt.getPointer(jsObj);")
    private static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public CollideShapeAllHitCollisionCollector(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CollideShapeAllHitCollisionCollector);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CollideShapeAllHitCollisionCollector);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public void Sort() {
        internal_native_Sort((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CollideShapeAllHitCollisionCollector);
jsObj.Sort();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CollideShapeAllHitCollisionCollector);jsObj.Sort();")
    private static native void internal_native_Sort(int this_addr);

    public boolean HadHit() {
        return internal_native_HadHit((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CollideShapeAllHitCollisionCollector);
var returnedJSObj = jsObj.HadHit();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CollideShapeAllHitCollisionCollector);var returnedJSObj = jsObj.HadHit();return returnedJSObj;")
    private static native boolean internal_native_HadHit(int this_addr);

    public ArrayCollideShapeResult get_mHits() {
        int pointer = internal_native_get_mHits((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (ArrayCollideShapeResult_TEMP_GEN_0 == null)
            ArrayCollideShapeResult_TEMP_GEN_0 = new ArrayCollideShapeResult((byte) 1, (char) 1);
        ArrayCollideShapeResult_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return ArrayCollideShapeResult_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CollideShapeAllHitCollisionCollector);
var returnedJSObj = jsObj.get_mHits();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CollideShapeAllHitCollisionCollector);var returnedJSObj = jsObj.get_mHits();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mHits(int this_addr);

    public void set_mHits(ArrayCollideShapeResult mHits) {
        internal_native_set_mHits((int) (long) getNativeData().getCPointer(), (int) (long) (mHits != null ? mHits.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.CollideShapeAllHitCollisionCollector);
jsObj.set_mHits(mHits_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mHits_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.CollideShapeAllHitCollisionCollector);jsObj.set_mHits(mHits_addr);")
    private static native void internal_native_set_mHits(int this_addr, int mHits_addr);

    public static long native_create() {
        return internal_native_create();
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static void native_Sort(long this_addr) {
        internal_native_Sort((int) this_addr);
    }

    public static boolean native_HadHit(long this_addr) {
        return internal_native_HadHit((int) this_addr);
    }

    public static long native_get_mHits(long this_addr) {
        return internal_native_get_mHits((int) this_addr);
    }

    public static void native_set_mHits(long this_addr, long mHits_addr) {
        internal_native_set_mHits((int) this_addr, (int) mHits_addr);
    }
}
