/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt;

import gen.jolt.idl.IDLBase;
import gen.jolt.math.Vec3;

public class OrientedBox extends IDLBase {

    private Mat44 Mat44_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_0;

    static public final OrientedBox T_01 = new OrientedBox((byte) 1, (char) 1);

    static public final OrientedBox T_02 = new OrientedBox((byte) 1, (char) 1);

    static public final OrientedBox T_03 = new OrientedBox((byte) 1, (char) 1);

    public OrientedBox() {
        int addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.OrientedBox();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.OrientedBox();return jolt.getPointer(jsObj);")
    private static native int internal_native_create();

    public OrientedBox(Mat44 inOrientation, Vec3 inHalfExtents) {
        int addr = internal_native_create_Mat44_Vec3((int) (long) (inOrientation != null ? inOrientation.getNativeData().getCPointer() : 0), (int) (long) (inHalfExtents != null ? inHalfExtents.getNativeData().getCPointer() : 0));
        getNativeData().reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.OrientedBox(inOrientation_addr, inHalfExtents_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inOrientation_addr", "inHalfExtents_addr"}, script = "var jsObj = new jolt.OrientedBox(inOrientation_addr, inHalfExtents_addr);return jolt.getPointer(jsObj);")
    private static native int internal_native_create_Mat44_Vec3(int inOrientation_addr, int inHalfExtents_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public OrientedBox(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.OrientedBox);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.OrientedBox);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public Mat44 get_mOrientation() {
        int pointer = internal_native_get_mOrientation((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (Mat44_TEMP_GEN_0 == null)
            Mat44_TEMP_GEN_0 = new Mat44((byte) 1, (char) 1);
        Mat44_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return Mat44_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.OrientedBox);
var returnedJSObj = jsObj.get_mOrientation();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.OrientedBox);var returnedJSObj = jsObj.get_mOrientation();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mOrientation(int this_addr);

    public void set_mOrientation(Mat44 mOrientation) {
        internal_native_set_mOrientation((int) (long) getNativeData().getCPointer(), (int) (long) (mOrientation != null ? mOrientation.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.OrientedBox);
jsObj.set_mOrientation(mOrientation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mOrientation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.OrientedBox);jsObj.set_mOrientation(mOrientation_addr);")
    private static native void internal_native_set_mOrientation(int this_addr, int mOrientation_addr);

    public Vec3 get_mHalfExtents() {
        int pointer = internal_native_get_mHalfExtents((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = new Vec3((byte) 1, (char) 1);
        Vec3_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.OrientedBox);
var returnedJSObj = jsObj.get_mHalfExtents();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.OrientedBox);var returnedJSObj = jsObj.get_mHalfExtents();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_get_mHalfExtents(int this_addr);

    public void set_mHalfExtents(Vec3 mHalfExtents) {
        internal_native_set_mHalfExtents((int) (long) getNativeData().getCPointer(), (int) (long) (mHalfExtents != null ? mHalfExtents.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.OrientedBox);
jsObj.set_mHalfExtents(mHalfExtents_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mHalfExtents_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.OrientedBox);jsObj.set_mHalfExtents(mHalfExtents_addr);")
    private static native void internal_native_set_mHalfExtents(int this_addr, int mHalfExtents_addr);

    public static long native_create() {
        return internal_native_create();
    }

    public static long native_create_Mat44_Vec3(long inOrientation_addr, long inHalfExtents_addr) {
        return internal_native_create_Mat44_Vec3((int) inOrientation_addr, (int) inHalfExtents_addr);
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static long native_get_mOrientation(long this_addr) {
        return internal_native_get_mOrientation((int) this_addr);
    }

    public static void native_set_mOrientation(long this_addr, long mOrientation_addr) {
        internal_native_set_mOrientation((int) this_addr, (int) mOrientation_addr);
    }

    public static long native_get_mHalfExtents(long this_addr) {
        return internal_native_get_mHalfExtents((int) this_addr);
    }

    public static void native_set_mHalfExtents(long this_addr, long mHalfExtents_addr) {
        internal_native_set_mHalfExtents((int) this_addr, (int) mHalfExtents_addr);
    }
}
