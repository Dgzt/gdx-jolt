/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.math;

import gen.jolt.idl.IDLBase;

public class Vector2 extends IDLBase {

    private Vector2 Vector2_TEMP_GEN_0;

    static public final Vector2 T_01 = new Vector2((byte) 1, (char) 1);

    static public final Vector2 T_02 = new Vector2((byte) 1, (char) 1);

    static public final Vector2 T_03 = new Vector2((byte) 1, (char) 1);

    public Vector2() {
        int addr = internal_native_create();
        getNativeData().reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.Vector2();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.Vector2();return jolt.getPointer(jsObj);")
    private static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public Vector2(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public void SetZero() {
        internal_native_SetZero((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);
jsObj.SetZero();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);jsObj.SetZero();")
    private static native void internal_native_SetZero(int this_addr);

    public void IsZero() {
        internal_native_IsZero((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);
jsObj.IsZero();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);jsObj.IsZero();")
    private static native void internal_native_IsZero(int this_addr);

    public void IsClose(Vector2 inV, float inMaxDistSq) {
        internal_native_IsClose((int) (long) getNativeData().getCPointer(), (int) (long) (inV != null ? inV.getNativeData().getCPointer() : 0), inMaxDistSq);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);
jsObj.IsClose(inV_addr, inMaxDistSq);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inV_addr", "inMaxDistSq"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);jsObj.IsClose(inV_addr, inMaxDistSq);")
    private static native void internal_native_IsClose(int this_addr, int inV_addr, float inMaxDistSq);

    public void IsClose(Vector2 inV) {
        internal_native_IsClose((int) (long) getNativeData().getCPointer(), (int) (long) (inV != null ? inV.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);
jsObj.IsClose(inV_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inV_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);jsObj.IsClose(inV_addr);")
    private static native void internal_native_IsClose(int this_addr, int inV_addr);

    public void IsNormalized(float inTolerance) {
        internal_native_IsNormalized((int) (long) getNativeData().getCPointer(), inTolerance);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);
jsObj.IsNormalized(inTolerance);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inTolerance"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);jsObj.IsNormalized(inTolerance);")
    private static native void internal_native_IsNormalized(int this_addr, float inTolerance);

    public void IsNormalized() {
        internal_native_IsNormalized((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);
jsObj.IsNormalized();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);jsObj.IsNormalized();")
    private static native void internal_native_IsNormalized(int this_addr);

    public Vector2 Normalized() {
        int pointer = internal_native_Normalized((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            return null;
        if (Vector2_TEMP_GEN_0 == null)
            Vector2_TEMP_GEN_0 = new Vector2((byte) 1, (char) 1);
        Vector2_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return Vector2_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);
var returnedJSObj = jsObj.Normalized();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);var returnedJSObj = jsObj.Normalized();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_Normalized(int this_addr);

    public float Dot(Vector2 inRHS) {
        return internal_native_Dot((int) (long) getNativeData().getCPointer(), (int) (long) (inRHS != null ? inRHS.getNativeData().getCPointer() : 0));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);
var returnedJSObj = jsObj.Dot(inRHS_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inRHS_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Vector2);var returnedJSObj = jsObj.Dot(inRHS_addr);return returnedJSObj;")
    private static native float internal_native_Dot(int this_addr, int inRHS_addr);

    public static long native_create() {
        return internal_native_create();
    }

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static void native_SetZero(long this_addr) {
        internal_native_SetZero((int) this_addr);
    }

    public static void native_IsZero(long this_addr) {
        internal_native_IsZero((int) this_addr);
    }

    public static void native_IsClose(long this_addr, long inV_addr, float inMaxDistSq) {
        internal_native_IsClose((int) this_addr, (int) inV_addr, inMaxDistSq);
    }

    public static void native_IsClose(long this_addr, long inV_addr) {
        internal_native_IsClose((int) this_addr, (int) inV_addr);
    }

    public static void native_IsNormalized(long this_addr, float inTolerance) {
        internal_native_IsNormalized((int) this_addr, inTolerance);
    }

    public static void native_IsNormalized(long this_addr) {
        internal_native_IsNormalized((int) this_addr);
    }

    public static long native_Normalized(long this_addr) {
        return internal_native_Normalized((int) this_addr);
    }

    public static float native_Dot(long this_addr, long inRHS_addr) {
        return internal_native_Dot((int) this_addr, (int) inRHS_addr);
    }
}
