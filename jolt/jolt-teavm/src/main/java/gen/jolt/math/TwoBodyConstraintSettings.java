/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.math;

import gen.jolt.physics.constraints.ConstraintSettings;
import gen.jolt.physics.body.Body;
import gen.jolt.physics.constraints.Constraint;

public class TwoBodyConstraintSettings extends ConstraintSettings {

    private Constraint Constraint_TEMP_GEN_0;

    static public final TwoBodyConstraintSettings NULL = TwoBodyConstraintSettings.createInstance();

    static public final TwoBodyConstraintSettings T_01 = TwoBodyConstraintSettings.createInstance();

    static public final TwoBodyConstraintSettings T_02 = TwoBodyConstraintSettings.createInstance();

    static public final TwoBodyConstraintSettings T_03 = TwoBodyConstraintSettings.createInstance();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected TwoBodyConstraintSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static TwoBodyConstraintSettings createInstance() {
        return new TwoBodyConstraintSettings((byte) 0, (char) 0);
    }

    public Constraint Create(Body inBody1, Body inBody2) {
        int pointer = internal_native_Create(native_address, inBody1.native_address, inBody2.native_address);
        if (pointer == 0)
            return null;
        if (Constraint_TEMP_GEN_0 == null)
            Constraint_TEMP_GEN_0 = Constraint.createInstance();
        Constraint_TEMP_GEN_0.internal_reset(pointer, false);
        return Constraint_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.TwoBodyConstraintSettings);
var returnedJSObj = jsObj.Create(inBody1_addr, inBody2_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inBody1_addr", "inBody2_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.TwoBodyConstraintSettings);var returnedJSObj = jsObj.Create(inBody1_addr, inBody2_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_Create(int this_addr, int inBody1_addr, int inBody2_addr);
}
