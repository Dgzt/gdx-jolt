/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.math;

import gen.jolt.idl.IDLBase;

public class ArrayUint extends IDLBase {

    private UintMemRef UintMemRef_TEMP_GEN_0;

    static public final ArrayUint T_01 = new ArrayUint((byte) 1, (char) 1);

    static public final ArrayUint T_02 = new ArrayUint((byte) 1, (char) 1);

    static public final ArrayUint T_03 = new ArrayUint((byte) 1, (char) 1);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    public ArrayUint(byte b, char c) {
    }

    public void dispose() {
        super.dispose();
    }

    public boolean isDisposed() {
        return super.isDisposed();
    }

    protected void deleteNative() {
        internal_native_deleteNative((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);jolt.destroy(jsObj);")
    private static native void internal_native_deleteNative(int this_addr);

    public boolean empty() {
        return internal_native_empty((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);
var returnedJSObj = jsObj.empty();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);var returnedJSObj = jsObj.empty();return returnedJSObj;")
    private static native boolean internal_native_empty(int this_addr);

    public int size() {
        return internal_native_size((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);
var returnedJSObj = jsObj.size();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);var returnedJSObj = jsObj.size();return returnedJSObj;")
    private static native int internal_native_size(int this_addr);

    public int at(int inIndex) {
        return internal_native_at((int) (long) getNativeData().getCPointer(), inIndex);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);
var returnedJSObj = jsObj.at(inIndex);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inIndex"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);var returnedJSObj = jsObj.at(inIndex);return returnedJSObj;")
    private static native int internal_native_at(int this_addr, int inIndex);

    public void push_back(int inValue) {
        internal_native_push_back((int) (long) getNativeData().getCPointer(), inValue);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);
jsObj.push_back(inValue);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inValue"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);jsObj.push_back(inValue);")
    private static native void internal_native_push_back(int this_addr, int inValue);

    public void reserve(int inSize) {
        internal_native_reserve((int) (long) getNativeData().getCPointer(), inSize);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);
jsObj.reserve(inSize);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSize"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);jsObj.reserve(inSize);")
    private static native void internal_native_reserve(int this_addr, int inSize);

    public void resize(int inSize) {
        internal_native_resize((int) (long) getNativeData().getCPointer(), inSize);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);
jsObj.resize(inSize);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSize"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);jsObj.resize(inSize);")
    private static native void internal_native_resize(int this_addr, int inSize);

    public void clear() {
        internal_native_clear((int) (long) getNativeData().getCPointer());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);
jsObj.clear();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);jsObj.clear();")
    private static native void internal_native_clear(int this_addr);

    public UintMemRef data() {
        int pointer = internal_native_data((int) (long) getNativeData().getCPointer());
        if (pointer == 0)
            throw new RuntimeException("Pointer is null");
        if (UintMemRef_TEMP_GEN_0 == null)
            UintMemRef_TEMP_GEN_0 = new UintMemRef((byte) 1, (char) 1);
        UintMemRef_TEMP_GEN_0.getNativeData().reset(pointer, false);
        return UintMemRef_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);
var returnedJSObj = jsObj.data();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.ArrayUint);var returnedJSObj = jsObj.data();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    private static native int internal_native_data(int this_addr);

    public static void native_deleteNative(long this_addr) {
        internal_native_deleteNative((int) this_addr);
    }

    public static boolean native_empty(long this_addr) {
        return internal_native_empty((int) this_addr);
    }

    public static int native_size(long this_addr) {
        return internal_native_size((int) this_addr);
    }

    public static int native_at(long this_addr, int inIndex) {
        return internal_native_at((int) this_addr, inIndex);
    }

    public static void native_push_back(long this_addr, int inValue) {
        internal_native_push_back((int) this_addr, inValue);
    }

    public static void native_reserve(long this_addr, int inSize) {
        internal_native_reserve((int) this_addr, inSize);
    }

    public static void native_resize(long this_addr, int inSize) {
        internal_native_resize((int) this_addr, inSize);
    }

    public static void native_clear(long this_addr) {
        internal_native_clear((int) this_addr);
    }

    public static long native_data(long this_addr) {
        return internal_native_data((int) this_addr);
    }
}
